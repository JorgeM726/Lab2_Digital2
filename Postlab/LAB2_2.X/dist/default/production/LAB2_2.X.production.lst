

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 27 22:55:41 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54     0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     000E                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0014                     	;# 
   112     0015                     	;# 
   113     0015                     	;# 
   114     0016                     	;# 
   115     0017                     	;# 
   116     0018                     	;# 
   117     0019                     	;# 
   118     001A                     	;# 
   119     001B                     	;# 
   120     001B                     	;# 
   121     001C                     	;# 
   122     001D                     	;# 
   123     001E                     	;# 
   124     001F                     	;# 
   125     0081                     	;# 
   126     0085                     	;# 
   127     0086                     	;# 
   128     0087                     	;# 
   129     0088                     	;# 
   130     0089                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     008E                     	;# 
   134     008F                     	;# 
   135     0090                     	;# 
   136     0091                     	;# 
   137     0092                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0094                     	;# 
   142     0095                     	;# 
   143     0096                     	;# 
   144     0097                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009A                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     009F                     	;# 
   153     0105                     	;# 
   154     0107                     	;# 
   155     0108                     	;# 
   156     0109                     	;# 
   157     010C                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     0185                     	;# 
   163     0187                     	;# 
   164     0188                     	;# 
   165     0189                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     0007                     	;# 
   176     0008                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001B                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001D                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     0086                     	;# 
   206     0087                     	;# 
   207     0088                     	;# 
   208     0089                     	;# 
   209     008C                     	;# 
   210     008D                     	;# 
   211     008E                     	;# 
   212     008F                     	;# 
   213     0090                     	;# 
   214     0091                     	;# 
   215     0092                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0095                     	;# 
   221     0096                     	;# 
   222     0097                     	;# 
   223     0098                     	;# 
   224     0099                     	;# 
   225     009A                     	;# 
   226     009B                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     0105                     	;# 
   232     0107                     	;# 
   233     0108                     	;# 
   234     0109                     	;# 
   235     010C                     	;# 
   236     010C                     	;# 
   237     010D                     	;# 
   238     010E                     	;# 
   239     010F                     	;# 
   240     0185                     	;# 
   241     0187                     	;# 
   242     0188                     	;# 
   243     0189                     	;# 
   244     018C                     	;# 
   245     018D                     	;# 
   246     0000                     	;# 
   247     0001                     	;# 
   248     0002                     	;# 
   249     0003                     	;# 
   250     0004                     	;# 
   251     0005                     	;# 
   252     0006                     	;# 
   253     0007                     	;# 
   254     0008                     	;# 
   255     0009                     	;# 
   256     000A                     	;# 
   257     000B                     	;# 
   258     000C                     	;# 
   259     000D                     	;# 
   260     000E                     	;# 
   261     000E                     	;# 
   262     000F                     	;# 
   263     0010                     	;# 
   264     0011                     	;# 
   265     0012                     	;# 
   266     0013                     	;# 
   267     0014                     	;# 
   268     0015                     	;# 
   269     0015                     	;# 
   270     0016                     	;# 
   271     0017                     	;# 
   272     0018                     	;# 
   273     0019                     	;# 
   274     001A                     	;# 
   275     001B                     	;# 
   276     001B                     	;# 
   277     001C                     	;# 
   278     001D                     	;# 
   279     001E                     	;# 
   280     001F                     	;# 
   281     0081                     	;# 
   282     0085                     	;# 
   283     0086                     	;# 
   284     0087                     	;# 
   285     0088                     	;# 
   286     0089                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     008E                     	;# 
   290     008F                     	;# 
   291     0090                     	;# 
   292     0091                     	;# 
   293     0092                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0094                     	;# 
   298     0095                     	;# 
   299     0096                     	;# 
   300     0097                     	;# 
   301     0098                     	;# 
   302     0099                     	;# 
   303     009A                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     009F                     	;# 
   309     0105                     	;# 
   310     0107                     	;# 
   311     0108                     	;# 
   312     0109                     	;# 
   313     010C                     	;# 
   314     010C                     	;# 
   315     010D                     	;# 
   316     010E                     	;# 
   317     010F                     	;# 
   318     0185                     	;# 
   319     0187                     	;# 
   320     0188                     	;# 
   321     0189                     	;# 
   322     018C                     	;# 
   323     018D                     	;# 
   324     0000                     	;# 
   325     0001                     	;# 
   326     0002                     	;# 
   327     0003                     	;# 
   328     0004                     	;# 
   329     0005                     	;# 
   330     0006                     	;# 
   331     0007                     	;# 
   332     0008                     	;# 
   333     0009                     	;# 
   334     000A                     	;# 
   335     000B                     	;# 
   336     000C                     	;# 
   337     000D                     	;# 
   338     000E                     	;# 
   339     000E                     	;# 
   340     000F                     	;# 
   341     0010                     	;# 
   342     0011                     	;# 
   343     0012                     	;# 
   344     0013                     	;# 
   345     0014                     	;# 
   346     0015                     	;# 
   347     0015                     	;# 
   348     0016                     	;# 
   349     0017                     	;# 
   350     0018                     	;# 
   351     0019                     	;# 
   352     001A                     	;# 
   353     001B                     	;# 
   354     001B                     	;# 
   355     001C                     	;# 
   356     001D                     	;# 
   357     001E                     	;# 
   358     001F                     	;# 
   359     0081                     	;# 
   360     0085                     	;# 
   361     0086                     	;# 
   362     0087                     	;# 
   363     0088                     	;# 
   364     0089                     	;# 
   365     008C                     	;# 
   366     008D                     	;# 
   367     008E                     	;# 
   368     008F                     	;# 
   369     0090                     	;# 
   370     0091                     	;# 
   371     0092                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0093                     	;# 
   375     0094                     	;# 
   376     0095                     	;# 
   377     0096                     	;# 
   378     0097                     	;# 
   379     0098                     	;# 
   380     0099                     	;# 
   381     009A                     	;# 
   382     009B                     	;# 
   383     009C                     	;# 
   384     009D                     	;# 
   385     009E                     	;# 
   386     009F                     	;# 
   387     0105                     	;# 
   388     0107                     	;# 
   389     0108                     	;# 
   390     0109                     	;# 
   391     010C                     	;# 
   392     010C                     	;# 
   393     010D                     	;# 
   394     010E                     	;# 
   395     010F                     	;# 
   396     0185                     	;# 
   397     0187                     	;# 
   398     0188                     	;# 
   399     0189                     	;# 
   400     018C                     	;# 
   401     018D                     	;# 
   402     0000                     	;# 
   403     0001                     	;# 
   404     0002                     	;# 
   405     0003                     	;# 
   406     0004                     	;# 
   407     0005                     	;# 
   408     0006                     	;# 
   409     0007                     	;# 
   410     0008                     	;# 
   411     0009                     	;# 
   412     000A                     	;# 
   413     000B                     	;# 
   414     000C                     	;# 
   415     000D                     	;# 
   416     000E                     	;# 
   417     000E                     	;# 
   418     000F                     	;# 
   419     0010                     	;# 
   420     0011                     	;# 
   421     0012                     	;# 
   422     0013                     	;# 
   423     0014                     	;# 
   424     0015                     	;# 
   425     0015                     	;# 
   426     0016                     	;# 
   427     0017                     	;# 
   428     0018                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001B                     	;# 
   433     001C                     	;# 
   434     001D                     	;# 
   435     001E                     	;# 
   436     001F                     	;# 
   437     0081                     	;# 
   438     0085                     	;# 
   439     0086                     	;# 
   440     0087                     	;# 
   441     0088                     	;# 
   442     0089                     	;# 
   443     008C                     	;# 
   444     008D                     	;# 
   445     008E                     	;# 
   446     008F                     	;# 
   447     0090                     	;# 
   448     0091                     	;# 
   449     0092                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0093                     	;# 
   453     0094                     	;# 
   454     0095                     	;# 
   455     0096                     	;# 
   456     0097                     	;# 
   457     0098                     	;# 
   458     0099                     	;# 
   459     009A                     	;# 
   460     009B                     	;# 
   461     009C                     	;# 
   462     009D                     	;# 
   463     009E                     	;# 
   464     009F                     	;# 
   465     0105                     	;# 
   466     0107                     	;# 
   467     0108                     	;# 
   468     0109                     	;# 
   469     010C                     	;# 
   470     010C                     	;# 
   471     010D                     	;# 
   472     010E                     	;# 
   473     010F                     	;# 
   474     0185                     	;# 
   475     0187                     	;# 
   476     0188                     	;# 
   477     0189                     	;# 
   478     018C                     	;# 
   479     018D                     	;# 
   480                           
   481                           	psect	idataBANK1
   482     124F                     __pidataBANK1:
   483                           
   484                           ;initializer for _channels
   485     124F  3400               	retlw	0
   486     1250  3400               	retlw	0
   487     1251  3401               	retlw	1
   488     1252  3400               	retlw	0
   489     0019                     _TXREG	set	25
   490     0018                     _RCSTAbits	set	24
   491     001E                     _ADRESH	set	30
   492     000B                     _INTCONbits	set	11
   493     0009                     _PORTE	set	9
   494     0007                     _PORTC	set	7
   495     0005                     _PORTA	set	5
   496     001F                     _ADCON0bits	set	31
   497     001A                     _RCREG	set	26
   498     0008                     _PORTD	set	8
   499     000C                     _PIR1bits	set	12
   500     003D                     _RC5	set	61
   501     003C                     _RC4	set	60
   502     0065                     _RCIF	set	101
   503     0099                     _SPBRG	set	153
   504     0098                     _TXSTAbits	set	152
   505     008C                     _PIE1bits	set	140
   506     009F                     _ADCON1bits	set	159
   507     008F                     _OSCCONbits	set	143
   508     0088                     _TRISDbits	set	136
   509     0087                     _TRISCbits	set	135
   510     0085                     _TRISA	set	133
   511     0088                     _TRISD	set	136
   512     0089                     _TRISE	set	137
   513     04C1                     _TRMT	set	1217
   514     0187                     _BAUDCTLbits	set	391
   515     0189                     _ANSELH	set	393
   516     0188                     _ANSEL	set	392
   517                           
   518                           	psect	strings
   519     1000                     __pstrings:
   520     1000                     stringtab:
   521     1000                     __stringtab:
   522                           
   523                           ;	String table - string pointers are 1 byte each
   524     1000  1BFF               	btfsc	btemp+1,7
   525     1001  280A               	ljmp	stringcode
   526     1002  1383               	bcf	3,7
   527     1003  187F               	btfsc	btemp+1,0
   528     1004  1783               	bsf	3,7
   529     1005  0800               	movf	0,w
   530     1006  0A84               	incf	4,f
   531     1007  1903               	skipnz
   532     1008  0AFF               	incf	btemp+1,f
   533     1009  0008               	return
   534     100A                     stringcode:
   535     100A                     stringdir:
   536     100A  3010               	movlw	high stringdir
   537     100B  008A               	movwf	10
   538     100C  0804               	movf	4,w
   539     100D  0A84               	incf	4,f
   540     100E  0782               	addwf	2,f
   541     100F                     __stringbase:
   542     100F  3400               	retlw	0
   543     1010                     __end_of__stringtab:
   544     1010                     STR_2:
   545     1010  3450               	retlw	80	;'P'
   546     1011  344F               	retlw	79	;'O'
   547     1012  3454               	retlw	84	;'T'
   548     1013  343A               	retlw	58	;':'
   549     1014  3420               	retlw	32	;' '
   550     1015  3420               	retlw	32	;' '
   551     1016  3420               	retlw	32	;' '
   552     1017  3420               	retlw	32	;' '
   553     1018  3443               	retlw	67	;'C'
   554     1019  344F               	retlw	79	;'O'
   555     101A  344E               	retlw	78	;'N'
   556     101B  3454               	retlw	84	;'T'
   557     101C  343A               	retlw	58	;':'
   558     101D  3400               	retlw	0
   559     101E                     STR_1:
   560     101E  3420               	retlw	32	;' '
   561     101F  3400               	retlw	0
   562                           
   563                           	psect	cinit
   564     0013                     start_initialization:	
   565                           ; #config settings
   566                           
   567     0013                     __initialization:
   568                           
   569                           ; Initialize objects allocated to BANK1
   570     0013  1683               	bsf	3,5	;RP0=1, select bank1
   571     0014  1303               	bcf	3,6	;RP1=0, select bank1
   572     0015  160A  118A  224F  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   573     001A  00E3               	movwf	__pdataBANK1& (0+127)
   574     001B  160A  118A  2250  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   575     0020  00E4               	movwf	(__pdataBANK1+1)& (0+127)
   576     0021  160A  118A  2251  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   577     0026  00E5               	movwf	(__pdataBANK1+2)& (0+127)
   578     0027  160A  118A  2252  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   579     002C  00E6               	movwf	(__pdataBANK1+3)& (0+127)
   580                           
   581                           ; Clear objects allocated to BANK3
   582     002D  1783               	bsf	3,7	;select IRP bank2
   583     002E  3090               	movlw	low __pbssBANK3
   584     002F  0084               	movwf	4
   585     0030  30A4               	movlw	low (__pbssBANK3+20)
   586     0031  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   587                           
   588                           ; Clear objects allocated to BANK1
   589     0036  1383               	bcf	3,7	;select IRP bank0
   590     0037  30DA               	movlw	low __pbssBANK1
   591     0038  0084               	movwf	4
   592     0039  30E3               	movlw	low (__pbssBANK1+9)
   593     003A  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   594                           
   595                           ; Clear objects allocated to BANK0
   596     003F  3058               	movlw	low __pbssBANK0
   597     0040  0084               	movwf	4
   598     0041  3070               	movlw	low (__pbssBANK0+24)
   599     0042  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   600     0047                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603     0047                     __end_of__initialization:
   604     0047  0183               	clrf	3
   605     0048  120A  158A  280F   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssBANK0
   608     0058                     __pbssBANK0:
   609     0058                     _numero2:
   610     0058                     	ds	2
   611     005A                     _numero:
   612     005A                     	ds	2
   613     005C                     _buffer:
   614     005C                     	ds	20
   615                           
   616                           	psect	bssBANK1
   617     00DA                     __pbssBANK1:
   618     00DA                     _volt:
   619     00DA                     	ds	4
   620     00DE                     adc_change_channel@temp_channel:
   621     00DE                     	ds	2
   622     00E0                     _x:
   623     00E0                     	ds	2
   624     00E2                     _cont:
   625     00E2                     	ds	1
   626                           
   627                           	psect	dataBANK1
   628     00E3                     __pdataBANK1:
   629     00E3                     _channels:
   630     00E3                     	ds	4
   631                           
   632                           	psect	bssBANK3
   633     0190                     __pbssBANK3:
   634     0190                     _buffer2:
   635     0190                     	ds	20
   636                           
   637                           	psect	clrtext
   638     07F8                     clear_ram0:	
   639                           ;	Called with FSR containing the base address, and
   640                           ;	W with the last address+1
   641                           
   642     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   643     07F9                     clrloop0:
   644     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   645     07FA  0A84               	incf	4,f	;increment pointer
   646     07FB  0604               	xorwf	4,w	;XOR with final address
   647     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   648     07FD  3400               	retlw	0	;all done for this memory range, return
   649     07FE  0604               	xorwf	4,w	;XOR again to restore value
   650     07FF  2FF9               	goto	clrloop0	;do the next byte
   651                           
   652                           	psect	cstackBANK1
   653     00A0                     __pcstackBANK1:
   654     00A0                     ?___flge:
   655     00A0                     ?_adc_change_channel:	
   656                           ; 1 bit 
   657                           
   658     00A0                     ?_adc_init:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     00A0                     ?_reverse:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     00A0                     ??_Lcd_Cmd:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     00A0                     ??_Lcd_Write:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     00A0                     ??_USART_send:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     00A0                     ?__Umul8_16:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     00A0                     ?___awdiv:	
   677                           ; 2 bytes @ 0x0
   678                           
   679     00A0                     ?___awmod:	
   680                           ; 2 bytes @ 0x0
   681                           
   682     00A0                     ?___lldiv:	
   683                           ; 2 bytes @ 0x0
   684                           
   685     00A0                     ?___flneg:	
   686                           ; 4 bytes @ 0x0
   687                           
   688     00A0                     ?___fladd:	
   689                           ; 4 bytes @ 0x0
   690                           
   691     00A0                     ?___xxtofl:	
   692                           ; 4 bytes @ 0x0
   693                           
   694     00A0                     USART_send@data:	
   695                           ; 4 bytes @ 0x0
   696                           
   697     00A0                     __Umul8_16@multiplicand:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     00A0                     reverse@str:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     00A0                     adc_init@channel:	
   704                           ; 2 bytes @ 0x0
   705                           
   706     00A0                     adc_change_channel@length:	
   707                           ; 2 bytes @ 0x0
   708                           
   709     00A0                     ___awdiv@divisor:	
   710                           ; 2 bytes @ 0x0
   711                           
   712     00A0                     ___awmod@divisor:	
   713                           ; 2 bytes @ 0x0
   714                           
   715     00A0                     ___lldiv@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718     00A0                     ___flge@ff1:	
   719                           ; 4 bytes @ 0x0
   720                           
   721     00A0                     ___flneg@f1:	
   722                           ; 4 bytes @ 0x0
   723                           
   724     00A0                     ___fladd@b:	
   725                           ; 4 bytes @ 0x0
   726                           
   727     00A0                     ___xxtofl@val:	
   728                           ; 4 bytes @ 0x0
   729                           
   730                           
   731                           ; 4 bytes @ 0x0
   732     00A0                     	ds	1
   733     00A1                     ?_USART_print:
   734     00A1                     Lcd_Write@a:	
   735                           ; 1 bytes @ 0x1
   736                           
   737     00A1                     USART_print@string:	
   738                           ; 1 bytes @ 0x1
   739                           
   740                           
   741                           ; 2 bytes @ 0x1
   742     00A1                     	ds	1
   743     00A2                     ??_adc_change_channel:
   744     00A2                     ?_Lcd_Write_Str:	
   745                           ; 1 bytes @ 0x2
   746                           
   747     00A2                     ??_adc_init:	
   748                           ; 1 bytes @ 0x2
   749                           
   750     00A2                     ??__Umul8_16:	
   751                           ; 1 bytes @ 0x2
   752                           
   753     00A2                     Lcd_Cmd@a:	
   754                           ; 1 bytes @ 0x2
   755                           
   756     00A2                     reverse@length:	
   757                           ; 1 bytes @ 0x2
   758                           
   759     00A2                     Lcd_Write_Str@a:	
   760                           ; 2 bytes @ 0x2
   761                           
   762     00A2                     ___awdiv@dividend:	
   763                           ; 2 bytes @ 0x2
   764                           
   765     00A2                     ___awmod@dividend:	
   766                           ; 2 bytes @ 0x2
   767                           
   768                           
   769                           ; 2 bytes @ 0x2
   770     00A2                     	ds	1
   771     00A3                     ??_USART_print:
   772     00A3                     ?_Lcd_Set:	
   773                           ; 1 bytes @ 0x3
   774                           
   775     00A3                     ??_Lcd_Init:	
   776                           ; 1 bytes @ 0x3
   777                           
   778     00A3                     ??_Lcd_Clear:	
   779                           ; 1 bytes @ 0x3
   780                           
   781     00A3                     Lcd_Set@b:	
   782                           ; 1 bytes @ 0x3
   783                           
   784                           
   785                           ; 1 bytes @ 0x3
   786     00A3                     	ds	1
   787     00A4                     ??_Lcd_Set:
   788     00A4                     ??_Lcd_Write_Str:	
   789                           ; 1 bytes @ 0x4
   790                           
   791     00A4                     ??_reverse:	
   792                           ; 1 bytes @ 0x4
   793                           
   794     00A4                     ??___awdiv:	
   795                           ; 1 bytes @ 0x4
   796                           
   797     00A4                     ??___awmod:	
   798                           ; 1 bytes @ 0x4
   799                           
   800     00A4                     ??___flneg:	
   801                           ; 1 bytes @ 0x4
   802                           
   803     00A4                     ??___xxtofl:	
   804                           ; 1 bytes @ 0x4
   805                           
   806     00A4                     Lcd_Set@a:	
   807                           ; 1 bytes @ 0x4
   808                           
   809     00A4                     __Umul8_16@product:	
   810                           ; 1 bytes @ 0x4
   811                           
   812     00A4                     ___lldiv@dividend:	
   813                           ; 2 bytes @ 0x4
   814                           
   815     00A4                     ___flge@ff2:	
   816                           ; 4 bytes @ 0x4
   817                           
   818     00A4                     ___fladd@a:	
   819                           ; 4 bytes @ 0x4
   820                           
   821                           
   822                           ; 4 bytes @ 0x4
   823     00A4                     	ds	1
   824     00A5                     adc_change_channel@channel:
   825     00A5                     ___awdiv@counter:	
   826                           ; 1 bytes @ 0x5
   827                           
   828     00A5                     ___awmod@counter:	
   829                           ; 1 bytes @ 0x5
   830                           
   831                           
   832                           ; 1 bytes @ 0x5
   833     00A5                     	ds	1
   834     00A6                     ___awdiv@sign:
   835     00A6                     ___awmod@sign:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     00A6                     USART_print@i:	
   839                           ; 1 bytes @ 0x6
   840                           
   841     00A6                     __Umul8_16@word_mpld:	
   842                           ; 2 bytes @ 0x6
   843                           
   844                           
   845                           ; 2 bytes @ 0x6
   846     00A6                     	ds	1
   847     00A7                     Lcd_Write_Str@i:
   848     00A7                     ___awdiv@quotient:	
   849                           ; 2 bytes @ 0x7
   850                           
   851                           
   852                           ; 2 bytes @ 0x7
   853     00A7                     	ds	1
   854     00A8                     ??___lldiv:
   855     00A8                     ??___flge:	
   856                           ; 1 bytes @ 0x8
   857                           
   858     00A8                     ??___fladd:	
   859                           ; 1 bytes @ 0x8
   860                           
   861     00A8                     __Umul8_16@multiplier:	
   862                           ; 1 bytes @ 0x8
   863                           
   864     00A8                     ___xxtofl@sign:	
   865                           ; 1 bytes @ 0x8
   866                           
   867                           
   868                           ; 1 bytes @ 0x8
   869     00A8                     	ds	1
   870     00A9                     ?___flmul:
   871     00A9                     ___xxtofl@exp:	
   872                           ; 4 bytes @ 0x9
   873                           
   874     00A9                     ___lldiv@quotient:	
   875                           ; 1 bytes @ 0x9
   876                           
   877     00A9                     ___flmul@b:	
   878                           ; 4 bytes @ 0x9
   879                           
   880                           
   881                           ; 4 bytes @ 0x9
   882     00A9                     	ds	1
   883     00AA                     ___xxtofl@arg:
   884                           
   885                           ; 4 bytes @ 0xA
   886     00AA                     	ds	1
   887     00AB                     reverse@temp:
   888                           
   889                           ; 1 bytes @ 0xB
   890     00AB                     	ds	1
   891     00AC                     reverse@start:
   892                           
   893                           ; 2 bytes @ 0xC
   894     00AC                     	ds	1
   895     00AD                     ___lldiv@counter:
   896     00AD                     ___flmul@a:	
   897                           ; 1 bytes @ 0xD
   898                           
   899                           
   900                           ; 4 bytes @ 0xD
   901     00AD                     	ds	1
   902     00AE                     ?_USART_init_baud:
   903     00AE                     reverse@end:	
   904                           ; 1 bytes @ 0xE
   905                           
   906     00AE                     USART_init_baud@baudrate:	
   907                           ; 2 bytes @ 0xE
   908                           
   909                           
   910                           ; 4 bytes @ 0xE
   911     00AE                     	ds	2
   912     00B0                     ?_uint8ToStr:
   913     00B0                     ?_intToStr:	
   914                           ; 2 bytes @ 0x10
   915                           
   916     00B0                     uint8ToStr@str:	
   917                           ; 2 bytes @ 0x10
   918                           
   919     00B0                     ___fladd@signs:	
   920                           ; 1 bytes @ 0x10
   921                           
   922     00B0                     intToStr@x:	
   923                           ; 1 bytes @ 0x10
   924                           
   925                           
   926                           ; 2 bytes @ 0x10
   927     00B0                     	ds	1
   928     00B1                     ??_uint8ToStr:
   929     00B1                     ??___flmul:	
   930                           ; 1 bytes @ 0x11
   931                           
   932     00B1                     ___fladd@aexp:	
   933                           ; 1 bytes @ 0x11
   934                           
   935                           
   936                           ; 1 bytes @ 0x11
   937     00B1                     	ds	1
   938     00B2                     ??_USART_init_baud:
   939     00B2                     intToStr@str:	
   940                           ; 1 bytes @ 0x12
   941                           
   942     00B2                     ___fladd@bexp:	
   943                           ; 1 bytes @ 0x12
   944                           
   945                           
   946                           ; 1 bytes @ 0x12
   947     00B2                     	ds	1
   948     00B3                     ___fladd@grs:
   949     00B3                     intToStr@d:	
   950                           ; 1 bytes @ 0x13
   951                           
   952                           
   953                           ; 2 bytes @ 0x13
   954     00B3                     	ds	1
   955     00B4                     ?___fltol:
   956     00B4                     ?___flsub:	
   957                           ; 4 bytes @ 0x14
   958                           
   959     00B4                     uint8ToStr@x:	
   960                           ; 4 bytes @ 0x14
   961                           
   962     00B4                     ___fltol@f1:	
   963                           ; 1 bytes @ 0x14
   964                           
   965     00B4                     ___flsub@a:	
   966                           ; 4 bytes @ 0x14
   967                           
   968                           
   969                           ; 4 bytes @ 0x14
   970     00B4                     	ds	1
   971     00B5                     ??_intToStr:
   972     00B5                     uint8ToStr@i:	
   973                           ; 1 bytes @ 0x15
   974                           
   975                           
   976                           ; 2 bytes @ 0x15
   977     00B5                     	ds	1
   978     00B6                     ___flmul@sign:
   979     00B6                     intToStr@i:	
   980                           ; 1 bytes @ 0x16
   981                           
   982     00B6                     USART_init_baud@value:	
   983                           ; 2 bytes @ 0x16
   984                           
   985                           
   986                           ; 2 bytes @ 0x16
   987     00B6                     	ds	1
   988     00B7                     ___flmul@grs:
   989                           
   990                           ; 4 bytes @ 0x17
   991     00B7                     	ds	1
   992     00B8                     ??_setup:
   993     00B8                     ??___fltol:	
   994                           ; 1 bytes @ 0x18
   995                           
   996     00B8                     ___flsub@b:	
   997                           ; 1 bytes @ 0x18
   998                           
   999                           
  1000                           ; 4 bytes @ 0x18
  1001     00B8                     	ds	3
  1002     00BB                     ___flmul@aexp:
  1003                           
  1004                           ; 1 bytes @ 0x1B
  1005     00BB                     	ds	1
  1006     00BC                     ??___flsub:
  1007     00BC                     ___fltol@sign1:	
  1008                           ; 1 bytes @ 0x1C
  1009                           
  1010     00BC                     ___flmul@bexp:	
  1011                           ; 1 bytes @ 0x1C
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0x1C
  1015     00BC                     	ds	1
  1016     00BD                     ___fltol@exp1:
  1017     00BD                     ___flmul@prod:	
  1018                           ; 1 bytes @ 0x1D
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x1D
  1022     00BD                     	ds	4
  1023     00C1                     ___flmul@temp:
  1024                           
  1025                           ; 2 bytes @ 0x21
  1026     00C1                     	ds	2
  1027     00C3                     ?_floatToStr:
  1028     00C3                     floatToStr@value:	
  1029                           ; 1 bytes @ 0x23
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x23
  1033     00C3                     	ds	4
  1034     00C7                     floatToStr@buffer:
  1035                           
  1036                           ; 1 bytes @ 0x27
  1037     00C7                     	ds	1
  1038     00C8                     floatToStr@precision:
  1039                           
  1040                           ; 2 bytes @ 0x28
  1041     00C8                     	ds	2
  1042     00CA                     ??_floatToStr:
  1043                           
  1044                           ; 1 bytes @ 0x2A
  1045     00CA                     	ds	1
  1046     00CB                     floatToStr@roundedFloatingPart:
  1047                           
  1048                           ; 2 bytes @ 0x2B
  1049     00CB                     	ds	2
  1050     00CD                     floatToStr@integerLength:
  1051                           
  1052                           ; 2 bytes @ 0x2D
  1053     00CD                     	ds	2
  1054     00CF                     floatToStr@floatingLength:
  1055                           
  1056                           ; 2 bytes @ 0x2F
  1057     00CF                     	ds	2
  1058     00D1                     floatToStr@i:
  1059                           
  1060                           ; 2 bytes @ 0x31
  1061     00D1                     	ds	2
  1062     00D3                     floatToStr@integerPart:
  1063                           
  1064                           ; 2 bytes @ 0x33
  1065     00D3                     	ds	2
  1066     00D5                     floatToStr@floatingPart:
  1067                           
  1068                           ; 4 bytes @ 0x35
  1069     00D5                     	ds	4
  1070     00D9                     ??_main:
  1071                           
  1072                           ; 1 bytes @ 0x39
  1073     00D9                     	ds	1
  1074                           
  1075                           	psect	cstackCOMMON
  1076     0070                     __pcstackCOMMON:
  1077     0070                     ?_setup:
  1078     0070                     ?_Lcd_Init:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ?_Lcd_Clear:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ?_isr:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ?_main:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ?_Lcd_Cmd:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093     0070                     ?_Lcd_Write:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096     0070                     ?_USART_send:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099     0070                     ?_adc_get_channel:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102     0070                     ?_adc_read:	
  1103                           ; 2 bytes @ 0x0
  1104                           
  1105     0070                     ?i1__Umul8_16:	
  1106                           ; 2 bytes @ 0x0
  1107                           
  1108     0070                     ?i1___xxtofl:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111     0070                     i1__Umul8_16@multiplicand:	
  1112                           ; 4 bytes @ 0x0
  1113                           
  1114     0070                     i1___xxtofl@val:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117                           
  1118                           ; 4 bytes @ 0x0
  1119     0070                     	ds	2
  1120     0072                     ??_adc_get_channel:
  1121     0072                     ??_adc_read:	
  1122                           ; 1 bytes @ 0x2
  1123                           
  1124     0072                     ??i1__Umul8_16:	
  1125                           ; 1 bytes @ 0x2
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0x2
  1129     0072                     	ds	2
  1130     0074                     ??i1___xxtofl:
  1131     0074                     i1__Umul8_16@product:	
  1132                           ; 1 bytes @ 0x4
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x4
  1136     0074                     	ds	2
  1137     0076                     i1__Umul8_16@word_mpld:
  1138                           
  1139                           ; 2 bytes @ 0x6
  1140     0076                     	ds	2
  1141     0078                     i1__Umul8_16@multiplier:
  1142     0078                     i1___xxtofl@sign:	
  1143                           ; 1 bytes @ 0x8
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x8
  1147     0078                     	ds	1
  1148     0079                     i1___xxtofl@exp:
  1149                           
  1150                           ; 1 bytes @ 0x9
  1151     0079                     	ds	1
  1152     007A                     i1___xxtofl@arg:
  1153                           
  1154                           ; 4 bytes @ 0xA
  1155     007A                     	ds	4
  1156                           
  1157                           	psect	cstackBANK0
  1158     0020                     __pcstackBANK0:
  1159     0020                     ?i1___flmul:
  1160     0020                     i1___flmul@b:	
  1161                           ; 4 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x0
  1165     0020                     	ds	4
  1166     0024                     i1___flmul@a:
  1167                           
  1168                           ; 4 bytes @ 0x4
  1169     0024                     	ds	4
  1170     0028                     ??i1___flmul:
  1171                           
  1172                           ; 1 bytes @ 0x8
  1173     0028                     	ds	5
  1174     002D                     i1___flmul@sign:
  1175                           
  1176                           ; 1 bytes @ 0xD
  1177     002D                     	ds	1
  1178     002E                     i1___flmul@grs:
  1179                           
  1180                           ; 4 bytes @ 0xE
  1181     002E                     	ds	4
  1182     0032                     i1___flmul@aexp:
  1183                           
  1184                           ; 1 bytes @ 0x12
  1185     0032                     	ds	1
  1186     0033                     i1___flmul@bexp:
  1187                           
  1188                           ; 1 bytes @ 0x13
  1189     0033                     	ds	1
  1190     0034                     i1___flmul@prod:
  1191                           
  1192                           ; 4 bytes @ 0x14
  1193     0034                     	ds	4
  1194     0038                     i1___flmul@temp:
  1195                           
  1196                           ; 2 bytes @ 0x18
  1197     0038                     	ds	2
  1198     003A                     ?___fldiv:
  1199     003A                     ___fldiv@a:	
  1200                           ; 4 bytes @ 0x1A
  1201                           
  1202                           
  1203                           ; 4 bytes @ 0x1A
  1204     003A                     	ds	4
  1205     003E                     ___fldiv@b:
  1206                           
  1207                           ; 4 bytes @ 0x1E
  1208     003E                     	ds	4
  1209     0042                     ??___fldiv:
  1210                           
  1211                           ; 1 bytes @ 0x22
  1212     0042                     	ds	5
  1213     0047                     ___fldiv@rem:
  1214                           
  1215                           ; 4 bytes @ 0x27
  1216     0047                     	ds	4
  1217     004B                     ___fldiv@sign:
  1218                           
  1219                           ; 1 bytes @ 0x2B
  1220     004B                     	ds	1
  1221     004C                     ___fldiv@new_exp:
  1222                           
  1223                           ; 2 bytes @ 0x2C
  1224     004C                     	ds	2
  1225     004E                     ___fldiv@grs:
  1226                           
  1227                           ; 4 bytes @ 0x2E
  1228     004E                     	ds	4
  1229     0052                     ___fldiv@bexp:
  1230                           
  1231                           ; 1 bytes @ 0x32
  1232     0052                     	ds	1
  1233     0053                     ___fldiv@aexp:
  1234                           
  1235                           ; 1 bytes @ 0x33
  1236     0053                     	ds	1
  1237     0054                     ??_isr:
  1238                           
  1239                           ; 1 bytes @ 0x34
  1240     0054                     	ds	4
  1241                           
  1242                           	psect	maintext
  1243     080F                     __pmaintext:	
  1244 ;;
  1245 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1246 ;;
  1247 ;; *************** function _main *****************
  1248 ;; Defined at:
  1249 ;;		line 77 in file "LAB2.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : B00/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          0       0       1       0       0
  1266 ;;      Totals:         0       0       1       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels required when called: 6
  1269 ;; This function calls:
  1270 ;;		_Lcd_Set
  1271 ;;		_Lcd_Write_Str
  1272 ;;		_USART_print
  1273 ;;		_adc_change_channel
  1274 ;;		_floatToStr
  1275 ;;		_setup
  1276 ;;		_uint8ToStr
  1277 ;; This function is called by:
  1278 ;;		Startup code after reset
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282     080F                     _main:	
  1283                           ;psect for function _main
  1284                           
  1285     080F                     l3422:	
  1286                           ;incstack = 0
  1287                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1288                           
  1289                           
  1290                           ;LAB2.c: 78:     setup();
  1291     080F  160A  118A  2565  120A  158A  	fcall	_setup
  1292     0814                     l3424:
  1293                           
  1294                           ;LAB2.c: 79:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1295     0814  300F               	movlw	15
  1296     0815  1683               	bsf	3,5	;RP0=1, select bank1
  1297     0816  1303               	bcf	3,6	;RP1=0, select bank1
  1298     0817  00D9               	movwf	??_main^(0+128)
  1299     0818                     u5267:
  1300     0818  0BD9               	decfsz	??_main^(0+128),f
  1301     0819  2818               	goto	u5267
  1302     081A  281B               	nop2
  1303     081B                     l3426:
  1304                           
  1305                           ;LAB2.c: 80:     ADCON0bits.GO = 1;
  1306     081B  1283               	bcf	3,5	;RP0=0, select bank0
  1307     081C  1303               	bcf	3,6	;RP1=0, select bank0
  1308     081D  149F               	bsf	31,1	;volatile
  1309     081E                     l3428:
  1310                           
  1311                           ;LAB2.c: 81:      USART_print(" ");
  1312     081E  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1313     081F  1683               	bsf	3,5	;RP0=1, select bank1
  1314     0820  1303               	bcf	3,6	;RP1=0, select bank1
  1315     0821  00A1               	movwf	USART_print@string^(0+128)
  1316     0822  3080               	movlw	128
  1317     0823  00A2               	movwf	(USART_print@string+1)^(0+128)
  1318     0824  160A  118A  240E  120A  158A  	fcall	_USART_print
  1319     0829                     l3430:
  1320                           
  1321                           ;LAB2.c: 85:        adc_change_channel(channels,2);
  1322     0829  3002               	movlw	2
  1323     082A  1683               	bsf	3,5	;RP0=1, select bank1
  1324     082B  1303               	bcf	3,6	;RP1=0, select bank1
  1325     082C  00A0               	movwf	adc_change_channel@length^(0+128)
  1326     082D  3000               	movlw	0
  1327     082E  00A1               	movwf	(adc_change_channel@length^(0+128)+1)
  1328     082F  30E3               	movlw	(low (_channels| 0))& (0+255)
  1329     0830  160A  118A  2376  120A  158A  	fcall	_adc_change_channel
  1330     0835                     l3432:
  1331                           
  1332                           ;LAB2.c: 88:        floatToStr(volt, buffer, 2);
  1333     0835  1683               	bsf	3,5	;RP0=1, select bank1
  1334     0836  1303               	bcf	3,6	;RP1=0, select bank1
  1335     0837  085D               	movf	(_volt+3)^(0+128),w
  1336     0838  00C6               	movwf	(floatToStr@value+3)^(0+128)
  1337     0839  085C               	movf	(_volt+2)^(0+128),w
  1338     083A  00C5               	movwf	(floatToStr@value+2)^(0+128)
  1339     083B  085B               	movf	(_volt+1)^(0+128),w
  1340     083C  00C4               	movwf	(floatToStr@value+1)^(0+128)
  1341     083D  085A               	movf	_volt^(0+128),w
  1342     083E  00C3               	movwf	floatToStr@value^(0+128)
  1343     083F  305C               	movlw	(low (_buffer| 0))& (0+255)
  1344     0840  00C7               	movwf	floatToStr@buffer^(0+128)
  1345     0841  3002               	movlw	2
  1346     0842  00C8               	movwf	floatToStr@precision^(0+128)
  1347     0843  3000               	movlw	0
  1348     0844  00C9               	movwf	(floatToStr@precision^(0+128)+1)
  1349     0845  120A  158A  229F  120A  158A  	fcall	_floatToStr
  1350     084A                     l3434:
  1351                           
  1352                           ;LAB2.c: 89:        Lcd_Set(2,1);
  1353     084A  1683               	bsf	3,5	;RP0=1, select bank1
  1354     084B  1303               	bcf	3,6	;RP1=0, select bank1
  1355     084C  01A3               	clrf	Lcd_Set@b^(0+128)
  1356     084D  0AA3               	incf	Lcd_Set@b^(0+128),f
  1357     084E  3002               	movlw	2
  1358     084F  160A  118A  22B7  120A  158A  	fcall	_Lcd_Set
  1359     0854                     l3436:
  1360                           
  1361                           ;LAB2.c: 90:        Lcd_Write_Str(buffer);
  1362     0854  305C               	movlw	(low (_buffer| 0))& (0+255)
  1363     0855  1683               	bsf	3,5	;RP0=1, select bank1
  1364     0856  1303               	bcf	3,6	;RP1=0, select bank1
  1365     0857  00A2               	movwf	Lcd_Write_Str@a^(0+128)
  1366     0858  3000               	movlw	0
  1367     0859  00A3               	movwf	(Lcd_Write_Str@a+1)^(0+128)
  1368     085A  160A  118A  2462  120A  158A  	fcall	_Lcd_Write_Str
  1369     085F                     l3438:
  1370                           
  1371                           ;LAB2.c: 94:        uint8ToStr(cont,buffer2);
  1372     085F  3090               	movlw	(low (_buffer2| (0+256)))& (0+255)
  1373     0860  1683               	bsf	3,5	;RP0=1, select bank1
  1374     0861  1303               	bcf	3,6	;RP1=0, select bank1
  1375     0862  00B0               	movwf	uint8ToStr@str^(0+128)
  1376     0863  0862               	movf	_cont^(0+128),w
  1377     0864  160A  118A  24B6  120A  158A  	fcall	_uint8ToStr
  1378     0869                     l3440:
  1379                           
  1380                           ;LAB2.c: 95:        Lcd_Set(2,10);
  1381     0869  300A               	movlw	10
  1382     086A  1683               	bsf	3,5	;RP0=1, select bank1
  1383     086B  1303               	bcf	3,6	;RP1=0, select bank1
  1384     086C  00A3               	movwf	Lcd_Set@b^(0+128)
  1385     086D  3002               	movlw	2
  1386     086E  160A  118A  22B7  120A  158A  	fcall	_Lcd_Set
  1387     0873                     l3442:
  1388                           
  1389                           ;LAB2.c: 97:        Lcd_Write_Str(buffer2);
  1390     0873  3090               	movlw	(low (_buffer2| (0+256)))& (0+255)
  1391     0874  1683               	bsf	3,5	;RP0=1, select bank1
  1392     0875  1303               	bcf	3,6	;RP1=0, select bank1
  1393     0876  00A2               	movwf	Lcd_Write_Str@a^(0+128)
  1394     0877  3001               	movlw	1
  1395     0878  00A3               	movwf	(Lcd_Write_Str@a+1)^(0+128)
  1396     0879  160A  118A  2462  120A  158A  	fcall	_Lcd_Write_Str
  1397     087E                     l3444:
  1398                           
  1399                           ;LAB2.c: 98:        if (x==1){
  1400     087E  1683               	bsf	3,5	;RP0=1, select bank1
  1401     087F  1303               	bcf	3,6	;RP1=0, select bank1
  1402     0880  0360               	decf	_x^(0+128),w
  1403     0881  0461               	iorwf	(_x+1)^(0+128),w
  1404     0882  1D03               	btfss	3,2
  1405     0883  2885               	goto	u5251
  1406     0884  2886               	goto	u5250
  1407     0885                     u5251:
  1408     0885  2829               	goto	l3430
  1409     0886                     u5250:
  1410     0886                     l3446:
  1411                           
  1412                           ;LAB2.c: 99:            x=0;
  1413     0886  01E0               	clrf	_x^(0+128)
  1414     0887  01E1               	clrf	(_x+1)^(0+128)
  1415     0888                     l3448:
  1416                           
  1417                           ;LAB2.c: 100:            USART_print(buffer);
  1418     0888  305C               	movlw	(low (_buffer| 0))& (0+255)
  1419     0889  00A1               	movwf	USART_print@string^(0+128)
  1420     088A  3000               	movlw	0
  1421     088B  00A2               	movwf	(USART_print@string+1)^(0+128)
  1422     088C  160A  118A  240E  120A  158A  	fcall	_USART_print
  1423     0891  2829               	goto	l3430
  1424     0892  120A  118A  2810   	ljmp	start
  1425     0895                     __end_of_main:
  1426                           
  1427                           	psect	text1
  1428     14B6                     __ptext1:	
  1429 ;; *************** function _uint8ToStr *****************
  1430 ;; Defined at:
  1431 ;;		line 175 in file "LAB2.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  x               1    wreg     unsigned char 
  1434 ;;  str             1   16[BANK1 ] PTR unsigned char 
  1435 ;;		 -> buffer2(20), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  x               1   20[BANK1 ] unsigned char 
  1438 ;;  i               2   21[BANK1 ] int 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2   16[BANK1 ] int 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         0       0       1       0       0
  1449 ;;      Locals:         0       0       3       0       0
  1450 ;;      Temps:          0       0       3       0       0
  1451 ;;      Totals:         0       0       7       0       0
  1452 ;;Total ram usage:        7 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 4
  1455 ;; This function calls:
  1456 ;;		___awdiv
  1457 ;;		___awmod
  1458 ;;		_reverse
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464     14B6                     _uint8ToStr:	
  1465                           ;psect for function _uint8ToStr
  1466                           
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _uint8ToStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1470                           ;uint8ToStr@x stored from wreg
  1471     14B6  1683               	bsf	3,5	;RP0=1, select bank1
  1472     14B7  1303               	bcf	3,6	;RP1=0, select bank1
  1473     14B8  00B4               	movwf	uint8ToStr@x^(0+128)
  1474     14B9                     l3406:
  1475                           
  1476                           ;LAB2.c: 176:     int i = 0;
  1477     14B9  01B5               	clrf	uint8ToStr@i^(0+128)
  1478     14BA  01B6               	clrf	(uint8ToStr@i+1)^(0+128)
  1479     14BB                     l3408:
  1480                           
  1481                           ;LAB2.c: 178:         str[i++] = (x % 10) + '0';
  1482     14BB  0835               	movf	uint8ToStr@i^(0+128),w
  1483     14BC  0730               	addwf	uint8ToStr@str^(0+128),w
  1484     14BD  00B1               	movwf	??_uint8ToStr^(0+128)
  1485     14BE  0831               	movf	??_uint8ToStr^(0+128),w
  1486     14BF  0084               	movwf	4
  1487     14C0  300A               	movlw	10
  1488     14C1  00A0               	movwf	___awmod@divisor^(0+128)
  1489     14C2  3000               	movlw	0
  1490     14C3  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  1491     14C4  0834               	movf	uint8ToStr@x^(0+128),w
  1492     14C5  00B2               	movwf	(??_uint8ToStr+1)^(0+128)
  1493     14C6  01B3               	clrf	((??_uint8ToStr+1)^(0+128)+1)
  1494     14C7  0832               	movf	(??_uint8ToStr+1)^(0+128),w
  1495     14C8  00A2               	movwf	___awmod@dividend^(0+128)
  1496     14C9  0833               	movf	(??_uint8ToStr+2)^(0+128),w
  1497     14CA  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  1498     14CB  160A  118A  250A  160A  118A  	fcall	___awmod
  1499     14D0  1683               	bsf	3,5	;RP0=1, select bank1
  1500     14D1  1303               	bcf	3,6	;RP1=0, select bank1
  1501     14D2  0820               	movf	?___awmod^(0+128),w
  1502     14D3  3E30               	addlw	48
  1503     14D4  1783               	bsf	3,7	;select IRP bank2
  1504     14D5  0080               	movwf	0
  1505     14D6                     l3410:
  1506     14D6  3001               	movlw	1
  1507     14D7  07B5               	addwf	uint8ToStr@i^(0+128),f
  1508     14D8  1803               	skipnc
  1509     14D9  0AB6               	incf	(uint8ToStr@i+1)^(0+128),f
  1510     14DA  3000               	movlw	0
  1511     14DB  07B6               	addwf	(uint8ToStr@i+1)^(0+128),f
  1512     14DC                     l3412:
  1513                           
  1514                           ;LAB2.c: 179:         x = x / 10;
  1515     14DC  300A               	movlw	10
  1516     14DD  00A0               	movwf	___awdiv@divisor^(0+128)
  1517     14DE  3000               	movlw	0
  1518     14DF  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1519     14E0  0834               	movf	uint8ToStr@x^(0+128),w
  1520     14E1  00B1               	movwf	??_uint8ToStr^(0+128)
  1521     14E2  01B2               	clrf	(??_uint8ToStr^(0+128)+1)
  1522     14E3  0831               	movf	??_uint8ToStr^(0+128),w
  1523     14E4  00A2               	movwf	___awdiv@dividend^(0+128)
  1524     14E5  0832               	movf	(??_uint8ToStr+1)^(0+128),w
  1525     14E6  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1526     14E7  120A  118A  278F  160A  118A  	fcall	___awdiv
  1527     14EC  1683               	bsf	3,5	;RP0=1, select bank1
  1528     14ED  1303               	bcf	3,6	;RP1=0, select bank1
  1529     14EE  0820               	movf	?___awdiv^(0+128),w
  1530     14EF  00B4               	movwf	uint8ToStr@x^(0+128)
  1531     14F0                     l3414:
  1532                           
  1533                           ;LAB2.c: 180:     } while (x > 0);
  1534     14F0  0834               	movf	uint8ToStr@x^(0+128),w
  1535     14F1  1D03               	btfss	3,2
  1536     14F2  2CF4               	goto	u5241
  1537     14F3  2CF5               	goto	u5240
  1538     14F4                     u5241:
  1539     14F4  2CBB               	goto	l3408
  1540     14F5                     u5240:
  1541     14F5                     l3416:
  1542                           
  1543                           ;LAB2.c: 182:     str[i] = '\0';
  1544     14F5  0835               	movf	uint8ToStr@i^(0+128),w
  1545     14F6  0730               	addwf	uint8ToStr@str^(0+128),w
  1546     14F7  00B1               	movwf	??_uint8ToStr^(0+128)
  1547     14F8  0831               	movf	??_uint8ToStr^(0+128),w
  1548     14F9  0084               	movwf	4
  1549     14FA  1783               	bsf	3,7	;select IRP bank2
  1550     14FB  0180               	clrf	0
  1551     14FC                     l3418:
  1552                           
  1553                           ;LAB2.c: 183:     reverse(str, i);
  1554     14FC  0830               	movf	uint8ToStr@str^(0+128),w
  1555     14FD  00A0               	movwf	reverse@str^(0+128)
  1556     14FE  3001               	movlw	1
  1557     14FF  00A1               	movwf	(reverse@str+1)^(0+128)
  1558     1500  0836               	movf	(uint8ToStr@i+1)^(0+128),w
  1559     1501  00A3               	movwf	(reverse@length+1)^(0+128)
  1560     1502  0835               	movf	uint8ToStr@i^(0+128),w
  1561     1503  00A2               	movwf	reverse@length^(0+128)
  1562     1504  160A  118A  2782  160A  118A  	fcall	_reverse
  1563     1509                     l124:
  1564     1509  0008               	return
  1565     150A                     __end_of_uint8ToStr:
  1566                           
  1567                           	psect	text2
  1568     1565                     __ptext2:	
  1569 ;; *************** function _setup *****************
  1570 ;; Defined at:
  1571 ;;		line 107 in file "LAB2.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0
  1588 ;;      Totals:         0       0       0       0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 5
  1592 ;; This function calls:
  1593 ;;		_Lcd_Clear
  1594 ;;		_Lcd_Init
  1595 ;;		_Lcd_Set
  1596 ;;		_Lcd_Write_Str
  1597 ;;		_USART_init_baud
  1598 ;;		_adc_init
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604     1565                     _setup:	
  1605                           ;psect for function _setup
  1606                           
  1607     1565                     l2816:	
  1608                           ;incstack = 0
  1609                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1610                           
  1611                           
  1612                           ;LAB2.c: 108:     USART_init_baud(9600);
  1613     1565  3000               	movlw	0
  1614     1566  1683               	bsf	3,5	;RP0=1, select bank1
  1615     1567  1303               	bcf	3,6	;RP1=0, select bank1
  1616     1568  00B1               	movwf	(USART_init_baud@baudrate+3)^(0+128)
  1617     1569  3000               	movlw	0
  1618     156A  00B0               	movwf	(USART_init_baud@baudrate+2)^(0+128)
  1619     156B  3025               	movlw	37
  1620     156C  00AF               	movwf	(USART_init_baud@baudrate+1)^(0+128)
  1621     156D  3080               	movlw	128
  1622     156E  00AE               	movwf	USART_init_baud@baudrate^(0+128)
  1623     156F  160A  118A  23BD  160A  118A  	fcall	_USART_init_baud
  1624     1574                     l2818:
  1625                           
  1626                           ;LAB2.c: 109:     ANSEL = 0b00000011;
  1627     1574  3003               	movlw	3
  1628     1575  1683               	bsf	3,5	;RP0=1, select bank3
  1629     1576  1703               	bsf	3,6	;RP1=1, select bank3
  1630     1577  0088               	movwf	8	;volatile
  1631     1578                     l2820:
  1632                           
  1633                           ;LAB2.c: 110:     ANSELH = 0;
  1634     1578  0189               	clrf	9	;volatile
  1635     1579                     l2822:
  1636                           
  1637                           ;LAB2.c: 111:     TRISE = 0;
  1638     1579  1683               	bsf	3,5	;RP0=1, select bank1
  1639     157A  1303               	bcf	3,6	;RP1=0, select bank1
  1640     157B  0189               	clrf	9	;volatile
  1641     157C                     l2824:
  1642                           
  1643                           ;LAB2.c: 112:     TRISD = 0x00;
  1644     157C  0188               	clrf	8	;volatile
  1645     157D                     l2826:
  1646                           
  1647                           ;LAB2.c: 113:     PORTD = 0;
  1648     157D  1283               	bcf	3,5	;RP0=0, select bank0
  1649     157E  1303               	bcf	3,6	;RP1=0, select bank0
  1650     157F  0188               	clrf	8	;volatile
  1651     1580                     l2828:
  1652                           
  1653                           ;LAB2.c: 114:     TRISA = 0XFF;
  1654     1580  30FF               	movlw	255
  1655     1581  1683               	bsf	3,5	;RP0=1, select bank1
  1656     1582  1303               	bcf	3,6	;RP1=0, select bank1
  1657     1583  0085               	movwf	5	;volatile
  1658     1584                     l2830:
  1659                           
  1660                           ;LAB2.c: 115:     PORTA = 0;
  1661     1584  1283               	bcf	3,5	;RP0=0, select bank0
  1662     1585  1303               	bcf	3,6	;RP1=0, select bank0
  1663     1586  0185               	clrf	5	;volatile
  1664     1587                     l2832:
  1665                           
  1666                           ;LAB2.c: 116:      TRISCbits.TRISC4 = 0;
  1667     1587  1683               	bsf	3,5	;RP0=1, select bank1
  1668     1588  1303               	bcf	3,6	;RP1=0, select bank1
  1669     1589  1207               	bcf	7,4	;volatile
  1670     158A                     l2834:
  1671                           
  1672                           ;LAB2.c: 117:     TRISCbits.TRISC5 = 0;
  1673     158A  1287               	bcf	7,5	;volatile
  1674     158B                     l2836:
  1675                           
  1676                           ;LAB2.c: 118:     PORTC = 0;
  1677     158B  1283               	bcf	3,5	;RP0=0, select bank0
  1678     158C  1303               	bcf	3,6	;RP1=0, select bank0
  1679     158D  0187               	clrf	7	;volatile
  1680     158E                     l2838:
  1681                           
  1682                           ;LAB2.c: 119:     PORTE = 0b1111;
  1683     158E  300F               	movlw	15
  1684     158F  0089               	movwf	9	;volatile
  1685     1590                     l2840:
  1686                           
  1687                           ;LAB2.c: 121:     adc_init(0);
  1688     1590  3000               	movlw	0
  1689     1591  1683               	bsf	3,5	;RP0=1, select bank1
  1690     1592  1303               	bcf	3,6	;RP1=0, select bank1
  1691     1593  00A0               	movwf	adc_init@channel^(0+128)
  1692     1594  00A1               	movwf	(adc_init@channel+1)^(0+128)
  1693     1595  160A  118A  234B  160A  118A  	fcall	_adc_init
  1694     159A                     l2842:
  1695                           
  1696                           ;LAB2.c: 122:     Lcd_Init();
  1697     159A  160A  118A  25C6  160A  118A  	fcall	_Lcd_Init
  1698     159F                     l2844:
  1699                           
  1700                           ;LAB2.c: 123:     Lcd_Clear();
  1701     159F  120A  158A  2002  160A  118A  	fcall	_Lcd_Clear
  1702     15A4                     l2846:
  1703                           
  1704                           ;LAB2.c: 124:     Lcd_Set(1,1);
  1705     15A4  1683               	bsf	3,5	;RP0=1, select bank1
  1706     15A5  1303               	bcf	3,6	;RP1=0, select bank1
  1707     15A6  01A3               	clrf	Lcd_Set@b^(0+128)
  1708     15A7  0AA3               	incf	Lcd_Set@b^(0+128),f
  1709     15A8  3001               	movlw	1
  1710     15A9  160A  118A  22B7  160A  118A  	fcall	_Lcd_Set
  1711     15AE                     l2848:
  1712                           
  1713                           ;LAB2.c: 125:     Lcd_Write_Str("POT:    CONT:");
  1714     15AE  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1715     15AF  1683               	bsf	3,5	;RP0=1, select bank1
  1716     15B0  1303               	bcf	3,6	;RP1=0, select bank1
  1717     15B1  00A2               	movwf	Lcd_Write_Str@a^(0+128)
  1718     15B2  3080               	movlw	128
  1719     15B3  00A3               	movwf	(Lcd_Write_Str@a+1)^(0+128)
  1720     15B4  160A  118A  2462  160A  118A  	fcall	_Lcd_Write_Str
  1721     15B9                     l2850:
  1722                           
  1723                           ;LAB2.c: 127:     TRISDbits.TRISD0 = 0;
  1724     15B9  1683               	bsf	3,5	;RP0=1, select bank1
  1725     15BA  1303               	bcf	3,6	;RP1=0, select bank1
  1726     15BB  1008               	bcf	8,0	;volatile
  1727     15BC                     l2852:
  1728                           
  1729                           ;LAB2.c: 128:     TRISDbits.TRISD1 = 0;
  1730     15BC  1088               	bcf	8,1	;volatile
  1731     15BD                     l2854:
  1732                           
  1733                           ;LAB2.c: 129:     TRISDbits.TRISD2 = 0;
  1734     15BD  1108               	bcf	8,2	;volatile
  1735     15BE                     l2856:
  1736                           
  1737                           ;LAB2.c: 130:     TRISDbits.TRISD3 = 0;
  1738     15BE  1188               	bcf	8,3	;volatile
  1739     15BF                     l2858:
  1740                           
  1741                           ;LAB2.c: 133:     OSCCONbits.IRCF2 = 1;
  1742     15BF  170F               	bsf	15,6	;volatile
  1743     15C0                     l2860:
  1744                           
  1745                           ;LAB2.c: 134:     OSCCONbits.IRCF1 = 1;
  1746     15C0  168F               	bsf	15,5	;volatile
  1747     15C1                     l2862:
  1748                           
  1749                           ;LAB2.c: 135:     OSCCONbits.IRCF0 = 0;
  1750     15C1  120F               	bcf	15,4	;volatile
  1751     15C2                     l2864:
  1752                           
  1753                           ;LAB2.c: 136:     OSCCONbits.SCS = 1;
  1754     15C2  140F               	bsf	15,0	;volatile
  1755     15C3                     l2866:
  1756                           
  1757                           ;LAB2.c: 145:     INTCONbits.PEIE = 1;
  1758     15C3  170B               	bsf	11,6	;volatile
  1759     15C4                     l2868:
  1760                           
  1761                           ;LAB2.c: 146:     INTCONbits.GIE = 1;
  1762     15C4  178B               	bsf	11,7	;volatile
  1763     15C5                     l104:
  1764     15C5  0008               	return
  1765     15C6                     __end_of_setup:
  1766                           
  1767                           	psect	text3
  1768     134B                     __ptext3:	
  1769 ;; *************** function _adc_init *****************
  1770 ;; Defined at:
  1771 ;;		line 6 in file "../LAB1_1.X/ADC.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  channel         2    0[BANK1 ] int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       0       2       0       0
  1786 ;;      Locals:         0       0       0       0       0
  1787 ;;      Temps:          0       0       1       0       0
  1788 ;;      Totals:         0       0       3       0       0
  1789 ;;Total ram usage:        3 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 3
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_setup
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     134B                     _adc_init:	
  1800                           ;psect for function _adc_init
  1801                           
  1802     134B                     l2466:	
  1803                           ;incstack = 0
  1804                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1805                           
  1806                           
  1807                           ;../LAB1_1.X/ADC.c: 8:     ADCON0bits.ADCS = 0b01;
  1808     134B  1283               	bcf	3,5	;RP0=0, select bank0
  1809     134C  1303               	bcf	3,6	;RP1=0, select bank0
  1810     134D  081F               	movf	31,w	;volatile
  1811     134E  393F               	andlw	-193
  1812     134F  3840               	iorlw	64
  1813     1350  009F               	movwf	31	;volatile
  1814     1351                     l2468:
  1815                           
  1816                           ;../LAB1_1.X/ADC.c: 9:     ADCON1bits.VCFG0 = 0;
  1817     1351  1683               	bsf	3,5	;RP0=1, select bank1
  1818     1352  1303               	bcf	3,6	;RP1=0, select bank1
  1819     1353  121F               	bcf	31,4	;volatile
  1820     1354                     l2470:
  1821                           
  1822                           ;../LAB1_1.X/ADC.c: 10:     ADCON1bits.VCFG1 = 0;
  1823     1354  129F               	bcf	31,5	;volatile
  1824                           
  1825                           ;../LAB1_1.X/ADC.c: 11:     ADCON0bits.CHS = channel;
  1826     1355  0820               	movf	adc_init@channel^(0+128),w
  1827     1356  00A2               	movwf	??_adc_init^(0+128)
  1828     1357  0DA2               	rlf	??_adc_init^(0+128),f
  1829     1358  0DA2               	rlf	??_adc_init^(0+128),f
  1830     1359  1283               	bcf	3,5	;RP0=0, select bank0
  1831     135A  1303               	bcf	3,6	;RP1=0, select bank0
  1832     135B  081F               	movf	31,w	;volatile
  1833     135C  1683               	bsf	3,5	;RP0=1, select bank1
  1834     135D  1303               	bcf	3,6	;RP1=0, select bank1
  1835     135E  0622               	xorwf	??_adc_init^(0+128),w
  1836     135F  39C3               	andlw	-61
  1837     1360  0622               	xorwf	??_adc_init^(0+128),w
  1838     1361  1283               	bcf	3,5	;RP0=0, select bank0
  1839     1362  1303               	bcf	3,6	;RP1=0, select bank0
  1840     1363  009F               	movwf	31	;volatile
  1841     1364                     l2472:
  1842                           
  1843                           ;../LAB1_1.X/ADC.c: 14:     ADCON1bits.ADFM = 0;
  1844     1364  1683               	bsf	3,5	;RP0=1, select bank1
  1845     1365  1303               	bcf	3,6	;RP1=0, select bank1
  1846     1366  139F               	bcf	31,7	;volatile
  1847     1367                     l2474:
  1848                           
  1849                           ;../LAB1_1.X/ADC.c: 15:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1850     1367  300F               	movlw	15
  1851     1368  1683               	bsf	3,5	;RP0=1, select bank1
  1852     1369  1303               	bcf	3,6	;RP1=0, select bank1
  1853     136A  00A2               	movwf	??_adc_init^(0+128)
  1854     136B                     u5277:
  1855     136B  0BA2               	decfsz	??_adc_init^(0+128),f
  1856     136C  2B6B               	goto	u5277
  1857     136D  2B6E               	nop2
  1858     136E                     l2476:
  1859                           
  1860                           ;../LAB1_1.X/ADC.c: 16:     ADCON0bits.ADON = 1;
  1861     136E  1283               	bcf	3,5	;RP0=0, select bank0
  1862     136F  1303               	bcf	3,6	;RP1=0, select bank0
  1863     1370  141F               	bsf	31,0	;volatile
  1864     1371                     l2478:
  1865                           
  1866                           ;../LAB1_1.X/ADC.c: 17:     PIR1bits.ADIF = 0;
  1867     1371  130C               	bcf	12,6	;volatile
  1868     1372                     l2480:
  1869                           
  1870                           ;../LAB1_1.X/ADC.c: 18:     PIE1bits.ADIE = 1;
  1871     1372  1683               	bsf	3,5	;RP0=1, select bank1
  1872     1373  1303               	bcf	3,6	;RP1=0, select bank1
  1873     1374  170C               	bsf	12,6	;volatile
  1874     1375                     l185:
  1875     1375  0008               	return
  1876     1376                     __end_of_adc_init:
  1877                           
  1878                           	psect	text4
  1879     13BD                     __ptext4:	
  1880 ;; *************** function _USART_init_baud *****************
  1881 ;; Defined at:
  1882 ;;		line 6 in file "USART.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  baudrate        4   14[BANK1 ] const unsigned long 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  value           2   22[BANK1 ] unsigned int 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       4       0       0
  1897 ;;      Locals:         0       0       2       0       0
  1898 ;;      Temps:          0       0       4       0       0
  1899 ;;      Totals:         0       0      10       0       0
  1900 ;;Total ram usage:       10 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 4
  1903 ;; This function calls:
  1904 ;;		___lldiv
  1905 ;; This function is called by:
  1906 ;;		_setup
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910     13BD                     _USART_init_baud:	
  1911                           ;psect for function _USART_init_baud
  1912                           
  1913     13BD                     l2456:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _USART_init_baud: [wreg+status,2+status,0+pclath+cstack]
  1916                           
  1917                           
  1918                           ;USART.c: 6: void USART_init_baud(const unsigned long int baudrate);USART.c: 7: {;USART.
      +                          c: 9:     TXSTAbits.SYNC = 0;
  1919     13BD  1683               	bsf	3,5	;RP0=1, select bank1
  1920     13BE  1303               	bcf	3,6	;RP1=0, select bank1
  1921     13BF  1218               	bcf	24,4	;volatile
  1922                           
  1923                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  1924     13C0  1518               	bsf	24,2	;volatile
  1925                           
  1926                           ;USART.c: 11:     BAUDCTLbits.BRG16 = 1;
  1927     13C1  1683               	bsf	3,5	;RP0=1, select bank3
  1928     13C2  1703               	bsf	3,6	;RP1=1, select bank3
  1929     13C3  1587               	bsf	7,3	;volatile
  1930                           
  1931                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  1932     13C4  1283               	bcf	3,5	;RP0=0, select bank0
  1933     13C5  1303               	bcf	3,6	;RP1=0, select bank0
  1934     13C6  1798               	bsf	24,7	;volatile
  1935                           
  1936                           ;USART.c: 13:     RCSTAbits.RX9 = 0;
  1937     13C7  1318               	bcf	24,6	;volatile
  1938                           
  1939                           ;USART.c: 14:     RCSTAbits.CREN = 1;
  1940     13C8  1618               	bsf	24,4	;volatile
  1941                           
  1942                           ;USART.c: 15:     TXSTAbits.TXEN = 1;
  1943     13C9  1683               	bsf	3,5	;RP0=1, select bank1
  1944     13CA  1303               	bcf	3,6	;RP1=0, select bank1
  1945     13CB  1698               	bsf	24,5	;volatile
  1946                           
  1947                           ;USART.c: 16:     PIR1bits.RCIF = 0;
  1948     13CC  1283               	bcf	3,5	;RP0=0, select bank0
  1949     13CD  1303               	bcf	3,6	;RP1=0, select bank0
  1950     13CE  128C               	bcf	12,5	;volatile
  1951                           
  1952                           ;USART.c: 17:     PIE1bits.RCIE = 1;
  1953     13CF  1683               	bsf	3,5	;RP0=1, select bank1
  1954     13D0  1303               	bcf	3,6	;RP1=0, select bank1
  1955     13D1  168C               	bsf	12,5	;volatile
  1956     13D2                     l2458:
  1957     13D2                     l2460:
  1958                           
  1959                           ;USART.c: 20:     value = (4000000 /(4*baudrate))-1;
  1960     13D2  082E               	movf	USART_init_baud@baudrate^(0+128),w
  1961     13D3  00B2               	movwf	??_USART_init_baud^(0+128)
  1962     13D4  082F               	movf	(USART_init_baud@baudrate+1)^(0+128),w
  1963     13D5  00B3               	movwf	(??_USART_init_baud^(0+128)+1)
  1964     13D6  0830               	movf	(USART_init_baud@baudrate+2)^(0+128),w
  1965     13D7  00B4               	movwf	(??_USART_init_baud^(0+128)+2)
  1966     13D8  0831               	movf	(USART_init_baud@baudrate+3)^(0+128),w
  1967     13D9  00B5               	movwf	(??_USART_init_baud^(0+128)+3)
  1968     13DA  3002               	movlw	2
  1969     13DB                     u3415:
  1970     13DB  1003               	clrc
  1971     13DC  0DB2               	rlf	??_USART_init_baud^(0+128),f
  1972     13DD  0DB3               	rlf	(??_USART_init_baud^(0+128)+1),f
  1973     13DE  0DB4               	rlf	(??_USART_init_baud^(0+128)+2),f
  1974     13DF  0DB5               	rlf	(??_USART_init_baud^(0+128)+3),f
  1975     13E0                     u3410:
  1976     13E0  3EFF               	addlw	-1
  1977     13E1  1D03               	skipz
  1978     13E2  2BDB               	goto	u3415
  1979     13E3  0835               	movf	(??_USART_init_baud+3)^(0+128),w
  1980     13E4  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1981     13E5  0834               	movf	(??_USART_init_baud+2)^(0+128),w
  1982     13E6  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1983     13E7  0833               	movf	(??_USART_init_baud+1)^(0+128),w
  1984     13E8  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1985     13E9  0832               	movf	??_USART_init_baud^(0+128),w
  1986     13EA  00A0               	movwf	___lldiv@divisor^(0+128)
  1987     13EB  3000               	movlw	0
  1988     13EC  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1989     13ED  303D               	movlw	61
  1990     13EE  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1991     13EF  3009               	movlw	9
  1992     13F0  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1993     13F1  3000               	movlw	0
  1994     13F2  00A4               	movwf	___lldiv@dividend^(0+128)
  1995     13F3  160A  118A  262A  160A  118A  	fcall	___lldiv
  1996     13F8  1683               	bsf	3,5	;RP0=1, select bank1
  1997     13F9  1303               	bcf	3,6	;RP1=0, select bank1
  1998     13FA  0820               	movf	?___lldiv^(0+128),w
  1999     13FB  3EFF               	addlw	255
  2000     13FC  00B6               	movwf	USART_init_baud@value^(0+128)
  2001     13FD  0821               	movf	(?___lldiv+1)^(0+128),w
  2002     13FE  1803               	skipnc
  2003     13FF  3E01               	addlw	1
  2004     1400  3EFF               	addlw	255
  2005     1401  00B7               	movwf	(USART_init_baud@value+1)^(0+128)
  2006     1402                     l2462:
  2007                           
  2008                           ;USART.c: 23:     if(value < 256)
  2009     1402  3001               	movlw	1
  2010     1403  0237               	subwf	(USART_init_baud@value+1)^(0+128),w
  2011     1404  3000               	movlw	0
  2012     1405  1903               	skipnz
  2013     1406  0236               	subwf	USART_init_baud@value^(0+128),w
  2014     1407  1803               	skipnc
  2015     1408  2C0A               	goto	u3421
  2016     1409  2C0B               	goto	u3420
  2017     140A                     u3421:
  2018     140A  2C0D               	goto	l222
  2019     140B                     u3420:
  2020     140B                     l2464:
  2021                           
  2022                           ;USART.c: 24:     {;USART.c: 25:        SPBRG = value;
  2023     140B  0836               	movf	USART_init_baud@value^(0+128),w
  2024     140C  0099               	movwf	25	;volatile
  2025     140D                     l222:
  2026     140D  0008               	return
  2027     140E                     __end_of_USART_init_baud:
  2028                           
  2029                           	psect	text5
  2030     162A                     __ptext5:	
  2031 ;; *************** function ___lldiv *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         4    0[BANK1 ] unsigned long 
  2036 ;;  dividend        4    4[BANK1 ] unsigned long 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  quotient        4    9[BANK1 ] unsigned long 
  2039 ;;  counter         1   13[BANK1 ] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  4    0[BANK1 ] unsigned long 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       8       0       0
  2050 ;;      Locals:         0       0       5       0       0
  2051 ;;      Temps:          0       0       1       0       0
  2052 ;;      Totals:         0       0      14       0       0
  2053 ;;Total ram usage:       14 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 3
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_USART_init_baud
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     162A                     ___lldiv:	
  2064                           ;psect for function ___lldiv
  2065                           
  2066     162A                     l2126:	
  2067                           ;incstack = 0
  2068                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2069                           
  2070     162A  3000               	movlw	0
  2071     162B  1683               	bsf	3,5	;RP0=1, select bank1
  2072     162C  1303               	bcf	3,6	;RP1=0, select bank1
  2073     162D  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  2074     162E  3000               	movlw	0
  2075     162F  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  2076     1630  3000               	movlw	0
  2077     1631  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  2078     1632  3000               	movlw	0
  2079     1633  00A9               	movwf	___lldiv@quotient^(0+128)
  2080     1634  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2081     1635  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  2082     1636  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  2083     1637  0420               	iorwf	___lldiv@divisor^(0+128),w
  2084     1638  1903               	skipnz
  2085     1639  2E3B               	goto	u2611
  2086     163A  2E3C               	goto	u2610
  2087     163B                     u2611:
  2088     163B  2E89               	goto	l2146
  2089     163C                     u2610:
  2090     163C                     l2128:
  2091     163C  01AD               	clrf	___lldiv@counter^(0+128)
  2092     163D  0AAD               	incf	___lldiv@counter^(0+128),f
  2093     163E  2E4C               	goto	l2132
  2094     163F                     l2130:
  2095     163F  3001               	movlw	1
  2096     1640  00A8               	movwf	??___lldiv^(0+128)
  2097     1641                     u2625:
  2098     1641  1003               	clrc
  2099     1642  0DA0               	rlf	___lldiv@divisor^(0+128),f
  2100     1643  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  2101     1644  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  2102     1645  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  2103     1646  0BA8               	decfsz	??___lldiv^(0+128),f
  2104     1647  2E41               	goto	u2625
  2105     1648  3001               	movlw	1
  2106     1649  00A8               	movwf	??___lldiv^(0+128)
  2107     164A  0828               	movf	??___lldiv^(0+128),w
  2108     164B  07AD               	addwf	___lldiv@counter^(0+128),f
  2109     164C                     l2132:
  2110     164C  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  2111     164D  2E4F               	goto	u2631
  2112     164E  2E50               	goto	u2630
  2113     164F                     u2631:
  2114     164F  2E3F               	goto	l2130
  2115     1650                     u2630:
  2116     1650                     l2134:
  2117     1650  3001               	movlw	1
  2118     1651  00A8               	movwf	??___lldiv^(0+128)
  2119     1652                     u2645:
  2120     1652  1003               	clrc
  2121     1653  0DA9               	rlf	___lldiv@quotient^(0+128),f
  2122     1654  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  2123     1655  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  2124     1656  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  2125     1657  0BA8               	decfsz	??___lldiv^(0+128),f
  2126     1658  2E52               	goto	u2645
  2127     1659                     l2136:
  2128     1659  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2129     165A  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  2130     165B  1D03               	skipz
  2131     165C  2E67               	goto	u2655
  2132     165D  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2133     165E  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  2134     165F  1D03               	skipz
  2135     1660  2E67               	goto	u2655
  2136     1661  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2137     1662  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  2138     1663  1D03               	skipz
  2139     1664  2E67               	goto	u2655
  2140     1665  0820               	movf	___lldiv@divisor^(0+128),w
  2141     1666  0224               	subwf	___lldiv@dividend^(0+128),w
  2142     1667                     u2655:
  2143     1667  1C03               	skipc
  2144     1668  2E6A               	goto	u2651
  2145     1669  2E6B               	goto	u2650
  2146     166A                     u2651:
  2147     166A  2E7A               	goto	l2142
  2148     166B                     u2650:
  2149     166B                     l2138:
  2150     166B  0820               	movf	___lldiv@divisor^(0+128),w
  2151     166C  02A4               	subwf	___lldiv@dividend^(0+128),f
  2152     166D  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2153     166E  1C03               	skipc
  2154     166F  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  2155     1670  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  2156     1671  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2157     1672  1C03               	skipc
  2158     1673  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  2159     1674  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  2160     1675  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2161     1676  1C03               	skipc
  2162     1677  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  2163     1678  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  2164     1679                     l2140:
  2165     1679  1429               	bsf	___lldiv@quotient^(0+128),0
  2166     167A                     l2142:
  2167     167A  3001               	movlw	1
  2168     167B                     u2665:
  2169     167B  1003               	clrc
  2170     167C  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  2171     167D  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  2172     167E  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  2173     167F  0CA0               	rrf	___lldiv@divisor^(0+128),f
  2174     1680  3EFF               	addlw	-1
  2175     1681  1D03               	skipz
  2176     1682  2E7B               	goto	u2665
  2177     1683                     l2144:
  2178     1683  3001               	movlw	1
  2179     1684  02AD               	subwf	___lldiv@counter^(0+128),f
  2180     1685  1D03               	btfss	3,2
  2181     1686  2E88               	goto	u2671
  2182     1687  2E89               	goto	u2670
  2183     1688                     u2671:
  2184     1688  2E50               	goto	l2134
  2185     1689                     u2670:
  2186     1689                     l2146:
  2187     1689  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  2188     168A  00A3               	movwf	(?___lldiv+3)^(0+128)
  2189     168B  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  2190     168C  00A2               	movwf	(?___lldiv+2)^(0+128)
  2191     168D  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  2192     168E  00A1               	movwf	(?___lldiv+1)^(0+128)
  2193     168F  0829               	movf	___lldiv@quotient^(0+128),w
  2194     1690  00A0               	movwf	?___lldiv^(0+128)
  2195     1691                     l368:
  2196     1691  0008               	return
  2197     1692                     __end_of___lldiv:
  2198                           
  2199                           	psect	text6
  2200     1462                     __ptext6:	
  2201 ;; *************** function _Lcd_Write_Str *****************
  2202 ;; Defined at:
  2203 ;;		line 63 in file "LCD_8.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  a               2    2[BANK1 ] PTR unsigned char 
  2206 ;;		 -> STR_2(14), buffer2(20), buffer(20), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  i               2    7[BANK1 ] int 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       2       0       0
  2219 ;;      Locals:         0       0       2       0       0
  2220 ;;      Temps:          0       0       3       0       0
  2221 ;;      Totals:         0       0       7       0       0
  2222 ;;Total ram usage:        7 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 4
  2225 ;; This function calls:
  2226 ;;		_Lcd_Write
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;;		_setup
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233     1462                     _Lcd_Write_Str:	
  2234                           ;psect for function _Lcd_Write_Str
  2235                           
  2236     1462                     l2448:	
  2237                           ;incstack = 0
  2238                           ; Regs used in _Lcd_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2239                           
  2240                           
  2241                           ;LCD_8.c: 64:     int i;;LCD_8.c: 65:     for (i = 0; a[i] != '\0'; i++)
  2242     1462  1683               	bsf	3,5	;RP0=1, select bank1
  2243     1463  1303               	bcf	3,6	;RP1=0, select bank1
  2244     1464  01A7               	clrf	Lcd_Write_Str@i^(0+128)
  2245     1465  01A8               	clrf	(Lcd_Write_Str@i+1)^(0+128)
  2246     1466  2C93               	goto	l2454
  2247     1467                     l2450:
  2248                           
  2249                           ;LCD_8.c: 66:         Lcd_Write(a[i]);
  2250     1467  1683               	bsf	3,5	;RP0=1, select bank1
  2251     1468  1303               	bcf	3,6	;RP1=0, select bank1
  2252     1469  0827               	movf	Lcd_Write_Str@i^(0+128),w
  2253     146A  0722               	addwf	Lcd_Write_Str@a^(0+128),w
  2254     146B  00A5               	movwf	(??_Lcd_Write_Str+1)^(0+128)
  2255     146C  0823               	movf	(Lcd_Write_Str@a+1)^(0+128),w
  2256     146D  00A4               	movwf	??_Lcd_Write_Str^(0+128)
  2257     146E  1803               	skipnc
  2258     146F  0AA4               	incf	??_Lcd_Write_Str^(0+128),f
  2259     1470  1FA7               	btfss	Lcd_Write_Str@i^(0+128),7
  2260     1471  2C73               	goto	u3380
  2261     1472  03A4               	decf	??_Lcd_Write_Str^(0+128),f
  2262     1473                     u3380:
  2263     1473  1683               	bsf	3,5	;RP0=1, select bank1
  2264     1474  1303               	bcf	3,6	;RP1=0, select bank1
  2265     1475  0824               	movf	??_Lcd_Write_Str^(0+128),w
  2266     1476  00A6               	movwf	((??_Lcd_Write_Str+1)^(0+128)+1)
  2267     1477  0826               	movf	(??_Lcd_Write_Str+2)^(0+128),w
  2268     1478  1283               	bcf	3,5	;RP0=0, select bank0
  2269     1479  1303               	bcf	3,6	;RP1=0, select bank0
  2270     147A  00FF               	movwf	btemp+1
  2271     147B  1683               	bsf	3,5	;RP0=1, select bank1
  2272     147C  1303               	bcf	3,6	;RP1=0, select bank1
  2273     147D  0825               	movf	(??_Lcd_Write_Str+1)^(0+128),w
  2274     147E  0084               	movwf	4
  2275     147F  1283               	bcf	3,5	;RP0=0, select bank0
  2276     1480  1303               	bcf	3,6	;RP1=0, select bank0
  2277     1481  160A  118A  2000  160A  118A  	fcall	stringtab
  2278     1486  160A  118A  2283  160A  118A  	fcall	_Lcd_Write
  2279     148B                     l2452:
  2280     148B  3001               	movlw	1
  2281     148C  1683               	bsf	3,5	;RP0=1, select bank1
  2282     148D  1303               	bcf	3,6	;RP1=0, select bank1
  2283     148E  07A7               	addwf	Lcd_Write_Str@i^(0+128),f
  2284     148F  1803               	skipnc
  2285     1490  0AA8               	incf	(Lcd_Write_Str@i+1)^(0+128),f
  2286     1491  3000               	movlw	0
  2287     1492  07A8               	addwf	(Lcd_Write_Str@i+1)^(0+128),f
  2288     1493                     l2454:
  2289     1493  0827               	movf	Lcd_Write_Str@i^(0+128),w
  2290     1494  0722               	addwf	Lcd_Write_Str@a^(0+128),w
  2291     1495  00A5               	movwf	(??_Lcd_Write_Str+1)^(0+128)
  2292     1496  0823               	movf	(Lcd_Write_Str@a+1)^(0+128),w
  2293     1497  00A4               	movwf	??_Lcd_Write_Str^(0+128)
  2294     1498  1803               	skipnc
  2295     1499  0AA4               	incf	??_Lcd_Write_Str^(0+128),f
  2296     149A  1FA7               	btfss	Lcd_Write_Str@i^(0+128),7
  2297     149B  2C9D               	goto	u3390
  2298     149C  03A4               	decf	??_Lcd_Write_Str^(0+128),f
  2299     149D                     u3390:
  2300     149D  1683               	bsf	3,5	;RP0=1, select bank1
  2301     149E  1303               	bcf	3,6	;RP1=0, select bank1
  2302     149F  0824               	movf	??_Lcd_Write_Str^(0+128),w
  2303     14A0  00A6               	movwf	((??_Lcd_Write_Str+1)^(0+128)+1)
  2304     14A1  0826               	movf	(??_Lcd_Write_Str+2)^(0+128),w
  2305     14A2  1283               	bcf	3,5	;RP0=0, select bank0
  2306     14A3  1303               	bcf	3,6	;RP1=0, select bank0
  2307     14A4  00FF               	movwf	btemp+1
  2308     14A5  1683               	bsf	3,5	;RP0=1, select bank1
  2309     14A6  1303               	bcf	3,6	;RP1=0, select bank1
  2310     14A7  0825               	movf	(??_Lcd_Write_Str+1)^(0+128),w
  2311     14A8  0084               	movwf	4
  2312     14A9  1283               	bcf	3,5	;RP0=0, select bank0
  2313     14AA  1303               	bcf	3,6	;RP1=0, select bank0
  2314     14AB  160A  118A  2000  160A  118A  	fcall	stringtab
  2315     14B0  3A00               	xorlw	0
  2316     14B1  1D03               	skipz
  2317     14B2  2CB4               	goto	u3401
  2318     14B3  2CB5               	goto	u3400
  2319     14B4                     u3401:
  2320     14B4  2C67               	goto	l2450
  2321     14B5                     u3400:
  2322     14B5                     l164:
  2323     14B5  0008               	return
  2324     14B6                     __end_of_Lcd_Write_Str:
  2325                           
  2326                           	psect	text7
  2327     1283                     __ptext7:	
  2328 ;; *************** function _Lcd_Write *****************
  2329 ;; Defined at:
  2330 ;;		line 55 in file "LCD_8.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  a               1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  a               1    1[BANK1 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       1       0       0
  2346 ;;      Temps:          0       0       1       0       0
  2347 ;;      Totals:         0       0       2       0       0
  2348 ;;Total ram usage:        2 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 3
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_Lcd_Write_Str
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358     1283                     _Lcd_Write:	
  2359                           ;psect for function _Lcd_Write
  2360                           
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _Lcd_Write: [wreg]
  2364                           ;Lcd_Write@a stored from wreg
  2365     1283  1683               	bsf	3,5	;RP0=1, select bank1
  2366     1284  1303               	bcf	3,6	;RP1=0, select bank1
  2367     1285  00A1               	movwf	Lcd_Write@a^(0+128)
  2368     1286                     l2118:
  2369                           
  2370                           ;LCD_8.c: 56:     RC4 = 1;
  2371     1286  1283               	bcf	3,5	;RP0=0, select bank0
  2372     1287  1303               	bcf	3,6	;RP1=0, select bank0
  2373     1288  1607               	bsf	7,4	;volatile
  2374     1289                     l2120:
  2375                           
  2376                           ;LCD_8.c: 57:     PORTD = a;
  2377     1289  1683               	bsf	3,5	;RP0=1, select bank1
  2378     128A  1303               	bcf	3,6	;RP1=0, select bank1
  2379     128B  0821               	movf	Lcd_Write@a^(0+128),w
  2380     128C  1283               	bcf	3,5	;RP0=0, select bank0
  2381     128D  1303               	bcf	3,6	;RP1=0, select bank0
  2382     128E  0088               	movwf	8	;volatile
  2383     128F                     l2122:
  2384                           
  2385                           ;LCD_8.c: 58:     RC5 = 1;
  2386     128F  1687               	bsf	7,5	;volatile
  2387                           
  2388                           ;LCD_8.c: 59:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2389     1290  300C               	movlw	12
  2390     1291  1683               	bsf	3,5	;RP0=1, select bank1
  2391     1292  1303               	bcf	3,6	;RP1=0, select bank1
  2392     1293  00A0               	movwf	??_Lcd_Write^(0+128)
  2393     1294                     u5287:
  2394     1294  0BA0               	decfsz	??_Lcd_Write^(0+128),f
  2395     1295  2A94               	goto	u5287
  2396     1296  0000               	nop
  2397     1297                     l2124:
  2398                           
  2399                           ;LCD_8.c: 60:     RC5 = 0;
  2400     1297  1283               	bcf	3,5	;RP0=0, select bank0
  2401     1298  1303               	bcf	3,6	;RP1=0, select bank0
  2402     1299  1287               	bcf	7,5	;volatile
  2403     129A                     l158:
  2404     129A  0008               	return
  2405     129B                     __end_of_Lcd_Write:
  2406                           
  2407                           	psect	text8
  2408     12B7                     __ptext8:	
  2409 ;; *************** function _Lcd_Set *****************
  2410 ;; Defined at:
  2411 ;;		line 22 in file "LCD_8.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  a               1    wreg     unsigned char 
  2414 ;;  b               1    3[BANK1 ] unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  a               1    4[BANK1 ] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, pclath, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       0       1       0       0
  2427 ;;      Locals:         0       0       1       0       0
  2428 ;;      Temps:          0       0       0       0       0
  2429 ;;      Totals:         0       0       2       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 4
  2433 ;; This function calls:
  2434 ;;		_Lcd_Cmd
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;;		_setup
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441     12B7                     _Lcd_Set:	
  2442                           ;psect for function _Lcd_Set
  2443                           
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in _Lcd_Set: [wreg+status,2+status,0+pclath+cstack]
  2447                           ;Lcd_Set@a stored from wreg
  2448     12B7  1683               	bsf	3,5	;RP0=1, select bank1
  2449     12B8  1303               	bcf	3,6	;RP1=0, select bank1
  2450     12B9  00A4               	movwf	Lcd_Set@a^(0+128)
  2451     12BA                     l2440:
  2452                           
  2453                           ;LCD_8.c: 23:     if (a == 1){
  2454     12BA  0324               	decf	Lcd_Set@a^(0+128),w
  2455     12BB  1D03               	btfss	3,2
  2456     12BC  2ABE               	goto	u3361
  2457     12BD  2ABF               	goto	u3360
  2458     12BE                     u3361:
  2459     12BE  2AC8               	goto	l2444
  2460     12BF                     u3360:
  2461     12BF                     l2442:
  2462                           
  2463                           ;LCD_8.c: 24:         Lcd_Cmd((b & 0x0F)|0x80);
  2464     12BF  0823               	movf	Lcd_Set@b^(0+128),w
  2465     12C0  390F               	andlw	15
  2466     12C1  3880               	iorlw	128
  2467     12C2  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2468                           
  2469                           ;LCD_8.c: 25:     }
  2470     12C7  2AD6               	goto	l152
  2471     12C8                     l2444:
  2472     12C8  3002               	movlw	2
  2473     12C9  0624               	xorwf	Lcd_Set@a^(0+128),w
  2474     12CA  1D03               	btfss	3,2
  2475     12CB  2ACD               	goto	u3371
  2476     12CC  2ACE               	goto	u3370
  2477     12CD                     u3371:
  2478     12CD  2AD6               	goto	l152
  2479     12CE                     u3370:
  2480     12CE                     l2446:
  2481                           
  2482                           ;LCD_8.c: 27:         Lcd_Cmd((b & 0x0F)|0xC0);
  2483     12CE  0823               	movf	Lcd_Set@b^(0+128),w
  2484     12CF  390F               	andlw	15
  2485     12D0  38C0               	iorlw	192
  2486     12D1  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2487     12D6                     l152:
  2488     12D6  0008               	return
  2489     12D7                     __end_of_Lcd_Set:
  2490                           
  2491                           	psect	text9
  2492     15C6                     __ptext9:	
  2493 ;; *************** function _Lcd_Init *****************
  2494 ;; Defined at:
  2495 ;;		line 31 in file "LCD_8.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0
  2511 ;;      Temps:          0       0       2       0       0
  2512 ;;      Totals:         0       0       2       0       0
  2513 ;;Total ram usage:        2 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 4
  2516 ;; This function calls:
  2517 ;;		_Lcd_Cmd
  2518 ;; This function is called by:
  2519 ;;		_setup
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523     15C6                     _Lcd_Init:	
  2524                           ;psect for function _Lcd_Init
  2525                           
  2526     15C6                     l2482:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2529                           
  2530                           
  2531                           ;LCD_8.c: 32:     PORTD = (0x00);
  2532     15C6  1283               	bcf	3,5	;RP0=0, select bank0
  2533     15C7  1303               	bcf	3,6	;RP1=0, select bank0
  2534     15C8  0188               	clrf	8	;volatile
  2535     15C9                     l2484:
  2536                           
  2537                           ;LCD_8.c: 33:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2538     15C9  301A               	movlw	26
  2539     15CA  1683               	bsf	3,5	;RP0=1, select bank1
  2540     15CB  1303               	bcf	3,6	;RP1=0, select bank1
  2541     15CC  00A4               	movwf	(??_Lcd_Init^(0+128)+1)
  2542     15CD  30F7               	movlw	247
  2543     15CE  00A3               	movwf	??_Lcd_Init^(0+128)
  2544     15CF                     u5297:
  2545     15CF  0BA3               	decfsz	??_Lcd_Init^(0+128),f
  2546     15D0  2DCF               	goto	u5297
  2547     15D1  0BA4               	decfsz	(??_Lcd_Init^(0+128)+1),f
  2548     15D2  2DCF               	goto	u5297
  2549     15D3  2DD4               	nop2
  2550     15D4                     l2486:
  2551                           
  2552                           ;LCD_8.c: 35:     Lcd_Cmd(0x30);
  2553     15D4  3030               	movlw	48
  2554     15D5  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2555     15DA                     l2488:
  2556                           
  2557                           ;LCD_8.c: 36:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2558     15DA  3007               	movlw	7
  2559     15DB  1683               	bsf	3,5	;RP0=1, select bank1
  2560     15DC  1303               	bcf	3,6	;RP1=0, select bank1
  2561     15DD  00A4               	movwf	(??_Lcd_Init^(0+128)+1)
  2562     15DE  307C               	movlw	124
  2563     15DF  00A3               	movwf	??_Lcd_Init^(0+128)
  2564     15E0                     u5307:
  2565     15E0  0BA3               	decfsz	??_Lcd_Init^(0+128),f
  2566     15E1  2DE0               	goto	u5307
  2567     15E2  0BA4               	decfsz	(??_Lcd_Init^(0+128)+1),f
  2568     15E3  2DE0               	goto	u5307
  2569     15E4  0000               	nop
  2570     15E5                     l2490:
  2571                           
  2572                           ;LCD_8.c: 37:     Lcd_Cmd(0x30);
  2573     15E5  3030               	movlw	48
  2574     15E6  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2575     15EB                     l2492:
  2576                           
  2577                           ;LCD_8.c: 38:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2578     15EB  300F               	movlw	15
  2579     15EC  1683               	bsf	3,5	;RP0=1, select bank1
  2580     15ED  1303               	bcf	3,6	;RP1=0, select bank1
  2581     15EE  00A4               	movwf	(??_Lcd_Init^(0+128)+1)
  2582     15EF  3047               	movlw	71
  2583     15F0  00A3               	movwf	??_Lcd_Init^(0+128)
  2584     15F1                     u5317:
  2585     15F1  0BA3               	decfsz	??_Lcd_Init^(0+128),f
  2586     15F2  2DF1               	goto	u5317
  2587     15F3  0BA4               	decfsz	(??_Lcd_Init^(0+128)+1),f
  2588     15F4  2DF1               	goto	u5317
  2589     15F5                     l2494:
  2590                           
  2591                           ;LCD_8.c: 39:     Lcd_Cmd(0x30);
  2592     15F5  3030               	movlw	48
  2593     15F6  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2594     15FB                     l2496:
  2595                           
  2596                           ;LCD_8.c: 41:     Lcd_Cmd(0x38);
  2597     15FB  3038               	movlw	56
  2598     15FC  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2599     1601                     l2498:
  2600                           
  2601                           ;LCD_8.c: 43:     Lcd_Cmd(0x10);
  2602     1601  3010               	movlw	16
  2603     1602  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2604     1607                     l2500:
  2605                           
  2606                           ;LCD_8.c: 45:     Lcd_Cmd(0x01);
  2607     1607  3001               	movlw	1
  2608     1608  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2609     160D                     l2502:
  2610                           
  2611                           ;LCD_8.c: 47:     Lcd_Cmd(0x06);
  2612     160D  3006               	movlw	6
  2613     160E  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2614     1613                     l2504:
  2615                           
  2616                           ;LCD_8.c: 49:     Lcd_Cmd(0x10);
  2617     1613  3010               	movlw	16
  2618     1614  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2619     1619                     l2506:
  2620                           
  2621                           ;LCD_8.c: 51:     Lcd_Cmd(0x0C);
  2622     1619  300C               	movlw	12
  2623     161A  160A  118A  229B  160A  118A  	fcall	_Lcd_Cmd
  2624     161F                     l2508:
  2625                           
  2626                           ;LCD_8.c: 52:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2627     161F  3082               	movlw	130
  2628     1620  1683               	bsf	3,5	;RP0=1, select bank1
  2629     1621  1303               	bcf	3,6	;RP1=0, select bank1
  2630     1622  00A4               	movwf	(??_Lcd_Init^(0+128)+1)
  2631     1623  30DD               	movlw	221
  2632     1624  00A3               	movwf	??_Lcd_Init^(0+128)
  2633     1625                     u5327:
  2634     1625  0BA3               	decfsz	??_Lcd_Init^(0+128),f
  2635     1626  2E25               	goto	u5327
  2636     1627  0BA4               	decfsz	(??_Lcd_Init^(0+128)+1),f
  2637     1628  2E25               	goto	u5327
  2638     1629                     l155:
  2639     1629  0008               	return
  2640     162A                     __end_of_Lcd_Init:
  2641                           
  2642                           	psect	text10
  2643     0802                     __ptext10:	
  2644 ;; *************** function _Lcd_Clear *****************
  2645 ;; Defined at:
  2646 ;;		line 17 in file "LCD_8.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 4
  2667 ;; This function calls:
  2668 ;;		_Lcd_Cmd
  2669 ;; This function is called by:
  2670 ;;		_setup
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674     0802                     _Lcd_Clear:	
  2675                           ;psect for function _Lcd_Clear
  2676                           
  2677     0802                     l2510:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2680                           
  2681                           
  2682                           ;LCD_8.c: 18:     Lcd_Cmd(0);
  2683     0802  3000               	movlw	0
  2684     0803  160A  118A  229B  120A  158A  	fcall	_Lcd_Cmd
  2685                           
  2686                           ;LCD_8.c: 19:     Lcd_Cmd(1);
  2687     0808  3001               	movlw	1
  2688     0809  160A  118A  229B  120A  158A  	fcall	_Lcd_Cmd
  2689     080E                     l146:
  2690     080E  0008               	return
  2691     080F                     __end_of_Lcd_Clear:
  2692                           
  2693                           	psect	text11
  2694     129B                     __ptext11:	
  2695 ;; *************** function _Lcd_Cmd *****************
  2696 ;; Defined at:
  2697 ;;		line 9 in file "LCD_8.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  a               1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  a               1    2[BANK1 ] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       1       0       0
  2713 ;;      Temps:          0       0       2       0       0
  2714 ;;      Totals:         0       0       3       0       0
  2715 ;;Total ram usage:        3 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 3
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_Lcd_Clear
  2722 ;;		_Lcd_Set
  2723 ;;		_Lcd_Init
  2724 ;;		_Lcd_ShiftR
  2725 ;;		_Lcd_ShiftL
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729     129B                     _Lcd_Cmd:	
  2730                           ;psect for function _Lcd_Cmd
  2731                           
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _Lcd_Cmd: [wreg]
  2735                           ;Lcd_Cmd@a stored from wreg
  2736     129B  1683               	bsf	3,5	;RP0=1, select bank1
  2737     129C  1303               	bcf	3,6	;RP1=0, select bank1
  2738     129D  00A2               	movwf	Lcd_Cmd@a^(0+128)
  2739     129E                     l2110:
  2740                           
  2741                           ;LCD_8.c: 10:     RC4 = 0;
  2742     129E  1283               	bcf	3,5	;RP0=0, select bank0
  2743     129F  1303               	bcf	3,6	;RP1=0, select bank0
  2744     12A0  1207               	bcf	7,4	;volatile
  2745     12A1                     l2112:
  2746                           
  2747                           ;LCD_8.c: 11:     PORTD = a;
  2748     12A1  1683               	bsf	3,5	;RP0=1, select bank1
  2749     12A2  1303               	bcf	3,6	;RP1=0, select bank1
  2750     12A3  0822               	movf	Lcd_Cmd@a^(0+128),w
  2751     12A4  1283               	bcf	3,5	;RP0=0, select bank0
  2752     12A5  1303               	bcf	3,6	;RP1=0, select bank0
  2753     12A6  0088               	movwf	8	;volatile
  2754     12A7                     l2114:
  2755                           
  2756                           ;LCD_8.c: 12:     RC5 = 1;
  2757     12A7  1687               	bsf	7,5	;volatile
  2758                           
  2759                           ;LCD_8.c: 13:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2760     12A8  3007               	movlw	7
  2761     12A9  1683               	bsf	3,5	;RP0=1, select bank1
  2762     12AA  1303               	bcf	3,6	;RP1=0, select bank1
  2763     12AB  00A1               	movwf	(??_Lcd_Cmd^(0+128)+1)
  2764     12AC  307C               	movlw	124
  2765     12AD  00A0               	movwf	??_Lcd_Cmd^(0+128)
  2766     12AE                     u5337:
  2767     12AE  0BA0               	decfsz	??_Lcd_Cmd^(0+128),f
  2768     12AF  2AAE               	goto	u5337
  2769     12B0  0BA1               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  2770     12B1  2AAE               	goto	u5337
  2771     12B2  0000               	nop
  2772     12B3                     l2116:
  2773                           
  2774                           ;LCD_8.c: 14:     RC5 = 0;
  2775     12B3  1283               	bcf	3,5	;RP0=0, select bank0
  2776     12B4  1303               	bcf	3,6	;RP1=0, select bank0
  2777     12B5  1287               	bcf	7,5	;volatile
  2778     12B6                     l143:
  2779     12B6  0008               	return
  2780     12B7                     __end_of_Lcd_Cmd:
  2781                           
  2782                           	psect	text12
  2783     0A9F                     __ptext12:	
  2784 ;; *************** function _floatToStr *****************
  2785 ;; Defined at:
  2786 ;;		line 188 in file "LAB2.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  value           4   35[BANK1 ] float 
  2789 ;;  buffer          1   39[BANK1 ] PTR unsigned char 
  2790 ;;		 -> buffer(20), 
  2791 ;;  precision       2   40[BANK1 ] int 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  i               2   49[BANK1 ] int 
  2794 ;;  floatingPart    4   53[BANK1 ] float 
  2795 ;;  integerPart     2   51[BANK1 ] int 
  2796 ;;  floatingLeng    2   47[BANK1 ] int 
  2797 ;;  integerLengt    2   45[BANK1 ] int 
  2798 ;;  roundedFloat    2   43[BANK1 ] int 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       0       7       0       0
  2809 ;;      Locals:         0       0      14       0       0
  2810 ;;      Temps:          0       0       1       0       0
  2811 ;;      Totals:         0       0      22       0       0
  2812 ;;Total ram usage:       22 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 5
  2815 ;; This function calls:
  2816 ;;		___fladd
  2817 ;;		___flge
  2818 ;;		___flmul
  2819 ;;		___flneg
  2820 ;;		___flsub
  2821 ;;		___fltol
  2822 ;;		___xxtofl
  2823 ;;		_intToStr
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     0A9F                     _floatToStr:	
  2830                           ;psect for function _floatToStr
  2831                           
  2832     0A9F                     l3368:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _floatToStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2835                           
  2836                           
  2837                           ;LAB2.c: 190:     if (value < 0) {
  2838     0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  2839     0AA0  1303               	bcf	3,6	;RP1=0, select bank1
  2840     0AA1  0846               	movf	(floatToStr@value+3)^(0+128),w
  2841     0AA2  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2842     0AA3  0845               	movf	(floatToStr@value+2)^(0+128),w
  2843     0AA4  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2844     0AA5  0844               	movf	(floatToStr@value+1)^(0+128),w
  2845     0AA6  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2846     0AA7  0843               	movf	floatToStr@value^(0+128),w
  2847     0AA8  00A0               	movwf	___flge@ff1^(0+128)
  2848     0AA9  3000               	movlw	0
  2849     0AAA  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2850     0AAB  3000               	movlw	0
  2851     0AAC  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2852     0AAD  3000               	movlw	0
  2853     0AAE  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2854     0AAF  3000               	movlw	0
  2855     0AB0  00A4               	movwf	___flge@ff2^(0+128)
  2856     0AB1  120A  158A  2095  120A  158A  	fcall	___flge
  2857     0AB6  1803               	btfsc	3,0
  2858     0AB7  2AB9               	goto	u5211
  2859     0AB8  2ABA               	goto	u5210
  2860     0AB9                     u5211:
  2861     0AB9  2ADC               	goto	l3376
  2862     0ABA                     u5210:
  2863     0ABA                     l3370:
  2864                           
  2865                           ;LAB2.c: 191:         value = -value;
  2866     0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  2867     0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  2868     0ABC  0846               	movf	(floatToStr@value+3)^(0+128),w
  2869     0ABD  00A3               	movwf	(___flneg@f1+3)^(0+128)
  2870     0ABE  0845               	movf	(floatToStr@value+2)^(0+128),w
  2871     0ABF  00A2               	movwf	(___flneg@f1+2)^(0+128)
  2872     0AC0  0844               	movf	(floatToStr@value+1)^(0+128),w
  2873     0AC1  00A1               	movwf	(___flneg@f1+1)^(0+128)
  2874     0AC2  0843               	movf	floatToStr@value^(0+128),w
  2875     0AC3  00A0               	movwf	___flneg@f1^(0+128)
  2876     0AC4  160A  118A  2276  120A  158A  	fcall	___flneg
  2877     0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  2878     0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  2879     0ACB  0823               	movf	(?___flneg+3)^(0+128),w
  2880     0ACC  00C6               	movwf	(floatToStr@value+3)^(0+128)
  2881     0ACD  0822               	movf	(?___flneg+2)^(0+128),w
  2882     0ACE  00C5               	movwf	(floatToStr@value+2)^(0+128)
  2883     0ACF  0821               	movf	(?___flneg+1)^(0+128),w
  2884     0AD0  00C4               	movwf	(floatToStr@value+1)^(0+128)
  2885     0AD1  0820               	movf	?___flneg^(0+128),w
  2886     0AD2  00C3               	movwf	floatToStr@value^(0+128)
  2887     0AD3                     l3372:
  2888                           
  2889                           ;LAB2.c: 192:         *buffer++ = '-';
  2890     0AD3  0847               	movf	floatToStr@buffer^(0+128),w
  2891     0AD4  0084               	movwf	4
  2892     0AD5  302D               	movlw	45
  2893     0AD6  1383               	bcf	3,7	;select IRP bank0
  2894     0AD7  0080               	movwf	0
  2895     0AD8                     l3374:
  2896     0AD8  3001               	movlw	1
  2897     0AD9  00CA               	movwf	??_floatToStr^(0+128)
  2898     0ADA  084A               	movf	??_floatToStr^(0+128),w
  2899     0ADB  07C7               	addwf	floatToStr@buffer^(0+128),f
  2900     0ADC                     l3376:
  2901                           
  2902                           ;LAB2.c: 196:     int integerPart = (int)value;
  2903     0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  2904     0ADD  1303               	bcf	3,6	;RP1=0, select bank1
  2905     0ADE  0846               	movf	(floatToStr@value+3)^(0+128),w
  2906     0ADF  00B7               	movwf	(___fltol@f1+3)^(0+128)
  2907     0AE0  0845               	movf	(floatToStr@value+2)^(0+128),w
  2908     0AE1  00B6               	movwf	(___fltol@f1+2)^(0+128)
  2909     0AE2  0844               	movf	(floatToStr@value+1)^(0+128),w
  2910     0AE3  00B5               	movwf	(___fltol@f1+1)^(0+128)
  2911     0AE4  0843               	movf	floatToStr@value^(0+128),w
  2912     0AE5  00B4               	movwf	___fltol@f1^(0+128)
  2913     0AE6  160A  118A  2692  120A  158A  	fcall	___fltol
  2914     0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  2915     0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  2916     0AED  0835               	movf	(?___fltol+1)^(0+128),w
  2917     0AEE  00D4               	movwf	(floatToStr@integerPart+1)^(0+128)
  2918     0AEF  0834               	movf	?___fltol^(0+128),w
  2919     0AF0  00D3               	movwf	floatToStr@integerPart^(0+128)
  2920     0AF1                     l3378:
  2921                           
  2922                           ;LAB2.c: 199:     float floatingPart = value - integerPart;
  2923     0AF1  0853               	movf	floatToStr@integerPart^(0+128),w
  2924     0AF2  00A0               	movwf	___xxtofl@val^(0+128)
  2925     0AF3  0854               	movf	(floatToStr@integerPart+1)^(0+128),w
  2926     0AF4  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  2927     0AF5  3000               	movlw	0
  2928     0AF6  1BA1               	btfsc	(___xxtofl@val+1)^(0+128),7
  2929     0AF7  30FF               	movlw	255
  2930     0AF8  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  2931     0AF9  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  2932     0AFA  3001               	movlw	1
  2933     0AFB  120A  118A  26D5  120A  158A  	fcall	___xxtofl
  2934     0B00  1683               	bsf	3,5	;RP0=1, select bank1
  2935     0B01  1303               	bcf	3,6	;RP1=0, select bank1
  2936     0B02  0823               	movf	(?___xxtofl+3)^(0+128),w
  2937     0B03  00B7               	movwf	(___flsub@a+3)^(0+128)
  2938     0B04  0822               	movf	(?___xxtofl+2)^(0+128),w
  2939     0B05  00B6               	movwf	(___flsub@a+2)^(0+128)
  2940     0B06  0821               	movf	(?___xxtofl+1)^(0+128),w
  2941     0B07  00B5               	movwf	(___flsub@a+1)^(0+128)
  2942     0B08  0820               	movf	?___xxtofl^(0+128),w
  2943     0B09  00B4               	movwf	___flsub@a^(0+128)
  2944     0B0A  0846               	movf	(floatToStr@value+3)^(0+128),w
  2945     0B0B  00BB               	movwf	(___flsub@b+3)^(0+128)
  2946     0B0C  0845               	movf	(floatToStr@value+2)^(0+128),w
  2947     0B0D  00BA               	movwf	(___flsub@b+2)^(0+128)
  2948     0B0E  0844               	movf	(floatToStr@value+1)^(0+128),w
  2949     0B0F  00B9               	movwf	(___flsub@b+1)^(0+128)
  2950     0B10  0843               	movf	floatToStr@value^(0+128),w
  2951     0B11  00B8               	movwf	___flsub@b^(0+128)
  2952     0B12  160A  118A  22D7  120A  158A  	fcall	___flsub
  2953     0B17  1683               	bsf	3,5	;RP0=1, select bank1
  2954     0B18  1303               	bcf	3,6	;RP1=0, select bank1
  2955     0B19  0837               	movf	(?___flsub+3)^(0+128),w
  2956     0B1A  00D8               	movwf	(floatToStr@floatingPart+3)^(0+128)
  2957     0B1B  0836               	movf	(?___flsub+2)^(0+128),w
  2958     0B1C  00D7               	movwf	(floatToStr@floatingPart+2)^(0+128)
  2959     0B1D  0835               	movf	(?___flsub+1)^(0+128),w
  2960     0B1E  00D6               	movwf	(floatToStr@floatingPart+1)^(0+128)
  2961     0B1F  0834               	movf	?___flsub^(0+128),w
  2962     0B20  00D5               	movwf	floatToStr@floatingPart^(0+128)
  2963     0B21                     l3380:
  2964                           
  2965                           ;LAB2.c: 200:     for (int i = 0; i < precision; i++) {
  2966     0B21  01D1               	clrf	floatToStr@i^(0+128)
  2967     0B22  01D2               	clrf	(floatToStr@i+1)^(0+128)
  2968     0B23  2B4B               	goto	l3386
  2969     0B24                     l3382:
  2970                           
  2971                           ;LAB2.c: 201:         floatingPart *= 10;
  2972     0B24  3041               	movlw	65
  2973     0B25  1683               	bsf	3,5	;RP0=1, select bank1
  2974     0B26  1303               	bcf	3,6	;RP1=0, select bank1
  2975     0B27  00AC               	movwf	(___flmul@b+3)^(0+128)
  2976     0B28  3020               	movlw	32
  2977     0B29  00AB               	movwf	(___flmul@b+2)^(0+128)
  2978     0B2A  3000               	movlw	0
  2979     0B2B  00AA               	movwf	(___flmul@b+1)^(0+128)
  2980     0B2C  3000               	movlw	0
  2981     0B2D  00A9               	movwf	___flmul@b^(0+128)
  2982     0B2E  0858               	movf	(floatToStr@floatingPart+3)^(0+128),w
  2983     0B2F  00B0               	movwf	(___flmul@a+3)^(0+128)
  2984     0B30  0857               	movf	(floatToStr@floatingPart+2)^(0+128),w
  2985     0B31  00AF               	movwf	(___flmul@a+2)^(0+128)
  2986     0B32  0856               	movf	(floatToStr@floatingPart+1)^(0+128),w
  2987     0B33  00AE               	movwf	(___flmul@a+1)^(0+128)
  2988     0B34  0855               	movf	floatToStr@floatingPart^(0+128),w
  2989     0B35  00AD               	movwf	___flmul@a^(0+128)
  2990     0B36  120A  118A  204B  120A  158A  	fcall	___flmul
  2991     0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  2992     0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  2993     0B3D  082C               	movf	(?___flmul+3)^(0+128),w
  2994     0B3E  00D8               	movwf	(floatToStr@floatingPart+3)^(0+128)
  2995     0B3F  082B               	movf	(?___flmul+2)^(0+128),w
  2996     0B40  00D7               	movwf	(floatToStr@floatingPart+2)^(0+128)
  2997     0B41  082A               	movf	(?___flmul+1)^(0+128),w
  2998     0B42  00D6               	movwf	(floatToStr@floatingPart+1)^(0+128)
  2999     0B43  0829               	movf	?___flmul^(0+128),w
  3000     0B44  00D5               	movwf	floatToStr@floatingPart^(0+128)
  3001     0B45                     l3384:
  3002                           
  3003                           ;LAB2.c: 202:     }
  3004     0B45  3001               	movlw	1
  3005     0B46  07D1               	addwf	floatToStr@i^(0+128),f
  3006     0B47  1803               	skipnc
  3007     0B48  0AD2               	incf	(floatToStr@i+1)^(0+128),f
  3008     0B49  3000               	movlw	0
  3009     0B4A  07D2               	addwf	(floatToStr@i+1)^(0+128),f
  3010     0B4B                     l3386:
  3011     0B4B  0852               	movf	(floatToStr@i+1)^(0+128),w
  3012     0B4C  3A80               	xorlw	128
  3013     0B4D  00CA               	movwf	??_floatToStr^(0+128)
  3014     0B4E  0849               	movf	(floatToStr@precision+1)^(0+128),w
  3015     0B4F  3A80               	xorlw	128
  3016     0B50  024A               	subwf	??_floatToStr^(0+128),w
  3017     0B51  1D03               	skipz
  3018     0B52  2B55               	goto	u5225
  3019     0B53  0848               	movf	floatToStr@precision^(0+128),w
  3020     0B54  0251               	subwf	floatToStr@i^(0+128),w
  3021     0B55                     u5225:
  3022     0B55  1C03               	skipc
  3023     0B56  2B58               	goto	u5221
  3024     0B57  2B59               	goto	u5220
  3025     0B58                     u5221:
  3026     0B58  2B24               	goto	l3382
  3027     0B59                     u5220:
  3028     0B59                     l3388:
  3029                           
  3030                           ;LAB2.c: 203:     int roundedFloatingPart = (int)(floatingPart + 0.5);
  3031     0B59  1683               	bsf	3,5	;RP0=1, select bank1
  3032     0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  3033     0B5B  0858               	movf	(floatToStr@floatingPart+3)^(0+128),w
  3034     0B5C  00A7               	movwf	(___fladd@a+3)^(0+128)
  3035     0B5D  0857               	movf	(floatToStr@floatingPart+2)^(0+128),w
  3036     0B5E  00A6               	movwf	(___fladd@a+2)^(0+128)
  3037     0B5F  0856               	movf	(floatToStr@floatingPart+1)^(0+128),w
  3038     0B60  00A5               	movwf	(___fladd@a+1)^(0+128)
  3039     0B61  0855               	movf	floatToStr@floatingPart^(0+128),w
  3040     0B62  00A4               	movwf	___fladd@a^(0+128)
  3041     0B63  303F               	movlw	63
  3042     0B64  00A3               	movwf	(___fladd@b+3)^(0+128)
  3043     0B65  3000               	movlw	0
  3044     0B66  00A2               	movwf	(___fladd@b+2)^(0+128)
  3045     0B67  3000               	movlw	0
  3046     0B68  00A1               	movwf	(___fladd@b+1)^(0+128)
  3047     0B69  3000               	movlw	0
  3048     0B6A  00A0               	movwf	___fladd@b^(0+128)
  3049     0B6B  120A  158A  25A8  120A  158A  	fcall	___fladd
  3050     0B70  1683               	bsf	3,5	;RP0=1, select bank1
  3051     0B71  1303               	bcf	3,6	;RP1=0, select bank1
  3052     0B72  0823               	movf	(?___fladd+3)^(0+128),w
  3053     0B73  00B7               	movwf	(___fltol@f1+3)^(0+128)
  3054     0B74  0822               	movf	(?___fladd+2)^(0+128),w
  3055     0B75  00B6               	movwf	(___fltol@f1+2)^(0+128)
  3056     0B76  0821               	movf	(?___fladd+1)^(0+128),w
  3057     0B77  00B5               	movwf	(___fltol@f1+1)^(0+128)
  3058     0B78  0820               	movf	?___fladd^(0+128),w
  3059     0B79  00B4               	movwf	___fltol@f1^(0+128)
  3060     0B7A  160A  118A  2692  120A  158A  	fcall	___fltol
  3061     0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  3062     0B80  1303               	bcf	3,6	;RP1=0, select bank1
  3063     0B81  0835               	movf	(?___fltol+1)^(0+128),w
  3064     0B82  00CC               	movwf	(floatToStr@roundedFloatingPart+1)^(0+128)
  3065     0B83  0834               	movf	?___fltol^(0+128),w
  3066     0B84  00CB               	movwf	floatToStr@roundedFloatingPart^(0+128)
  3067     0B85                     l3390:
  3068                           
  3069                           ;LAB2.c: 206:     int integerLength = intToStr(integerPart, buffer, 0);
  3070     0B85  0854               	movf	(floatToStr@integerPart+1)^(0+128),w
  3071     0B86  00B1               	movwf	(intToStr@x+1)^(0+128)
  3072     0B87  0853               	movf	floatToStr@integerPart^(0+128),w
  3073     0B88  00B0               	movwf	intToStr@x^(0+128)
  3074     0B89  0847               	movf	floatToStr@buffer^(0+128),w
  3075     0B8A  00B2               	movwf	intToStr@str^(0+128)
  3076     0B8B  3000               	movlw	0
  3077     0B8C  00B3               	movwf	intToStr@d^(0+128)
  3078     0B8D  00B4               	movwf	(intToStr@d+1)^(0+128)
  3079     0B8E  160A  118A  270A  120A  158A  	fcall	_intToStr
  3080     0B93  1683               	bsf	3,5	;RP0=1, select bank1
  3081     0B94  1303               	bcf	3,6	;RP1=0, select bank1
  3082     0B95  0831               	movf	(?_intToStr+1)^(0+128),w
  3083     0B96  00CE               	movwf	(floatToStr@integerLength+1)^(0+128)
  3084     0B97  0830               	movf	?_intToStr^(0+128),w
  3085     0B98  00CD               	movwf	floatToStr@integerLength^(0+128)
  3086     0B99                     l3392:
  3087                           
  3088                           ;LAB2.c: 207:     buffer += integerLength;
  3089     0B99  084D               	movf	floatToStr@integerLength^(0+128),w
  3090     0B9A  00CA               	movwf	??_floatToStr^(0+128)
  3091     0B9B  084A               	movf	??_floatToStr^(0+128),w
  3092     0B9C  07C7               	addwf	floatToStr@buffer^(0+128),f
  3093     0B9D                     l3394:
  3094                           
  3095                           ;LAB2.c: 210:     if (precision > 0) {
  3096     0B9D  0849               	movf	(floatToStr@precision+1)^(0+128),w
  3097     0B9E  3A80               	xorlw	128
  3098     0B9F  00FF               	movwf	btemp+1
  3099     0BA0  3080               	movlw	128
  3100     0BA1  027F               	subwf	btemp+1,w
  3101     0BA2  1D03               	skipz
  3102     0BA3  2BA6               	goto	u5235
  3103     0BA4  3001               	movlw	1
  3104     0BA5  0248               	subwf	floatToStr@precision^(0+128),w
  3105     0BA6                     u5235:
  3106     0BA6  1C03               	skipc
  3107     0BA7  2BA9               	goto	u5231
  3108     0BA8  2BAA               	goto	u5230
  3109     0BA9                     u5231:
  3110     0BA9  2BB5               	goto	l3400
  3111     0BAA                     u5230:
  3112     0BAA                     l3396:
  3113                           
  3114                           ;LAB2.c: 211:         *buffer++ = '.';
  3115     0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  3116     0BAB  1303               	bcf	3,6	;RP1=0, select bank1
  3117     0BAC  0847               	movf	floatToStr@buffer^(0+128),w
  3118     0BAD  0084               	movwf	4
  3119     0BAE  302E               	movlw	46
  3120     0BAF  1383               	bcf	3,7	;select IRP bank0
  3121     0BB0  0080               	movwf	0
  3122     0BB1                     l3398:
  3123     0BB1  3001               	movlw	1
  3124     0BB2  00CA               	movwf	??_floatToStr^(0+128)
  3125     0BB3  084A               	movf	??_floatToStr^(0+128),w
  3126     0BB4  07C7               	addwf	floatToStr@buffer^(0+128),f
  3127     0BB5                     l3400:
  3128                           
  3129                           ;LAB2.c: 215:     int floatingLength = intToStr(roundedFloatingPart, buffer, precision);
  3130     0BB5  1683               	bsf	3,5	;RP0=1, select bank1
  3131     0BB6  1303               	bcf	3,6	;RP1=0, select bank1
  3132     0BB7  084C               	movf	(floatToStr@roundedFloatingPart+1)^(0+128),w
  3133     0BB8  00B1               	movwf	(intToStr@x+1)^(0+128)
  3134     0BB9  084B               	movf	floatToStr@roundedFloatingPart^(0+128),w
  3135     0BBA  00B0               	movwf	intToStr@x^(0+128)
  3136     0BBB  0847               	movf	floatToStr@buffer^(0+128),w
  3137     0BBC  00B2               	movwf	intToStr@str^(0+128)
  3138     0BBD  0849               	movf	(floatToStr@precision+1)^(0+128),w
  3139     0BBE  00B4               	movwf	(intToStr@d+1)^(0+128)
  3140     0BBF  0848               	movf	floatToStr@precision^(0+128),w
  3141     0BC0  00B3               	movwf	intToStr@d^(0+128)
  3142     0BC1  160A  118A  270A  120A  158A  	fcall	_intToStr
  3143     0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  3144     0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  3145     0BC8  0831               	movf	(?_intToStr+1)^(0+128),w
  3146     0BC9  00D0               	movwf	(floatToStr@floatingLength+1)^(0+128)
  3147     0BCA  0830               	movf	?_intToStr^(0+128),w
  3148     0BCB  00CF               	movwf	floatToStr@floatingLength^(0+128)
  3149     0BCC                     l3402:
  3150                           
  3151                           ;LAB2.c: 216:     buffer += floatingLength;
  3152     0BCC  084F               	movf	floatToStr@floatingLength^(0+128),w
  3153     0BCD  00CA               	movwf	??_floatToStr^(0+128)
  3154     0BCE  084A               	movf	??_floatToStr^(0+128),w
  3155     0BCF  07C7               	addwf	floatToStr@buffer^(0+128),f
  3156     0BD0                     l3404:
  3157                           
  3158                           ;LAB2.c: 219:     *buffer = '\0';
  3159     0BD0  0847               	movf	floatToStr@buffer^(0+128),w
  3160     0BD1  0084               	movwf	4
  3161     0BD2  1383               	bcf	3,7	;select IRP bank0
  3162     0BD3  0180               	clrf	0
  3163     0BD4                     l132:
  3164     0BD4  0008               	return
  3165     0BD5                     __end_of_floatToStr:
  3166                           
  3167                           	psect	text13
  3168     170A                     __ptext13:	
  3169 ;; *************** function _intToStr *****************
  3170 ;; Defined at:
  3171 ;;		line 161 in file "LAB2.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  x               2   16[BANK1 ] int 
  3174 ;;  str             1   18[BANK1 ] PTR unsigned char 
  3175 ;;		 -> buffer(20), 
  3176 ;;  d               2   19[BANK1 ] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  i               2   22[BANK1 ] int 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2   16[BANK1 ] int 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       5       0       0
  3189 ;;      Locals:         0       0       2       0       0
  3190 ;;      Temps:          0       0       1       0       0
  3191 ;;      Totals:         0       0       8       0       0
  3192 ;;Total ram usage:        8 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 4
  3195 ;; This function calls:
  3196 ;;		___awdiv
  3197 ;;		___awmod
  3198 ;;		_reverse
  3199 ;; This function is called by:
  3200 ;;		_floatToStr
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204     170A                     _intToStr:	
  3205                           ;psect for function _intToStr
  3206                           
  3207     170A                     l3344:	
  3208                           ;incstack = 0
  3209                           ; Regs used in _intToStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3210                           
  3211                           
  3212                           ;LAB2.c: 162:     int i = 0;
  3213     170A  1683               	bsf	3,5	;RP0=1, select bank1
  3214     170B  1303               	bcf	3,6	;RP1=0, select bank1
  3215     170C  01B6               	clrf	intToStr@i^(0+128)
  3216     170D  01B7               	clrf	(intToStr@i+1)^(0+128)
  3217                           
  3218                           ;LAB2.c: 163:     while (x) {
  3219     170E  2F40               	goto	l3352
  3220     170F                     l3346:
  3221                           
  3222                           ;LAB2.c: 164:         str[i++] = (x % 10) + '0';
  3223     170F  0836               	movf	intToStr@i^(0+128),w
  3224     1710  0732               	addwf	intToStr@str^(0+128),w
  3225     1711  00B5               	movwf	??_intToStr^(0+128)
  3226     1712  0835               	movf	??_intToStr^(0+128),w
  3227     1713  0084               	movwf	4
  3228     1714  300A               	movlw	10
  3229     1715  00A0               	movwf	___awmod@divisor^(0+128)
  3230     1716  3000               	movlw	0
  3231     1717  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3232     1718  0831               	movf	(intToStr@x+1)^(0+128),w
  3233     1719  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3234     171A  0830               	movf	intToStr@x^(0+128),w
  3235     171B  00A2               	movwf	___awmod@dividend^(0+128)
  3236     171C  160A  118A  250A  160A  118A  	fcall	___awmod
  3237     1721  1683               	bsf	3,5	;RP0=1, select bank1
  3238     1722  1303               	bcf	3,6	;RP1=0, select bank1
  3239     1723  0820               	movf	?___awmod^(0+128),w
  3240     1724  3E30               	addlw	48
  3241     1725  1383               	bcf	3,7	;select IRP bank0
  3242     1726  0080               	movwf	0
  3243     1727                     l3348:
  3244     1727  3001               	movlw	1
  3245     1728  07B6               	addwf	intToStr@i^(0+128),f
  3246     1729  1803               	skipnc
  3247     172A  0AB7               	incf	(intToStr@i+1)^(0+128),f
  3248     172B  3000               	movlw	0
  3249     172C  07B7               	addwf	(intToStr@i+1)^(0+128),f
  3250     172D                     l3350:
  3251                           
  3252                           ;LAB2.c: 165:         x = x / 10;
  3253     172D  300A               	movlw	10
  3254     172E  00A0               	movwf	___awdiv@divisor^(0+128)
  3255     172F  3000               	movlw	0
  3256     1730  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3257     1731  0831               	movf	(intToStr@x+1)^(0+128),w
  3258     1732  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3259     1733  0830               	movf	intToStr@x^(0+128),w
  3260     1734  00A2               	movwf	___awdiv@dividend^(0+128)
  3261     1735  120A  118A  278F  160A  118A  	fcall	___awdiv
  3262     173A  1683               	bsf	3,5	;RP0=1, select bank1
  3263     173B  1303               	bcf	3,6	;RP1=0, select bank1
  3264     173C  0821               	movf	(?___awdiv+1)^(0+128),w
  3265     173D  00B1               	movwf	(intToStr@x+1)^(0+128)
  3266     173E  0820               	movf	?___awdiv^(0+128),w
  3267     173F  00B0               	movwf	intToStr@x^(0+128)
  3268     1740                     l3352:
  3269                           
  3270                           ;LAB2.c: 163:     while (x) {
  3271     1740  0830               	movf	intToStr@x^(0+128),w
  3272     1741  0431               	iorwf	(intToStr@x+1)^(0+128),w
  3273     1742  1D03               	btfss	3,2
  3274     1743  2F45               	goto	u5191
  3275     1744  2F46               	goto	u5190
  3276     1745                     u5191:
  3277     1745  2F0F               	goto	l3346
  3278     1746                     u5190:
  3279     1746  2F57               	goto	l3358
  3280     1747                     l3354:
  3281                           
  3282                           ;LAB2.c: 168:         str[i++] = '0';
  3283     1747  1683               	bsf	3,5	;RP0=1, select bank1
  3284     1748  1303               	bcf	3,6	;RP1=0, select bank1
  3285     1749  0836               	movf	intToStr@i^(0+128),w
  3286     174A  0732               	addwf	intToStr@str^(0+128),w
  3287     174B  00B5               	movwf	??_intToStr^(0+128)
  3288     174C  0835               	movf	??_intToStr^(0+128),w
  3289     174D  0084               	movwf	4
  3290     174E  3030               	movlw	48
  3291     174F  1383               	bcf	3,7	;select IRP bank0
  3292     1750  0080               	movwf	0
  3293     1751                     l3356:
  3294     1751  3001               	movlw	1
  3295     1752  07B6               	addwf	intToStr@i^(0+128),f
  3296     1753  1803               	skipnc
  3297     1754  0AB7               	incf	(intToStr@i+1)^(0+128),f
  3298     1755  3000               	movlw	0
  3299     1756  07B7               	addwf	(intToStr@i+1)^(0+128),f
  3300     1757                     l3358:
  3301                           
  3302                           ;LAB2.c: 167:     while (i < d) {
  3303     1757  0837               	movf	(intToStr@i+1)^(0+128),w
  3304     1758  3A80               	xorlw	128
  3305     1759  00B5               	movwf	??_intToStr^(0+128)
  3306     175A  0834               	movf	(intToStr@d+1)^(0+128),w
  3307     175B  3A80               	xorlw	128
  3308     175C  0235               	subwf	??_intToStr^(0+128),w
  3309     175D  1D03               	skipz
  3310     175E  2F61               	goto	u5205
  3311     175F  0833               	movf	intToStr@d^(0+128),w
  3312     1760  0236               	subwf	intToStr@i^(0+128),w
  3313     1761                     u5205:
  3314     1761  1C03               	skipc
  3315     1762  2F64               	goto	u5201
  3316     1763  2F65               	goto	u5200
  3317     1764                     u5201:
  3318     1764  2F47               	goto	l3354
  3319     1765                     u5200:
  3320     1765                     l3360:
  3321                           
  3322                           ;LAB2.c: 170:     reverse(str, i);
  3323     1765  1683               	bsf	3,5	;RP0=1, select bank1
  3324     1766  1303               	bcf	3,6	;RP1=0, select bank1
  3325     1767  0832               	movf	intToStr@str^(0+128),w
  3326     1768  00A0               	movwf	reverse@str^(0+128)
  3327     1769  3000               	movlw	0
  3328     176A  00A1               	movwf	(reverse@str+1)^(0+128)
  3329     176B  0837               	movf	(intToStr@i+1)^(0+128),w
  3330     176C  00A3               	movwf	(reverse@length+1)^(0+128)
  3331     176D  0836               	movf	intToStr@i^(0+128),w
  3332     176E  00A2               	movwf	reverse@length^(0+128)
  3333     176F  160A  118A  2782  160A  118A  	fcall	_reverse
  3334     1774                     l3362:
  3335                           
  3336                           ;LAB2.c: 171:     str[i] = '\0';
  3337     1774  1683               	bsf	3,5	;RP0=1, select bank1
  3338     1775  1303               	bcf	3,6	;RP1=0, select bank1
  3339     1776  0836               	movf	intToStr@i^(0+128),w
  3340     1777  0732               	addwf	intToStr@str^(0+128),w
  3341     1778  00B5               	movwf	??_intToStr^(0+128)
  3342     1779  0835               	movf	??_intToStr^(0+128),w
  3343     177A  0084               	movwf	4
  3344     177B  1383               	bcf	3,7	;select IRP bank0
  3345     177C  0180               	clrf	0
  3346     177D                     l3364:
  3347                           
  3348                           ;LAB2.c: 172:     return i;
  3349     177D  0837               	movf	(intToStr@i+1)^(0+128),w
  3350     177E  00B1               	movwf	(?_intToStr+1)^(0+128)
  3351     177F  0836               	movf	intToStr@i^(0+128),w
  3352     1780  00B0               	movwf	?_intToStr^(0+128)
  3353     1781                     l119:
  3354     1781  0008               	return
  3355     1782                     __end_of_intToStr:
  3356                           
  3357                           	psect	text14
  3358     1782                     __ptext14:	
  3359 ;; *************** function _reverse *****************
  3360 ;; Defined at:
  3361 ;;		line 149 in file "LAB2.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  str             2    0[BANK1 ] PTR unsigned char 
  3364 ;;		 -> buffer2(20), buffer(20), 
  3365 ;;  length          2    2[BANK1 ] int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  temp            1   11[BANK1 ] unsigned char 
  3368 ;;  end             2   14[BANK1 ] int 
  3369 ;;  start           2   12[BANK1 ] int 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       4       0       0
  3380 ;;      Locals:         0       0       5       0       0
  3381 ;;      Temps:          0       0       7       0       0
  3382 ;;      Totals:         0       0      16       0       0
  3383 ;;Total ram usage:       16 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_intToStr
  3390 ;;		_uint8ToStr
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394     1782                     _reverse:	
  3395                           ;psect for function _reverse
  3396                           
  3397     1782                     l3332:	
  3398                           ;incstack = 0
  3399                           ; Regs used in _reverse: [wreg-fsr0h+status,2+status,0]
  3400                           
  3401                           
  3402                           ;LAB2.c: 150:     int start = 0;
  3403     1782  1683               	bsf	3,5	;RP0=1, select bank1
  3404     1783  1303               	bcf	3,6	;RP1=0, select bank1
  3405     1784  01AC               	clrf	reverse@start^(0+128)
  3406     1785  01AD               	clrf	(reverse@start+1)^(0+128)
  3407     1786                     l3334:
  3408                           
  3409                           ;LAB2.c: 151:     int end = length - 1;
  3410     1786  0822               	movf	reverse@length^(0+128),w
  3411     1787  3EFF               	addlw	255
  3412     1788  00AE               	movwf	reverse@end^(0+128)
  3413     1789  0823               	movf	(reverse@length+1)^(0+128),w
  3414     178A  1803               	skipnc
  3415     178B  3E01               	addlw	1
  3416     178C  3EFF               	addlw	255
  3417     178D  00AF               	movwf	(reverse@end+1)^(0+128)
  3418                           
  3419                           ;LAB2.c: 152:     while (start < end) {
  3420     178E  2FF1               	goto	l3342
  3421     178F                     l3336:
  3422                           
  3423                           ;LAB2.c: 153:         char temp = str[start];
  3424     178F  1683               	bsf	3,5	;RP0=1, select bank1
  3425     1790  1303               	bcf	3,6	;RP1=0, select bank1
  3426     1791  082C               	movf	reverse@start^(0+128),w
  3427     1792  0720               	addwf	reverse@str^(0+128),w
  3428     1793  00A5               	movwf	(??_reverse+1)^(0+128)
  3429     1794  0821               	movf	(reverse@str+1)^(0+128),w
  3430     1795  00A4               	movwf	??_reverse^(0+128)
  3431     1796  1803               	skipnc
  3432     1797  0AA4               	incf	??_reverse^(0+128),f
  3433     1798  1FAC               	btfss	reverse@start^(0+128),7
  3434     1799  2F9B               	goto	u5140
  3435     179A  03A4               	decf	??_reverse^(0+128),f
  3436     179B                     u5140:
  3437     179B  1683               	bsf	3,5	;RP0=1, select bank1
  3438     179C  1303               	bcf	3,6	;RP1=0, select bank1
  3439     179D  0824               	movf	??_reverse^(0+128),w
  3440     179E  00A6               	movwf	((??_reverse+1)^(0+128)+1)
  3441     179F  0825               	movf	(??_reverse+1)^(0+128),w
  3442     17A0  0084               	movwf	4
  3443     17A1  1783               	bsf	3,7
  3444     17A2  1C26               	btfss	(??_reverse+2)^(0+128),0
  3445     17A3  1383               	bcf	3,7
  3446     17A4  0800               	movf	0,w
  3447     17A5  00AB               	movwf	reverse@temp^(0+128)
  3448                           
  3449                           ;LAB2.c: 154:         str[start] = str[end];
  3450     17A6  082E               	movf	reverse@end^(0+128),w
  3451     17A7  0720               	addwf	reverse@str^(0+128),w
  3452     17A8  00A5               	movwf	(??_reverse+1)^(0+128)
  3453     17A9  0821               	movf	(reverse@str+1)^(0+128),w
  3454     17AA  00A4               	movwf	??_reverse^(0+128)
  3455     17AB  1803               	skipnc
  3456     17AC  0AA4               	incf	??_reverse^(0+128),f
  3457     17AD  1FAE               	btfss	reverse@end^(0+128),7
  3458     17AE  2FB0               	goto	u5150
  3459     17AF  03A4               	decf	??_reverse^(0+128),f
  3460     17B0                     u5150:
  3461     17B0  1683               	bsf	3,5	;RP0=1, select bank1
  3462     17B1  1303               	bcf	3,6	;RP1=0, select bank1
  3463     17B2  0824               	movf	??_reverse^(0+128),w
  3464     17B3  00A6               	movwf	((??_reverse+1)^(0+128)+1)
  3465     17B4  0825               	movf	(??_reverse+1)^(0+128),w
  3466     17B5  0084               	movwf	4
  3467     17B6  1783               	bsf	3,7
  3468     17B7  1C26               	btfss	(??_reverse+2)^(0+128),0
  3469     17B8  1383               	bcf	3,7
  3470     17B9  0800               	movf	0,w
  3471     17BA  00A7               	movwf	(??_reverse+3)^(0+128)
  3472     17BB  082C               	movf	reverse@start^(0+128),w
  3473     17BC  0720               	addwf	reverse@str^(0+128),w
  3474     17BD  00A9               	movwf	(??_reverse+5)^(0+128)
  3475     17BE  0821               	movf	(reverse@str+1)^(0+128),w
  3476     17BF  00A8               	movwf	(??_reverse+4)^(0+128)
  3477     17C0  1803               	skipnc
  3478     17C1  0AA8               	incf	(??_reverse+4)^(0+128),f
  3479     17C2  1FAC               	btfss	reverse@start^(0+128),7
  3480     17C3  2FC5               	goto	u5160
  3481     17C4  03A8               	decf	(??_reverse+4)^(0+128),f
  3482     17C5                     u5160:
  3483     17C5  1683               	bsf	3,5	;RP0=1, select bank1
  3484     17C6  1303               	bcf	3,6	;RP1=0, select bank1
  3485     17C7  0828               	movf	(??_reverse+4)^(0+128),w
  3486     17C8  00AA               	movwf	((??_reverse+5)^(0+128)+1)
  3487     17C9  0829               	movf	(??_reverse+5)^(0+128),w
  3488     17CA  0084               	movwf	4
  3489     17CB  1783               	bsf	3,7
  3490     17CC  1C2A               	btfss	(??_reverse+6)^(0+128),0
  3491     17CD  1383               	bcf	3,7
  3492     17CE  0827               	movf	(??_reverse+3)^(0+128),w
  3493     17CF  0080               	movwf	0
  3494                           
  3495                           ;LAB2.c: 155:         str[end] = temp;
  3496     17D0  082E               	movf	reverse@end^(0+128),w
  3497     17D1  0720               	addwf	reverse@str^(0+128),w
  3498     17D2  00A5               	movwf	(??_reverse+1)^(0+128)
  3499     17D3  0821               	movf	(reverse@str+1)^(0+128),w
  3500     17D4  00A4               	movwf	??_reverse^(0+128)
  3501     17D5  1803               	skipnc
  3502     17D6  0AA4               	incf	??_reverse^(0+128),f
  3503     17D7  1FAE               	btfss	reverse@end^(0+128),7
  3504     17D8  2FDA               	goto	u5170
  3505     17D9  03A4               	decf	??_reverse^(0+128),f
  3506     17DA                     u5170:
  3507     17DA  1683               	bsf	3,5	;RP0=1, select bank1
  3508     17DB  1303               	bcf	3,6	;RP1=0, select bank1
  3509     17DC  0824               	movf	??_reverse^(0+128),w
  3510     17DD  00A6               	movwf	((??_reverse+1)^(0+128)+1)
  3511     17DE  0825               	movf	(??_reverse+1)^(0+128),w
  3512     17DF  0084               	movwf	4
  3513     17E0  1783               	bsf	3,7
  3514     17E1  1C26               	btfss	(??_reverse+2)^(0+128),0
  3515     17E2  1383               	bcf	3,7
  3516     17E3  082B               	movf	reverse@temp^(0+128),w
  3517     17E4  0080               	movwf	0
  3518     17E5                     l3338:
  3519                           
  3520                           ;LAB2.c: 156:         start++;
  3521     17E5  3001               	movlw	1
  3522     17E6  07AC               	addwf	reverse@start^(0+128),f
  3523     17E7  1803               	skipnc
  3524     17E8  0AAD               	incf	(reverse@start+1)^(0+128),f
  3525     17E9  3000               	movlw	0
  3526     17EA  07AD               	addwf	(reverse@start+1)^(0+128),f
  3527     17EB                     l3340:
  3528                           
  3529                           ;LAB2.c: 157:         end--;
  3530     17EB  30FF               	movlw	255
  3531     17EC  07AE               	addwf	reverse@end^(0+128),f
  3532     17ED  1803               	skipnc
  3533     17EE  0AAF               	incf	(reverse@end+1)^(0+128),f
  3534     17EF  30FF               	movlw	255
  3535     17F0  07AF               	addwf	(reverse@end+1)^(0+128),f
  3536     17F1                     l3342:
  3537                           
  3538                           ;LAB2.c: 152:     while (start < end) {
  3539     17F1  082D               	movf	(reverse@start+1)^(0+128),w
  3540     17F2  3A80               	xorlw	128
  3541     17F3  00A4               	movwf	??_reverse^(0+128)
  3542     17F4  082F               	movf	(reverse@end+1)^(0+128),w
  3543     17F5  3A80               	xorlw	128
  3544     17F6  0224               	subwf	??_reverse^(0+128),w
  3545     17F7  1D03               	skipz
  3546     17F8  2FFB               	goto	u5185
  3547     17F9  082E               	movf	reverse@end^(0+128),w
  3548     17FA  022C               	subwf	reverse@start^(0+128),w
  3549     17FB                     u5185:
  3550     17FB  1C03               	skipc
  3551     17FC  2FFE               	goto	u5181
  3552     17FD  2FFF               	goto	u5180
  3553     17FE                     u5181:
  3554     17FE  2F8F               	goto	l3336
  3555     17FF                     u5180:
  3556     17FF                     l110:
  3557     17FF  0008               	return
  3558     1800                     __end_of_reverse:
  3559                           
  3560                           	psect	text15
  3561     150A                     __ptext15:	
  3562 ;; *************** function ___awmod *****************
  3563 ;; Defined at:
  3564 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  divisor         2    0[BANK1 ] int 
  3567 ;;  dividend        2    2[BANK1 ] int 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  sign            1    6[BANK1 ] unsigned char 
  3570 ;;  counter         1    5[BANK1 ] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  2    0[BANK1 ] int 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3580 ;;      Params:         0       0       4       0       0
  3581 ;;      Locals:         0       0       2       0       0
  3582 ;;      Temps:          0       0       1       0       0
  3583 ;;      Totals:         0       0       7       0       0
  3584 ;;Total ram usage:        7 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 3
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_intToStr
  3591 ;;		_uint8ToStr
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595     150A                     ___awmod:	
  3596                           ;psect for function ___awmod
  3597                           
  3598     150A                     l2194:	
  3599                           ;incstack = 0
  3600                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3601                           
  3602     150A  1683               	bsf	3,5	;RP0=1, select bank1
  3603     150B  1303               	bcf	3,6	;RP1=0, select bank1
  3604     150C  01A6               	clrf	___awmod@sign^(0+128)
  3605     150D                     l2196:
  3606     150D  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3607     150E  2D10               	goto	u2781
  3608     150F  2D11               	goto	u2780
  3609     1510                     u2781:
  3610     1510  2D18               	goto	l2202
  3611     1511                     u2780:
  3612     1511                     l2198:
  3613     1511  09A2               	comf	___awmod@dividend^(0+128),f
  3614     1512  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3615     1513  0AA2               	incf	___awmod@dividend^(0+128),f
  3616     1514  1903               	skipnz
  3617     1515  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3618     1516                     l2200:
  3619     1516  01A6               	clrf	___awmod@sign^(0+128)
  3620     1517  0AA6               	incf	___awmod@sign^(0+128),f
  3621     1518                     l2202:
  3622     1518  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3623     1519  2D1B               	goto	u2791
  3624     151A  2D1C               	goto	u2790
  3625     151B                     u2791:
  3626     151B  2D21               	goto	l2206
  3627     151C                     u2790:
  3628     151C                     l2204:
  3629     151C  09A0               	comf	___awmod@divisor^(0+128),f
  3630     151D  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3631     151E  0AA0               	incf	___awmod@divisor^(0+128),f
  3632     151F  1903               	skipnz
  3633     1520  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3634     1521                     l2206:
  3635     1521  0820               	movf	___awmod@divisor^(0+128),w
  3636     1522  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  3637     1523  1903               	btfsc	3,2
  3638     1524  2D26               	goto	u2801
  3639     1525  2D27               	goto	u2800
  3640     1526                     u2801:
  3641     1526  2D56               	goto	l2224
  3642     1527                     u2800:
  3643     1527                     l2208:
  3644     1527  01A5               	clrf	___awmod@counter^(0+128)
  3645     1528  0AA5               	incf	___awmod@counter^(0+128),f
  3646     1529  2D35               	goto	l2214
  3647     152A                     l2210:
  3648     152A  3001               	movlw	1
  3649     152B                     u2815:
  3650     152B  1003               	clrc
  3651     152C  0DA0               	rlf	___awmod@divisor^(0+128),f
  3652     152D  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3653     152E  3EFF               	addlw	-1
  3654     152F  1D03               	skipz
  3655     1530  2D2B               	goto	u2815
  3656     1531                     l2212:
  3657     1531  3001               	movlw	1
  3658     1532  00A4               	movwf	??___awmod^(0+128)
  3659     1533  0824               	movf	??___awmod^(0+128),w
  3660     1534  07A5               	addwf	___awmod@counter^(0+128),f
  3661     1535                     l2214:
  3662     1535  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3663     1536  2D38               	goto	u2821
  3664     1537  2D39               	goto	u2820
  3665     1538                     u2821:
  3666     1538  2D2A               	goto	l2210
  3667     1539                     u2820:
  3668     1539                     l2216:
  3669     1539  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3670     153A  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  3671     153B  1D03               	skipz
  3672     153C  2D3F               	goto	u2835
  3673     153D  0820               	movf	___awmod@divisor^(0+128),w
  3674     153E  0222               	subwf	___awmod@dividend^(0+128),w
  3675     153F                     u2835:
  3676     153F  1C03               	skipc
  3677     1540  2D42               	goto	u2831
  3678     1541  2D43               	goto	u2830
  3679     1542                     u2831:
  3680     1542  2D49               	goto	l2220
  3681     1543                     u2830:
  3682     1543                     l2218:
  3683     1543  0820               	movf	___awmod@divisor^(0+128),w
  3684     1544  02A2               	subwf	___awmod@dividend^(0+128),f
  3685     1545  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3686     1546  1C03               	skipc
  3687     1547  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  3688     1548  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  3689     1549                     l2220:
  3690     1549  3001               	movlw	1
  3691     154A                     u2845:
  3692     154A  1003               	clrc
  3693     154B  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  3694     154C  0CA0               	rrf	___awmod@divisor^(0+128),f
  3695     154D  3EFF               	addlw	-1
  3696     154E  1D03               	skipz
  3697     154F  2D4A               	goto	u2845
  3698     1550                     l2222:
  3699     1550  3001               	movlw	1
  3700     1551  02A5               	subwf	___awmod@counter^(0+128),f
  3701     1552  1D03               	btfss	3,2
  3702     1553  2D55               	goto	u2851
  3703     1554  2D56               	goto	u2850
  3704     1555                     u2851:
  3705     1555  2D39               	goto	l2216
  3706     1556                     u2850:
  3707     1556                     l2224:
  3708     1556  0826               	movf	___awmod@sign^(0+128),w
  3709     1557  1903               	btfsc	3,2
  3710     1558  2D5A               	goto	u2861
  3711     1559  2D5B               	goto	u2860
  3712     155A                     u2861:
  3713     155A  2D60               	goto	l2228
  3714     155B                     u2860:
  3715     155B                     l2226:
  3716     155B  09A2               	comf	___awmod@dividend^(0+128),f
  3717     155C  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3718     155D  0AA2               	incf	___awmod@dividend^(0+128),f
  3719     155E  1903               	skipnz
  3720     155F  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3721     1560                     l2228:
  3722     1560  0823               	movf	(___awmod@dividend+1)^(0+128),w
  3723     1561  00A1               	movwf	(?___awmod+1)^(0+128)
  3724     1562  0822               	movf	___awmod@dividend^(0+128),w
  3725     1563  00A0               	movwf	?___awmod^(0+128)
  3726     1564                     l498:
  3727     1564  0008               	return
  3728     1565                     __end_of___awmod:
  3729                           
  3730                           	psect	text16
  3731     078F                     __ptext16:	
  3732 ;; *************** function ___awdiv *****************
  3733 ;; Defined at:
  3734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  divisor         2    0[BANK1 ] int 
  3737 ;;  dividend        2    2[BANK1 ] int 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  quotient        2    7[BANK1 ] int 
  3740 ;;  sign            1    6[BANK1 ] unsigned char 
  3741 ;;  counter         1    5[BANK1 ] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  2    0[BANK1 ] int 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3751 ;;      Params:         0       0       4       0       0
  3752 ;;      Locals:         0       0       4       0       0
  3753 ;;      Temps:          0       0       1       0       0
  3754 ;;      Totals:         0       0       9       0       0
  3755 ;;Total ram usage:        9 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; Hardware stack levels required when called: 3
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_intToStr
  3762 ;;		_uint8ToStr
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766     078F                     ___awdiv:	
  3767                           ;psect for function ___awdiv
  3768                           
  3769     078F                     l2150:	
  3770                           ;incstack = 0
  3771                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3772                           
  3773     078F  1683               	bsf	3,5	;RP0=1, select bank1
  3774     0790  1303               	bcf	3,6	;RP1=0, select bank1
  3775     0791  01A6               	clrf	___awdiv@sign^(0+128)
  3776     0792                     l2152:
  3777     0792  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3778     0793  2F95               	goto	u2681
  3779     0794  2F96               	goto	u2680
  3780     0795                     u2681:
  3781     0795  2F9D               	goto	l2158
  3782     0796                     u2680:
  3783     0796                     l2154:
  3784     0796  09A0               	comf	___awdiv@divisor^(0+128),f
  3785     0797  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  3786     0798  0AA0               	incf	___awdiv@divisor^(0+128),f
  3787     0799  1903               	skipnz
  3788     079A  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  3789     079B                     l2156:
  3790     079B  01A6               	clrf	___awdiv@sign^(0+128)
  3791     079C  0AA6               	incf	___awdiv@sign^(0+128),f
  3792     079D                     l2158:
  3793     079D  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  3794     079E  2FA0               	goto	u2691
  3795     079F  2FA1               	goto	u2690
  3796     07A0                     u2691:
  3797     07A0  2FAA               	goto	l2164
  3798     07A1                     u2690:
  3799     07A1                     l2160:
  3800     07A1  09A2               	comf	___awdiv@dividend^(0+128),f
  3801     07A2  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  3802     07A3  0AA2               	incf	___awdiv@dividend^(0+128),f
  3803     07A4  1903               	skipnz
  3804     07A5  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  3805     07A6                     l2162:
  3806     07A6  3001               	movlw	1
  3807     07A7  00A4               	movwf	??___awdiv^(0+128)
  3808     07A8  0824               	movf	??___awdiv^(0+128),w
  3809     07A9  06A6               	xorwf	___awdiv@sign^(0+128),f
  3810     07AA                     l2164:
  3811     07AA  01A7               	clrf	___awdiv@quotient^(0+128)
  3812     07AB  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  3813     07AC                     l2166:
  3814     07AC  0820               	movf	___awdiv@divisor^(0+128),w
  3815     07AD  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  3816     07AE  1903               	btfsc	3,2
  3817     07AF  2FB1               	goto	u2701
  3818     07B0  2FB2               	goto	u2700
  3819     07B1                     u2701:
  3820     07B1  2FE9               	goto	l2186
  3821     07B2                     u2700:
  3822     07B2                     l2168:
  3823     07B2  01A5               	clrf	___awdiv@counter^(0+128)
  3824     07B3  0AA5               	incf	___awdiv@counter^(0+128),f
  3825     07B4  2FC0               	goto	l2174
  3826     07B5                     l2170:
  3827     07B5  3001               	movlw	1
  3828     07B6                     u2715:
  3829     07B6  1003               	clrc
  3830     07B7  0DA0               	rlf	___awdiv@divisor^(0+128),f
  3831     07B8  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  3832     07B9  3EFF               	addlw	-1
  3833     07BA  1D03               	skipz
  3834     07BB  2FB6               	goto	u2715
  3835     07BC                     l2172:
  3836     07BC  3001               	movlw	1
  3837     07BD  00A4               	movwf	??___awdiv^(0+128)
  3838     07BE  0824               	movf	??___awdiv^(0+128),w
  3839     07BF  07A5               	addwf	___awdiv@counter^(0+128),f
  3840     07C0                     l2174:
  3841     07C0  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3842     07C1  2FC3               	goto	u2721
  3843     07C2  2FC4               	goto	u2720
  3844     07C3                     u2721:
  3845     07C3  2FB5               	goto	l2170
  3846     07C4                     u2720:
  3847     07C4                     l2176:
  3848     07C4  3001               	movlw	1
  3849     07C5                     u2735:
  3850     07C5  1003               	clrc
  3851     07C6  0DA7               	rlf	___awdiv@quotient^(0+128),f
  3852     07C7  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  3853     07C8  3EFF               	addlw	-1
  3854     07C9  1D03               	skipz
  3855     07CA  2FC5               	goto	u2735
  3856     07CB  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3857     07CC  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  3858     07CD  1D03               	skipz
  3859     07CE  2FD1               	goto	u2745
  3860     07CF  0820               	movf	___awdiv@divisor^(0+128),w
  3861     07D0  0222               	subwf	___awdiv@dividend^(0+128),w
  3862     07D1                     u2745:
  3863     07D1  1C03               	skipc
  3864     07D2  2FD4               	goto	u2741
  3865     07D3  2FD5               	goto	u2740
  3866     07D4                     u2741:
  3867     07D4  2FDC               	goto	l2182
  3868     07D5                     u2740:
  3869     07D5                     l2178:
  3870     07D5  0820               	movf	___awdiv@divisor^(0+128),w
  3871     07D6  02A2               	subwf	___awdiv@dividend^(0+128),f
  3872     07D7  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3873     07D8  1C03               	skipc
  3874     07D9  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  3875     07DA  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  3876     07DB                     l2180:
  3877     07DB  1427               	bsf	___awdiv@quotient^(0+128),0
  3878     07DC                     l2182:
  3879     07DC  3001               	movlw	1
  3880     07DD                     u2755:
  3881     07DD  1003               	clrc
  3882     07DE  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  3883     07DF  0CA0               	rrf	___awdiv@divisor^(0+128),f
  3884     07E0  3EFF               	addlw	-1
  3885     07E1  1D03               	skipz
  3886     07E2  2FDD               	goto	u2755
  3887     07E3                     l2184:
  3888     07E3  3001               	movlw	1
  3889     07E4  02A5               	subwf	___awdiv@counter^(0+128),f
  3890     07E5  1D03               	btfss	3,2
  3891     07E6  2FE8               	goto	u2761
  3892     07E7  2FE9               	goto	u2760
  3893     07E8                     u2761:
  3894     07E8  2FC4               	goto	l2176
  3895     07E9                     u2760:
  3896     07E9                     l2186:
  3897     07E9  0826               	movf	___awdiv@sign^(0+128),w
  3898     07EA  1903               	btfsc	3,2
  3899     07EB  2FED               	goto	u2771
  3900     07EC  2FEE               	goto	u2770
  3901     07ED                     u2771:
  3902     07ED  2FF3               	goto	l2190
  3903     07EE                     u2770:
  3904     07EE                     l2188:
  3905     07EE  09A7               	comf	___awdiv@quotient^(0+128),f
  3906     07EF  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  3907     07F0  0AA7               	incf	___awdiv@quotient^(0+128),f
  3908     07F1  1903               	skipnz
  3909     07F2  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  3910     07F3                     l2190:
  3911     07F3  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  3912     07F4  00A1               	movwf	(?___awdiv+1)^(0+128)
  3913     07F5  0827               	movf	___awdiv@quotient^(0+128),w
  3914     07F6  00A0               	movwf	?___awdiv^(0+128)
  3915     07F7                     l485:
  3916     07F7  0008               	return
  3917     07F8                     __end_of___awdiv:
  3918                           
  3919                           	psect	text17
  3920     06D5                     __ptext17:	
  3921 ;; *************** function ___xxtofl *****************
  3922 ;; Defined at:
  3923 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  sign            1    wreg     unsigned char 
  3926 ;;  val             4    0[BANK1 ] long 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  sign            1    8[BANK1 ] unsigned char 
  3929 ;;  arg             4   10[BANK1 ] unsigned long 
  3930 ;;  exp             1    9[BANK1 ] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  4    0[BANK1 ] unsigned char 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       4       0       0
  3941 ;;      Locals:         0       0       6       0       0
  3942 ;;      Temps:          0       0       4       0       0
  3943 ;;      Totals:         0       0      14       0       0
  3944 ;;Total ram usage:       14 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 3
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_floatToStr
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954     06D5                     ___xxtofl:	
  3955                           ;psect for function ___xxtofl
  3956                           
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3960                           ;___xxtofl@sign stored from wreg
  3961     06D5  1683               	bsf	3,5	;RP0=1, select bank1
  3962     06D6  1303               	bcf	3,6	;RP1=0, select bank1
  3963     06D7  00A8               	movwf	___xxtofl@sign^(0+128)
  3964     06D8                     l2750:
  3965     06D8  0828               	movf	___xxtofl@sign^(0+128),w
  3966     06D9  1903               	btfsc	3,2
  3967     06DA  2EDC               	goto	u4011
  3968     06DB  2EDD               	goto	u4010
  3969     06DC                     u4011:
  3970     06DC  2EF1               	goto	l2756
  3971     06DD                     u4010:
  3972     06DD                     l2752:
  3973     06DD  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  3974     06DE  2EE0               	goto	u4021
  3975     06DF  2EE1               	goto	u4020
  3976     06E0                     u4021:
  3977     06E0  2EF1               	goto	l2756
  3978     06E1                     u4020:
  3979     06E1                     l2754:
  3980     06E1  0920               	comf	___xxtofl@val^(0+128),w
  3981     06E2  00AA               	movwf	___xxtofl@arg^(0+128)
  3982     06E3  0921               	comf	(___xxtofl@val^(0+128)+1),w
  3983     06E4  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  3984     06E5  0922               	comf	(___xxtofl@val^(0+128)+2),w
  3985     06E6  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  3986     06E7  0923               	comf	(___xxtofl@val^(0+128)+3),w
  3987     06E8  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  3988     06E9  0AAA               	incf	___xxtofl@arg^(0+128),f
  3989     06EA  1903               	skipnz
  3990     06EB  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  3991     06EC  1903               	skipnz
  3992     06ED  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  3993     06EE  1903               	skipnz
  3994     06EF  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  3995     06F0  2EF9               	goto	l765
  3996     06F1                     l2756:
  3997     06F1  0823               	movf	(___xxtofl@val+3)^(0+128),w
  3998     06F2  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  3999     06F3  0822               	movf	(___xxtofl@val+2)^(0+128),w
  4000     06F4  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  4001     06F5  0821               	movf	(___xxtofl@val+1)^(0+128),w
  4002     06F6  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  4003     06F7  0820               	movf	___xxtofl@val^(0+128),w
  4004     06F8  00AA               	movwf	___xxtofl@arg^(0+128)
  4005     06F9                     l765:
  4006     06F9  0823               	movf	(___xxtofl@val+3)^(0+128),w
  4007     06FA  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  4008     06FB  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  4009     06FC  0420               	iorwf	___xxtofl@val^(0+128),w
  4010     06FD  1D03               	skipz
  4011     06FE  2F00               	goto	u4031
  4012     06FF  2F01               	goto	u4030
  4013     0700                     u4031:
  4014     0700  2F0A               	goto	l2762
  4015     0701                     u4030:
  4016     0701                     l2758:
  4017     0701  3000               	movlw	0
  4018     0702  00A3               	movwf	(?___xxtofl+3)^(0+128)
  4019     0703  3000               	movlw	0
  4020     0704  00A2               	movwf	(?___xxtofl+2)^(0+128)
  4021     0705  3000               	movlw	0
  4022     0706  00A1               	movwf	(?___xxtofl+1)^(0+128)
  4023     0707  3000               	movlw	0
  4024     0708  00A0               	movwf	?___xxtofl^(0+128)
  4025     0709  2F8E               	goto	l767
  4026     070A                     l2762:
  4027     070A  3096               	movlw	150
  4028     070B  00A9               	movwf	___xxtofl@exp^(0+128)
  4029     070C  2F1A               	goto	l2766
  4030     070D                     l2764:
  4031     070D  3001               	movlw	1
  4032     070E  00A4               	movwf	??___xxtofl^(0+128)
  4033     070F  0824               	movf	??___xxtofl^(0+128),w
  4034     0710  07A9               	addwf	___xxtofl@exp^(0+128),f
  4035     0711  3001               	movlw	1
  4036     0712                     u4045:
  4037     0712  1003               	clrc
  4038     0713  0CAD               	rrf	(___xxtofl@arg+3)^(0+128),f
  4039     0714  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  4040     0715  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  4041     0716  0CAA               	rrf	___xxtofl@arg^(0+128),f
  4042     0717  3EFF               	addlw	-1
  4043     0718  1D03               	skipz
  4044     0719  2F12               	goto	u4045
  4045     071A                     l2766:
  4046     071A  30FE               	movlw	254
  4047     071B  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  4048     071C  1D03               	btfss	3,2
  4049     071D  2F1F               	goto	u4051
  4050     071E  2F20               	goto	u4050
  4051     071F                     u4051:
  4052     071F  2F0D               	goto	l2764
  4053     0720                     u4050:
  4054     0720  2F3C               	goto	l771
  4055     0721                     l2768:
  4056     0721  3001               	movlw	1
  4057     0722  00A4               	movwf	??___xxtofl^(0+128)
  4058     0723  0824               	movf	??___xxtofl^(0+128),w
  4059     0724  07A9               	addwf	___xxtofl@exp^(0+128),f
  4060     0725                     l2770:
  4061     0725  3001               	movlw	1
  4062     0726  07AA               	addwf	___xxtofl@arg^(0+128),f
  4063     0727  3000               	movlw	0
  4064     0728  1803               	skipnc
  4065     0729  3001               	movlw	1
  4066     072A  07AB               	addwf	(___xxtofl@arg+1)^(0+128),f
  4067     072B  3000               	movlw	0
  4068     072C  1803               	skipnc
  4069     072D  3001               	movlw	1
  4070     072E  07AC               	addwf	(___xxtofl@arg+2)^(0+128),f
  4071     072F  3000               	movlw	0
  4072     0730  1803               	skipnc
  4073     0731  3001               	movlw	1
  4074     0732  07AD               	addwf	(___xxtofl@arg+3)^(0+128),f
  4075     0733                     l2772:
  4076     0733  3001               	movlw	1
  4077     0734                     u4065:
  4078     0734  1003               	clrc
  4079     0735  0CAD               	rrf	(___xxtofl@arg+3)^(0+128),f
  4080     0736  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  4081     0737  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  4082     0738  0CAA               	rrf	___xxtofl@arg^(0+128),f
  4083     0739  3EFF               	addlw	-1
  4084     073A  1D03               	skipz
  4085     073B  2F34               	goto	u4065
  4086     073C                     l771:
  4087     073C  30FF               	movlw	255
  4088     073D  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  4089     073E  1D03               	btfss	3,2
  4090     073F  2F41               	goto	u4071
  4091     0740  2F42               	goto	u4070
  4092     0741                     u4071:
  4093     0741  2F21               	goto	l2768
  4094     0742                     u4070:
  4095     0742  2F4E               	goto	l2776
  4096     0743                     l2774:
  4097     0743  3001               	movlw	1
  4098     0744  02A9               	subwf	___xxtofl@exp^(0+128),f
  4099     0745  3001               	movlw	1
  4100     0746  00A4               	movwf	??___xxtofl^(0+128)
  4101     0747                     u4085:
  4102     0747  1003               	clrc
  4103     0748  0DAA               	rlf	___xxtofl@arg^(0+128),f
  4104     0749  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  4105     074A  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  4106     074B  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  4107     074C  0BA4               	decfsz	??___xxtofl^(0+128),f
  4108     074D  2F47               	goto	u4085
  4109     074E                     l2776:
  4110     074E  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  4111     074F  2F51               	goto	u4091
  4112     0750  2F52               	goto	u4090
  4113     0751                     u4091:
  4114     0751  2F58               	goto	l778
  4115     0752                     u4090:
  4116     0752                     l2778:
  4117     0752  3002               	movlw	2
  4118     0753  0229               	subwf	___xxtofl@exp^(0+128),w
  4119     0754  1803               	skipnc
  4120     0755  2F57               	goto	u4101
  4121     0756  2F58               	goto	u4100
  4122     0757                     u4101:
  4123     0757  2F43               	goto	l2774
  4124     0758                     u4100:
  4125     0758                     l778:
  4126     0758  1829               	btfsc	___xxtofl@exp^(0+128),0
  4127     0759  2F5B               	goto	u4111
  4128     075A  2F5C               	goto	u4110
  4129     075B                     u4111:
  4130     075B  2F64               	goto	l779
  4131     075C                     u4110:
  4132     075C                     l2780:
  4133     075C  30FF               	movlw	255
  4134     075D  05AA               	andwf	___xxtofl@arg^(0+128),f
  4135     075E  30FF               	movlw	255
  4136     075F  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  4137     0760  307F               	movlw	127
  4138     0761  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  4139     0762  30FF               	movlw	255
  4140     0763  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  4141     0764                     l779:
  4142     0764  1003               	clrc
  4143     0765  0CA9               	rrf	___xxtofl@exp^(0+128),f
  4144     0766                     l2782:
  4145     0766  0829               	movf	___xxtofl@exp^(0+128),w
  4146     0767  00A4               	movwf	??___xxtofl^(0+128)
  4147     0768  01A5               	clrf	(??___xxtofl^(0+128)+1)
  4148     0769  01A6               	clrf	(??___xxtofl^(0+128)+2)
  4149     076A  01A7               	clrf	(??___xxtofl^(0+128)+3)
  4150     076B  3018               	movlw	24
  4151     076C                     u4125:
  4152     076C  1003               	clrc
  4153     076D  0DA4               	rlf	??___xxtofl^(0+128),f
  4154     076E  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  4155     076F  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  4156     0770  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  4157     0771                     u4120:
  4158     0771  3EFF               	addlw	-1
  4159     0772  1D03               	skipz
  4160     0773  2F6C               	goto	u4125
  4161     0774  0824               	movf	??___xxtofl^(0+128),w
  4162     0775  04AA               	iorwf	___xxtofl@arg^(0+128),f
  4163     0776  0825               	movf	(??___xxtofl+1)^(0+128),w
  4164     0777  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  4165     0778  0826               	movf	(??___xxtofl+2)^(0+128),w
  4166     0779  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  4167     077A  0827               	movf	(??___xxtofl+3)^(0+128),w
  4168     077B  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  4169     077C                     l2784:
  4170     077C  0828               	movf	___xxtofl@sign^(0+128),w
  4171     077D  1903               	btfsc	3,2
  4172     077E  2F80               	goto	u4131
  4173     077F  2F81               	goto	u4130
  4174     0780                     u4131:
  4175     0780  2F86               	goto	l2790
  4176     0781                     u4130:
  4177     0781                     l2786:
  4178     0781  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  4179     0782  2F84               	goto	u4141
  4180     0783  2F85               	goto	u4140
  4181     0784                     u4141:
  4182     0784  2F86               	goto	l2790
  4183     0785                     u4140:
  4184     0785                     l2788:
  4185     0785  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  4186     0786                     l2790:
  4187     0786  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  4188     0787  00A3               	movwf	(?___xxtofl+3)^(0+128)
  4189     0788  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  4190     0789  00A2               	movwf	(?___xxtofl+2)^(0+128)
  4191     078A  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  4192     078B  00A1               	movwf	(?___xxtofl+1)^(0+128)
  4193     078C  082A               	movf	___xxtofl@arg^(0+128),w
  4194     078D  00A0               	movwf	?___xxtofl^(0+128)
  4195     078E                     l767:
  4196     078E  0008               	return
  4197     078F                     __end_of___xxtofl:
  4198                           
  4199                           	psect	text18
  4200     1692                     __ptext18:	
  4201 ;; *************** function ___fltol *****************
  4202 ;; Defined at:
  4203 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  f1              4   20[BANK1 ] unsigned char 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  exp1            1   29[BANK1 ] unsigned char 
  4208 ;;  sign1           1   28[BANK1 ] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  4   20[BANK1 ] long 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4218 ;;      Params:         0       0       4       0       0
  4219 ;;      Locals:         0       0       2       0       0
  4220 ;;      Temps:          0       0       4       0       0
  4221 ;;      Totals:         0       0      10       0       0
  4222 ;;Total ram usage:       10 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 3
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_floatToStr
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232     1692                     ___fltol:	
  4233                           ;psect for function ___fltol
  4234                           
  4235     1692                     l2568:	
  4236                           ;incstack = 0
  4237                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4238                           
  4239     1692  1003               	clrc
  4240     1693  1683               	bsf	3,5	;RP0=1, select bank1
  4241     1694  1303               	bcf	3,6	;RP1=0, select bank1
  4242     1695  0D36               	rlf	(___fltol@f1+2)^(0+128),w
  4243     1696  0D37               	rlf	(___fltol@f1+3)^(0+128),w
  4244     1697  00BD               	movwf	___fltol@exp1^(0+128)
  4245     1698  083D               	movf	___fltol@exp1^(0+128),w
  4246     1699  1D03               	btfss	3,2
  4247     169A  2E9C               	goto	u3541
  4248     169B  2E9D               	goto	u3540
  4249     169C                     u3541:
  4250     169C  2EA6               	goto	l2574
  4251     169D                     u3540:
  4252     169D                     l2570:
  4253     169D  3000               	movlw	0
  4254     169E  00B7               	movwf	(?___fltol+3)^(0+128)
  4255     169F  3000               	movlw	0
  4256     16A0  00B6               	movwf	(?___fltol+2)^(0+128)
  4257     16A1  3000               	movlw	0
  4258     16A2  00B5               	movwf	(?___fltol+1)^(0+128)
  4259     16A3  3000               	movlw	0
  4260     16A4  00B4               	movwf	?___fltol^(0+128)
  4261     16A5  2F09               	goto	l518
  4262     16A6                     l2574:
  4263     16A6  0834               	movf	___fltol@f1^(0+128),w
  4264     16A7  00B8               	movwf	??___fltol^(0+128)
  4265     16A8  0835               	movf	(___fltol@f1+1)^(0+128),w
  4266     16A9  00B9               	movwf	(??___fltol^(0+128)+1)
  4267     16AA  0836               	movf	(___fltol@f1+2)^(0+128),w
  4268     16AB  00BA               	movwf	(??___fltol^(0+128)+2)
  4269     16AC  0837               	movf	(___fltol@f1+3)^(0+128),w
  4270     16AD  00BB               	movwf	(??___fltol^(0+128)+3)
  4271     16AE  301F               	movlw	31
  4272     16AF                     u3555:
  4273     16AF  1003               	clrc
  4274     16B0  0CBB               	rrf	(??___fltol^(0+128)+3),f
  4275     16B1  0CBA               	rrf	(??___fltol^(0+128)+2),f
  4276     16B2  0CB9               	rrf	(??___fltol^(0+128)+1),f
  4277     16B3  0CB8               	rrf	??___fltol^(0+128),f
  4278     16B4                     u3550:
  4279     16B4  3EFF               	addlw	-1
  4280     16B5  1D03               	skipz
  4281     16B6  2EAF               	goto	u3555
  4282     16B7  0838               	movf	??___fltol^(0+128),w
  4283     16B8  00BC               	movwf	___fltol@sign1^(0+128)
  4284     16B9                     l2576:
  4285     16B9  17B6               	bsf	(___fltol@f1^(0+128)+2),7
  4286     16BA                     l2578:
  4287     16BA  30FF               	movlw	255
  4288     16BB  05B4               	andwf	___fltol@f1^(0+128),f
  4289     16BC  30FF               	movlw	255
  4290     16BD  05B5               	andwf	(___fltol@f1+1)^(0+128),f
  4291     16BE  30FF               	movlw	255
  4292     16BF  05B6               	andwf	(___fltol@f1+2)^(0+128),f
  4293     16C0  3000               	movlw	0
  4294     16C1  05B7               	andwf	(___fltol@f1+3)^(0+128),f
  4295     16C2                     l2580:
  4296     16C2  3096               	movlw	150
  4297     16C3  02BD               	subwf	___fltol@exp1^(0+128),f
  4298     16C4                     l2582:
  4299     16C4  1FBD               	btfss	___fltol@exp1^(0+128),7
  4300     16C5  2EC7               	goto	u3561
  4301     16C6  2EC8               	goto	u3560
  4302     16C7                     u3561:
  4303     16C7  2EE2               	goto	l2592
  4304     16C8                     u3560:
  4305     16C8                     l2584:
  4306     16C8  083D               	movf	___fltol@exp1^(0+128),w
  4307     16C9  3A80               	xorlw	128
  4308     16CA  3E97               	addlw	151
  4309     16CB  1803               	skipnc
  4310     16CC  2ECE               	goto	u3571
  4311     16CD  2ECF               	goto	u3570
  4312     16CE                     u3571:
  4313     16CE  2ED0               	goto	l2590
  4314     16CF                     u3570:
  4315     16CF  2E9D               	goto	l2570
  4316     16D0                     l2590:
  4317     16D0  3001               	movlw	1
  4318     16D1                     u3585:
  4319     16D1  1003               	clrc
  4320     16D2  0CB7               	rrf	(___fltol@f1+3)^(0+128),f
  4321     16D3  0CB6               	rrf	(___fltol@f1+2)^(0+128),f
  4322     16D4  0CB5               	rrf	(___fltol@f1+1)^(0+128),f
  4323     16D5  0CB4               	rrf	___fltol@f1^(0+128),f
  4324     16D6  3EFF               	addlw	-1
  4325     16D7  1D03               	skipz
  4326     16D8  2ED1               	goto	u3585
  4327     16D9  3001               	movlw	1
  4328     16DA  00B8               	movwf	??___fltol^(0+128)
  4329     16DB  0838               	movf	??___fltol^(0+128),w
  4330     16DC  07BD               	addwf	___fltol@exp1^(0+128),f
  4331     16DD  1D03               	btfss	3,2
  4332     16DE  2EE0               	goto	u3591
  4333     16DF  2EE1               	goto	u3590
  4334     16E0                     u3591:
  4335     16E0  2ED0               	goto	l2590
  4336     16E1                     u3590:
  4337     16E1  2EF9               	goto	l2600
  4338     16E2                     l2592:
  4339     16E2  3020               	movlw	32
  4340     16E3  023D               	subwf	___fltol@exp1^(0+128),w
  4341     16E4  1C03               	skipc
  4342     16E5  2EE7               	goto	u3601
  4343     16E6  2EE8               	goto	u3600
  4344     16E7                     u3601:
  4345     16E7  2EF4               	goto	l525
  4346     16E8                     u3600:
  4347     16E8  2E9D               	goto	l2570
  4348     16E9                     l2598:
  4349     16E9  3001               	movlw	1
  4350     16EA  00B8               	movwf	??___fltol^(0+128)
  4351     16EB                     u3615:
  4352     16EB  1003               	clrc
  4353     16EC  0DB4               	rlf	___fltol@f1^(0+128),f
  4354     16ED  0DB5               	rlf	(___fltol@f1+1)^(0+128),f
  4355     16EE  0DB6               	rlf	(___fltol@f1+2)^(0+128),f
  4356     16EF  0DB7               	rlf	(___fltol@f1+3)^(0+128),f
  4357     16F0  0BB8               	decfsz	??___fltol^(0+128),f
  4358     16F1  2EEB               	goto	u3615
  4359     16F2  3001               	movlw	1
  4360     16F3  02BD               	subwf	___fltol@exp1^(0+128),f
  4361     16F4                     l525:
  4362     16F4  083D               	movf	___fltol@exp1^(0+128),w
  4363     16F5  1D03               	btfss	3,2
  4364     16F6  2EF8               	goto	u3621
  4365     16F7  2EF9               	goto	u3620
  4366     16F8                     u3621:
  4367     16F8  2EE9               	goto	l2598
  4368     16F9                     u3620:
  4369     16F9                     l2600:
  4370     16F9  083C               	movf	___fltol@sign1^(0+128),w
  4371     16FA  1903               	btfsc	3,2
  4372     16FB  2EFD               	goto	u3631
  4373     16FC  2EFE               	goto	u3630
  4374     16FD                     u3631:
  4375     16FD  2F09               	goto	l528
  4376     16FE                     u3630:
  4377     16FE                     l2602:
  4378     16FE  09B4               	comf	___fltol@f1^(0+128),f
  4379     16FF  09B5               	comf	(___fltol@f1+1)^(0+128),f
  4380     1700  09B6               	comf	(___fltol@f1+2)^(0+128),f
  4381     1701  09B7               	comf	(___fltol@f1+3)^(0+128),f
  4382     1702  0AB4               	incf	___fltol@f1^(0+128),f
  4383     1703  1903               	skipnz
  4384     1704  0AB5               	incf	(___fltol@f1+1)^(0+128),f
  4385     1705  1903               	skipnz
  4386     1706  0AB6               	incf	(___fltol@f1+2)^(0+128),f
  4387     1707  1903               	skipnz
  4388     1708  0AB7               	incf	(___fltol@f1+3)^(0+128),f
  4389     1709                     l528:
  4390     1709                     l518:
  4391     1709  0008               	return
  4392     170A                     __end_of___fltol:
  4393                           
  4394                           	psect	text19
  4395     12D7                     __ptext19:	
  4396 ;; *************** function ___flsub *****************
  4397 ;; Defined at:
  4398 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  a               4   20[BANK1 ] long 
  4401 ;;  b               4   24[BANK1 ] long 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  4   20[BANK1 ] long 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       8       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       0       8       0       0
  4417 ;;Total ram usage:        8 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 4
  4420 ;; This function calls:
  4421 ;;		___fladd
  4422 ;; This function is called by:
  4423 ;;		_floatToStr
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427     12D7                     ___flsub:	
  4428                           ;psect for function ___flsub
  4429                           
  4430     12D7                     l2604:	
  4431                           ;incstack = 0
  4432                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4433                           
  4434     12D7  3080               	movlw	128
  4435     12D8  1683               	bsf	3,5	;RP0=1, select bank1
  4436     12D9  1303               	bcf	3,6	;RP1=0, select bank1
  4437     12DA  06B7               	xorwf	(___flsub@a+3)^(0+128),f
  4438     12DB                     l2606:
  4439     12DB  083B               	movf	(___flsub@b+3)^(0+128),w
  4440     12DC  00A3               	movwf	(___fladd@b+3)^(0+128)
  4441     12DD  083A               	movf	(___flsub@b+2)^(0+128),w
  4442     12DE  00A2               	movwf	(___fladd@b+2)^(0+128)
  4443     12DF  0839               	movf	(___flsub@b+1)^(0+128),w
  4444     12E0  00A1               	movwf	(___fladd@b+1)^(0+128)
  4445     12E1  0838               	movf	___flsub@b^(0+128),w
  4446     12E2  00A0               	movwf	___fladd@b^(0+128)
  4447     12E3  0837               	movf	(___flsub@a+3)^(0+128),w
  4448     12E4  00A7               	movwf	(___fladd@a+3)^(0+128)
  4449     12E5  0836               	movf	(___flsub@a+2)^(0+128),w
  4450     12E6  00A6               	movwf	(___fladd@a+2)^(0+128)
  4451     12E7  0835               	movf	(___flsub@a+1)^(0+128),w
  4452     12E8  00A5               	movwf	(___fladd@a+1)^(0+128)
  4453     12E9  0834               	movf	___flsub@a^(0+128),w
  4454     12EA  00A4               	movwf	___fladd@a^(0+128)
  4455     12EB  120A  158A  25A8  160A  118A  	fcall	___fladd
  4456     12F0  1683               	bsf	3,5	;RP0=1, select bank1
  4457     12F1  1303               	bcf	3,6	;RP1=0, select bank1
  4458     12F2  0823               	movf	(?___fladd+3)^(0+128),w
  4459     12F3  00B7               	movwf	(?___flsub+3)^(0+128)
  4460     12F4  0822               	movf	(?___fladd+2)^(0+128),w
  4461     12F5  00B6               	movwf	(?___flsub+2)^(0+128)
  4462     12F6  0821               	movf	(?___fladd+1)^(0+128),w
  4463     12F7  00B5               	movwf	(?___flsub+1)^(0+128)
  4464     12F8  0820               	movf	?___fladd^(0+128),w
  4465     12F9  00B4               	movwf	?___flsub^(0+128)
  4466     12FA                     l671:
  4467     12FA  0008               	return
  4468     12FB                     __end_of___flsub:
  4469                           
  4470                           	psect	text20
  4471     0DA8                     __ptext20:	
  4472 ;; *************** function ___fladd *****************
  4473 ;; Defined at:
  4474 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  b               4    0[BANK1 ] long 
  4477 ;;  a               4    4[BANK1 ] long 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  grs             1   19[BANK1 ] unsigned char 
  4480 ;;  bexp            1   18[BANK1 ] unsigned char 
  4481 ;;  aexp            1   17[BANK1 ] unsigned char 
  4482 ;;  signs           1   16[BANK1 ] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  4    0[BANK1 ] unsigned char 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, btemp+1
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4492 ;;      Params:         0       0       8       0       0
  4493 ;;      Locals:         0       0       4       0       0
  4494 ;;      Temps:          0       0       8       0       0
  4495 ;;      Totals:         0       0      20       0       0
  4496 ;;Total ram usage:       20 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 3
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_floatToStr
  4503 ;;		___flsub
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507     0DA8                     ___fladd:	
  4508                           ;psect for function ___fladd
  4509                           
  4510     0DA8                     l2232:	
  4511                           ;incstack = 0
  4512                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4513                           
  4514     0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  4515     0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  4516     0DAA  0823               	movf	(___fladd@b^(0+128)+3),w
  4517     0DAB  3980               	andlw	128
  4518     0DAC  00B0               	movwf	___fladd@signs^(0+128)
  4519     0DAD                     l2234:
  4520     0DAD  0823               	movf	(___fladd@b^(0+128)+3),w
  4521     0DAE  00A8               	movwf	??___fladd^(0+128)
  4522     0DAF  0728               	addwf	??___fladd^(0+128),w
  4523     0DB0  00B2               	movwf	___fladd@bexp^(0+128)
  4524     0DB1                     l2236:
  4525     0DB1  1FA2               	btfss	(___fladd@b^(0+128)+2),7
  4526     0DB2  2DB4               	goto	u2871
  4527     0DB3  2DB5               	goto	u2870
  4528     0DB4                     u2871:
  4529     0DB4  2DB6               	goto	l2240
  4530     0DB5                     u2870:
  4531     0DB5                     l2238:
  4532     0DB5  1432               	bsf	___fladd@bexp^(0+128),0
  4533     0DB6                     l2240:
  4534     0DB6  0832               	movf	___fladd@bexp^(0+128),w
  4535     0DB7  1903               	btfsc	3,2
  4536     0DB8  2DBA               	goto	u2881
  4537     0DB9  2DBB               	goto	u2880
  4538     0DBA                     u2881:
  4539     0DBA  2DCB               	goto	l2250
  4540     0DBB                     u2880:
  4541     0DBB                     l2242:
  4542     0DBB  0A32               	incf	___fladd@bexp^(0+128),w
  4543     0DBC  1D03               	btfss	3,2
  4544     0DBD  2DBF               	goto	u2891
  4545     0DBE  2DC0               	goto	u2890
  4546     0DBF                     u2891:
  4547     0DBF  2DC8               	goto	l2246
  4548     0DC0                     u2890:
  4549     0DC0                     l2244:
  4550     0DC0  3000               	movlw	0
  4551     0DC1  00A3               	movwf	(___fladd@b+3)^(0+128)
  4552     0DC2  3000               	movlw	0
  4553     0DC3  00A2               	movwf	(___fladd@b+2)^(0+128)
  4554     0DC4  3000               	movlw	0
  4555     0DC5  00A1               	movwf	(___fladd@b+1)^(0+128)
  4556     0DC6  3000               	movlw	0
  4557     0DC7  00A0               	movwf	___fladd@b^(0+128)
  4558     0DC8                     l2246:
  4559     0DC8  17A2               	bsf	(___fladd@b^(0+128)+2),7
  4560     0DC9                     l2248:
  4561     0DC9  01A3               	clrf	(___fladd@b^(0+128)+3)
  4562     0DCA  2DD3               	goto	l2252
  4563     0DCB                     l2250:
  4564     0DCB  3000               	movlw	0
  4565     0DCC  00A3               	movwf	(___fladd@b+3)^(0+128)
  4566     0DCD  3000               	movlw	0
  4567     0DCE  00A2               	movwf	(___fladd@b+2)^(0+128)
  4568     0DCF  3000               	movlw	0
  4569     0DD0  00A1               	movwf	(___fladd@b+1)^(0+128)
  4570     0DD1  3000               	movlw	0
  4571     0DD2  00A0               	movwf	___fladd@b^(0+128)
  4572     0DD3                     l2252:
  4573     0DD3  0827               	movf	(___fladd@a^(0+128)+3),w
  4574     0DD4  3980               	andlw	128
  4575     0DD5  00B1               	movwf	___fladd@aexp^(0+128)
  4576     0DD6                     l2254:
  4577     0DD6  0831               	movf	___fladd@aexp^(0+128),w
  4578     0DD7  0630               	xorwf	___fladd@signs^(0+128),w
  4579     0DD8  1903               	skipnz
  4580     0DD9  2DDB               	goto	u2901
  4581     0DDA  2DDC               	goto	u2900
  4582     0DDB                     u2901:
  4583     0DDB  2DDD               	goto	l2258
  4584     0DDC                     u2900:
  4585     0DDC                     l2256:
  4586     0DDC  1730               	bsf	___fladd@signs^(0+128),6
  4587     0DDD                     l2258:
  4588     0DDD  0827               	movf	(___fladd@a^(0+128)+3),w
  4589     0DDE  00A8               	movwf	??___fladd^(0+128)
  4590     0DDF  0728               	addwf	??___fladd^(0+128),w
  4591     0DE0  00B1               	movwf	___fladd@aexp^(0+128)
  4592     0DE1                     l2260:
  4593     0DE1  1FA6               	btfss	(___fladd@a^(0+128)+2),7
  4594     0DE2  2DE4               	goto	u2911
  4595     0DE3  2DE5               	goto	u2910
  4596     0DE4                     u2911:
  4597     0DE4  2DE6               	goto	l2264
  4598     0DE5                     u2910:
  4599     0DE5                     l2262:
  4600     0DE5  1431               	bsf	___fladd@aexp^(0+128),0
  4601     0DE6                     l2264:
  4602     0DE6  0831               	movf	___fladd@aexp^(0+128),w
  4603     0DE7  1903               	btfsc	3,2
  4604     0DE8  2DEA               	goto	u2921
  4605     0DE9  2DEB               	goto	u2920
  4606     0DEA                     u2921:
  4607     0DEA  2DFB               	goto	l2274
  4608     0DEB                     u2920:
  4609     0DEB                     l2266:
  4610     0DEB  0A31               	incf	___fladd@aexp^(0+128),w
  4611     0DEC  1D03               	btfss	3,2
  4612     0DED  2DEF               	goto	u2931
  4613     0DEE  2DF0               	goto	u2930
  4614     0DEF                     u2931:
  4615     0DEF  2DF8               	goto	l2270
  4616     0DF0                     u2930:
  4617     0DF0                     l2268:
  4618     0DF0  3000               	movlw	0
  4619     0DF1  00A7               	movwf	(___fladd@a+3)^(0+128)
  4620     0DF2  3000               	movlw	0
  4621     0DF3  00A6               	movwf	(___fladd@a+2)^(0+128)
  4622     0DF4  3000               	movlw	0
  4623     0DF5  00A5               	movwf	(___fladd@a+1)^(0+128)
  4624     0DF6  3000               	movlw	0
  4625     0DF7  00A4               	movwf	___fladd@a^(0+128)
  4626     0DF8                     l2270:
  4627     0DF8  17A6               	bsf	(___fladd@a^(0+128)+2),7
  4628     0DF9                     l2272:
  4629     0DF9  01A7               	clrf	(___fladd@a^(0+128)+3)
  4630     0DFA  2E03               	goto	l625
  4631     0DFB                     l2274:
  4632     0DFB  3000               	movlw	0
  4633     0DFC  00A7               	movwf	(___fladd@a+3)^(0+128)
  4634     0DFD  3000               	movlw	0
  4635     0DFE  00A6               	movwf	(___fladd@a+2)^(0+128)
  4636     0DFF  3000               	movlw	0
  4637     0E00  00A5               	movwf	(___fladd@a+1)^(0+128)
  4638     0E01  3000               	movlw	0
  4639     0E02  00A4               	movwf	___fladd@a^(0+128)
  4640     0E03                     l625:
  4641     0E03  0832               	movf	___fladd@bexp^(0+128),w
  4642     0E04  0231               	subwf	___fladd@aexp^(0+128),w
  4643     0E05  1803               	skipnc
  4644     0E06  2E08               	goto	u2941
  4645     0E07  2E09               	goto	u2940
  4646     0E08                     u2941:
  4647     0E08  2E2F               	goto	l2310
  4648     0E09                     u2940:
  4649     0E09                     l2276:
  4650     0E09  1F30               	btfss	___fladd@signs^(0+128),6
  4651     0E0A  2E0C               	goto	u2951
  4652     0E0B  2E0D               	goto	u2950
  4653     0E0C                     u2951:
  4654     0E0C  2E11               	goto	l2280
  4655     0E0D                     u2950:
  4656     0E0D                     l2278:
  4657     0E0D  3080               	movlw	128
  4658     0E0E  00A8               	movwf	??___fladd^(0+128)
  4659     0E0F  0828               	movf	??___fladd^(0+128),w
  4660     0E10  06B0               	xorwf	___fladd@signs^(0+128),f
  4661     0E11                     l2280:
  4662     0E11  0832               	movf	___fladd@bexp^(0+128),w
  4663     0E12  00B3               	movwf	___fladd@grs^(0+128)
  4664     0E13                     l2282:
  4665     0E13  0831               	movf	___fladd@aexp^(0+128),w
  4666     0E14  00B2               	movwf	___fladd@bexp^(0+128)
  4667     0E15                     l2284:
  4668     0E15  0833               	movf	___fladd@grs^(0+128),w
  4669     0E16  00B1               	movwf	___fladd@aexp^(0+128)
  4670     0E17                     l2286:
  4671     0E17  0820               	movf	___fladd@b^(0+128),w
  4672     0E18  00B3               	movwf	___fladd@grs^(0+128)
  4673     0E19                     l2288:
  4674     0E19  0824               	movf	___fladd@a^(0+128),w
  4675     0E1A  00A0               	movwf	___fladd@b^(0+128)
  4676     0E1B                     l2290:
  4677     0E1B  0833               	movf	___fladd@grs^(0+128),w
  4678     0E1C  00A4               	movwf	___fladd@a^(0+128)
  4679     0E1D                     l2292:
  4680     0E1D  0821               	movf	(___fladd@b^(0+128)+1),w
  4681     0E1E  00B3               	movwf	___fladd@grs^(0+128)
  4682     0E1F                     l2294:
  4683     0E1F  0825               	movf	(___fladd@a^(0+128)+1),w
  4684     0E20  00A1               	movwf	(___fladd@b^(0+128)+1)
  4685     0E21                     l2296:
  4686     0E21  0833               	movf	___fladd@grs^(0+128),w
  4687     0E22  00A5               	movwf	(___fladd@a^(0+128)+1)
  4688     0E23                     l2298:
  4689     0E23  0822               	movf	(___fladd@b^(0+128)+2),w
  4690     0E24  00B3               	movwf	___fladd@grs^(0+128)
  4691     0E25                     l2300:
  4692     0E25  0826               	movf	(___fladd@a^(0+128)+2),w
  4693     0E26  00A2               	movwf	(___fladd@b^(0+128)+2)
  4694     0E27                     l2302:
  4695     0E27  0833               	movf	___fladd@grs^(0+128),w
  4696     0E28  00A6               	movwf	(___fladd@a^(0+128)+2)
  4697     0E29                     l2304:
  4698     0E29  0823               	movf	(___fladd@b^(0+128)+3),w
  4699     0E2A  00B3               	movwf	___fladd@grs^(0+128)
  4700     0E2B                     l2306:
  4701     0E2B  0827               	movf	(___fladd@a^(0+128)+3),w
  4702     0E2C  00A3               	movwf	(___fladd@b^(0+128)+3)
  4703     0E2D                     l2308:
  4704     0E2D  0833               	movf	___fladd@grs^(0+128),w
  4705     0E2E  00A7               	movwf	(___fladd@a^(0+128)+3)
  4706     0E2F                     l2310:
  4707     0E2F  01B3               	clrf	___fladd@grs^(0+128)
  4708     0E30                     l2312:
  4709     0E30  0831               	movf	___fladd@aexp^(0+128),w
  4710     0E31  00A8               	movwf	??___fladd^(0+128)
  4711     0E32  01A9               	clrf	(??___fladd^(0+128)+1)
  4712     0E33  0829               	movf	(??___fladd+1)^(0+128),w
  4713     0E34  00AB               	movwf	((??___fladd+2)^(0+128)+1)
  4714     0E35  0832               	movf	___fladd@bexp^(0+128),w
  4715     0E36  0228               	subwf	??___fladd^(0+128),w
  4716     0E37  00AA               	movwf	(??___fladd+2)^(0+128)
  4717     0E38  1C03               	skipc
  4718     0E39  03AB               	decf	((??___fladd+2)^(0+128)+1),f
  4719     0E3A  082B               	movf	(??___fladd+3)^(0+128),w
  4720     0E3B  3A80               	xorlw	128
  4721     0E3C  00FF               	movwf	btemp+1
  4722     0E3D  3080               	movlw	128
  4723     0E3E  027F               	subwf	btemp+1,w
  4724     0E3F  1D03               	skipz
  4725     0E40  2E43               	goto	u2965
  4726     0E41  301A               	movlw	26
  4727     0E42  022A               	subwf	(??___fladd+2)^(0+128),w
  4728     0E43                     u2965:
  4729     0E43  1C03               	skipc
  4730     0E44  2E46               	goto	u2961
  4731     0E45  2E47               	goto	u2960
  4732     0E46                     u2961:
  4733     0E46  2E7E               	goto	l2328
  4734     0E47                     u2960:
  4735     0E47                     l2314:
  4736     0E47  1683               	bsf	3,5	;RP0=1, select bank1
  4737     0E48  1303               	bcf	3,6	;RP1=0, select bank1
  4738     0E49  0823               	movf	(___fladd@b+3)^(0+128),w
  4739     0E4A  0422               	iorwf	(___fladd@b+2)^(0+128),w
  4740     0E4B  0421               	iorwf	(___fladd@b+1)^(0+128),w
  4741     0E4C  0420               	iorwf	___fladd@b^(0+128),w
  4742     0E4D  1D03               	skipz
  4743     0E4E  2E50               	goto	u2971
  4744     0E4F  2E52               	goto	u2970
  4745     0E50                     u2971:
  4746     0E50  3001               	movlw	1
  4747     0E51  2E53               	goto	u2980
  4748     0E52                     u2970:
  4749     0E52  3000               	movlw	0
  4750     0E53                     u2980:
  4751     0E53  00B3               	movwf	___fladd@grs^(0+128)
  4752     0E54  3000               	movlw	0
  4753     0E55  00A3               	movwf	(___fladd@b+3)^(0+128)
  4754     0E56  3000               	movlw	0
  4755     0E57  00A2               	movwf	(___fladd@b+2)^(0+128)
  4756     0E58  3000               	movlw	0
  4757     0E59  00A1               	movwf	(___fladd@b+1)^(0+128)
  4758     0E5A  3000               	movlw	0
  4759     0E5B  00A0               	movwf	___fladd@b^(0+128)
  4760     0E5C  0831               	movf	___fladd@aexp^(0+128),w
  4761     0E5D  00B2               	movwf	___fladd@bexp^(0+128)
  4762     0E5E  2E86               	goto	l629
  4763     0E5F                     l631:
  4764     0E5F  1C33               	btfss	___fladd@grs^(0+128),0
  4765     0E60  2E62               	goto	u2991
  4766     0E61  2E63               	goto	u2990
  4767     0E62                     u2991:
  4768     0E62  2E6A               	goto	l2318
  4769     0E63                     u2990:
  4770     0E63                     l2316:
  4771     0E63  0833               	movf	___fladd@grs^(0+128),w
  4772     0E64  00A8               	movwf	??___fladd^(0+128)
  4773     0E65  1003               	clrc
  4774     0E66  0C28               	rrf	??___fladd^(0+128),w
  4775     0E67  3801               	iorlw	1
  4776     0E68  00B3               	movwf	___fladd@grs^(0+128)
  4777     0E69  2E6C               	goto	l2320
  4778     0E6A                     l2318:
  4779     0E6A  1003               	clrc
  4780     0E6B  0CB3               	rrf	___fladd@grs^(0+128),f
  4781     0E6C                     l2320:
  4782     0E6C  1C20               	btfss	___fladd@b^(0+128),0
  4783     0E6D  2E6F               	goto	u3001
  4784     0E6E  2E70               	goto	u3000
  4785     0E6F                     u3001:
  4786     0E6F  2E71               	goto	l2324
  4787     0E70                     u3000:
  4788     0E70                     l2322:
  4789     0E70  17B3               	bsf	___fladd@grs^(0+128),7
  4790     0E71                     l2324:
  4791     0E71  3001               	movlw	1
  4792     0E72  00A8               	movwf	??___fladd^(0+128)
  4793     0E73                     u3015:
  4794     0E73  0D23               	rlf	(___fladd@b+3)^(0+128),w
  4795     0E74  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  4796     0E75  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  4797     0E76  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  4798     0E77  0CA0               	rrf	___fladd@b^(0+128),f
  4799     0E78  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  4800     0E79  2E73               	goto	u3015
  4801     0E7A                     l2326:
  4802     0E7A  3001               	movlw	1
  4803     0E7B  00A8               	movwf	??___fladd^(0+128)
  4804     0E7C  0828               	movf	??___fladd^(0+128),w
  4805     0E7D  07B2               	addwf	___fladd@bexp^(0+128),f
  4806     0E7E                     l2328:
  4807     0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  4808     0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  4809     0E80  0831               	movf	___fladd@aexp^(0+128),w
  4810     0E81  0232               	subwf	___fladd@bexp^(0+128),w
  4811     0E82  1C03               	skipc
  4812     0E83  2E85               	goto	u3021
  4813     0E84  2E86               	goto	u3020
  4814     0E85                     u3021:
  4815     0E85  2E5F               	goto	l631
  4816     0E86                     u3020:
  4817     0E86                     l629:
  4818     0E86  1B30               	btfsc	___fladd@signs^(0+128),6
  4819     0E87  2E89               	goto	u3031
  4820     0E88  2E8A               	goto	u3030
  4821     0E89                     u3031:
  4822     0E89  2ED3               	goto	l2354
  4823     0E8A                     u3030:
  4824     0E8A                     l2330:
  4825     0E8A  0832               	movf	___fladd@bexp^(0+128),w
  4826     0E8B  1D03               	btfss	3,2
  4827     0E8C  2E8E               	goto	u3041
  4828     0E8D  2E8F               	goto	u3040
  4829     0E8E                     u3041:
  4830     0E8E  2E98               	goto	l2336
  4831     0E8F                     u3040:
  4832     0E8F                     l2332:
  4833     0E8F  3000               	movlw	0
  4834     0E90  00A3               	movwf	(?___fladd+3)^(0+128)
  4835     0E91  3000               	movlw	0
  4836     0E92  00A2               	movwf	(?___fladd+2)^(0+128)
  4837     0E93  3000               	movlw	0
  4838     0E94  00A1               	movwf	(?___fladd+1)^(0+128)
  4839     0E95  3000               	movlw	0
  4840     0E96  00A0               	movwf	?___fladd^(0+128)
  4841     0E97  2FFF               	goto	l638
  4842     0E98                     l2336:
  4843     0E98  0824               	movf	___fladd@a^(0+128),w
  4844     0E99  07A0               	addwf	___fladd@b^(0+128),f
  4845     0E9A  0825               	movf	(___fladd@a+1)^(0+128),w
  4846     0E9B  1103               	clrz
  4847     0E9C  1803               	skipnc
  4848     0E9D  3E01               	addlw	1
  4849     0E9E  1903               	skipnz
  4850     0E9F  2EA1               	goto	u3051
  4851     0EA0  07A1               	addwf	(___fladd@b+1)^(0+128),f
  4852     0EA1                     u3051:
  4853     0EA1  0826               	movf	(___fladd@a+2)^(0+128),w
  4854     0EA2  1103               	clrz
  4855     0EA3  1803               	skipnc
  4856     0EA4  3E01               	addlw	1
  4857     0EA5  1903               	skipnz
  4858     0EA6  2EA8               	goto	u3052
  4859     0EA7  07A2               	addwf	(___fladd@b+2)^(0+128),f
  4860     0EA8                     u3052:
  4861     0EA8  0827               	movf	(___fladd@a+3)^(0+128),w
  4862     0EA9  1103               	clrz
  4863     0EAA  1803               	skipnc
  4864     0EAB  3E01               	addlw	1
  4865     0EAC  1903               	skipnz
  4866     0EAD  2EAF               	goto	u3053
  4867     0EAE  07A3               	addwf	(___fladd@b+3)^(0+128),f
  4868     0EAF                     u3053:
  4869     0EAF                     l2338:
  4870     0EAF  1C23               	btfss	(___fladd@b+3)^(0+128),0
  4871     0EB0  2EB2               	goto	u3061
  4872     0EB1  2EB3               	goto	u3060
  4873     0EB2                     u3061:
  4874     0EB2  2F87               	goto	l2388
  4875     0EB3                     u3060:
  4876     0EB3                     l2340:
  4877     0EB3  1C33               	btfss	___fladd@grs^(0+128),0
  4878     0EB4  2EB6               	goto	u3071
  4879     0EB5  2EB7               	goto	u3070
  4880     0EB6                     u3071:
  4881     0EB6  2EBE               	goto	l2344
  4882     0EB7                     u3070:
  4883     0EB7                     l2342:
  4884     0EB7  0833               	movf	___fladd@grs^(0+128),w
  4885     0EB8  00A8               	movwf	??___fladd^(0+128)
  4886     0EB9  1003               	clrc
  4887     0EBA  0C28               	rrf	??___fladd^(0+128),w
  4888     0EBB  3801               	iorlw	1
  4889     0EBC  00B3               	movwf	___fladd@grs^(0+128)
  4890     0EBD  2EC0               	goto	l2346
  4891     0EBE                     l2344:
  4892     0EBE  1003               	clrc
  4893     0EBF  0CB3               	rrf	___fladd@grs^(0+128),f
  4894     0EC0                     l2346:
  4895     0EC0  1C20               	btfss	___fladd@b^(0+128),0
  4896     0EC1  2EC3               	goto	u3081
  4897     0EC2  2EC4               	goto	u3080
  4898     0EC3                     u3081:
  4899     0EC3  2EC5               	goto	l2350
  4900     0EC4                     u3080:
  4901     0EC4                     l2348:
  4902     0EC4  17B3               	bsf	___fladd@grs^(0+128),7
  4903     0EC5                     l2350:
  4904     0EC5  3001               	movlw	1
  4905     0EC6  00A8               	movwf	??___fladd^(0+128)
  4906     0EC7                     u3095:
  4907     0EC7  0D23               	rlf	(___fladd@b+3)^(0+128),w
  4908     0EC8  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  4909     0EC9  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  4910     0ECA  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  4911     0ECB  0CA0               	rrf	___fladd@b^(0+128),f
  4912     0ECC  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  4913     0ECD  2EC7               	goto	u3095
  4914     0ECE                     l2352:
  4915     0ECE  3001               	movlw	1
  4916     0ECF  00A8               	movwf	??___fladd^(0+128)
  4917     0ED0  0828               	movf	??___fladd^(0+128),w
  4918     0ED1  07B2               	addwf	___fladd@bexp^(0+128),f
  4919     0ED2  2F87               	goto	l2388
  4920     0ED3                     l2354:
  4921     0ED3  0823               	movf	(___fladd@b+3)^(0+128),w
  4922     0ED4  3A80               	xorlw	128
  4923     0ED5  00FF               	movwf	btemp+1
  4924     0ED6  0827               	movf	(___fladd@a+3)^(0+128),w
  4925     0ED7  3A80               	xorlw	128
  4926     0ED8  027F               	subwf	btemp+1,w
  4927     0ED9  1D03               	skipz
  4928     0EDA  2EE5               	goto	u3103
  4929     0EDB  0826               	movf	(___fladd@a+2)^(0+128),w
  4930     0EDC  0222               	subwf	(___fladd@b+2)^(0+128),w
  4931     0EDD  1D03               	skipz
  4932     0EDE  2EE5               	goto	u3103
  4933     0EDF  0825               	movf	(___fladd@a+1)^(0+128),w
  4934     0EE0  0221               	subwf	(___fladd@b+1)^(0+128),w
  4935     0EE1  1D03               	skipz
  4936     0EE2  2EE5               	goto	u3103
  4937     0EE3  0824               	movf	___fladd@a^(0+128),w
  4938     0EE4  0220               	subwf	___fladd@b^(0+128),w
  4939     0EE5                     u3103:
  4940     0EE5  1803               	skipnc
  4941     0EE6  2EE8               	goto	u3101
  4942     0EE7  2EE9               	goto	u3100
  4943     0EE8                     u3101:
  4944     0EE8  2F41               	goto	l2364
  4945     0EE9                     u3100:
  4946     0EE9                     l2356:
  4947     0EE9  30FF               	movlw	255
  4948     0EEA  00A8               	movwf	??___fladd^(0+128)
  4949     0EEB  30FF               	movlw	255
  4950     0EEC  00A9               	movwf	(??___fladd^(0+128)+1)
  4951     0EED  30FF               	movlw	255
  4952     0EEE  00AA               	movwf	(??___fladd^(0+128)+2)
  4953     0EEF  30FF               	movlw	255
  4954     0EF0  00AB               	movwf	(??___fladd^(0+128)+3)
  4955     0EF1  0824               	movf	___fladd@a^(0+128),w
  4956     0EF2  00AC               	movwf	(??___fladd+4)^(0+128)
  4957     0EF3  0825               	movf	(___fladd@a+1)^(0+128),w
  4958     0EF4  00AD               	movwf	((??___fladd+4)^(0+128)+1)
  4959     0EF5  0826               	movf	(___fladd@a+2)^(0+128),w
  4960     0EF6  00AE               	movwf	((??___fladd+4)^(0+128)+2)
  4961     0EF7  0827               	movf	(___fladd@a+3)^(0+128),w
  4962     0EF8  00AF               	movwf	((??___fladd+4)^(0+128)+3)
  4963     0EF9  0820               	movf	___fladd@b^(0+128),w
  4964     0EFA  02AC               	subwf	(??___fladd+4)^(0+128),f
  4965     0EFB  0821               	movf	(___fladd@b+1)^(0+128),w
  4966     0EFC  1C03               	skipc
  4967     0EFD  0F21               	incfsz	(___fladd@b+1)^(0+128),w
  4968     0EFE  2F00               	goto	u3111
  4969     0EFF  2F01               	goto	u3112
  4970     0F00                     u3111:
  4971     0F00  02AD               	subwf	((??___fladd+4)^(0+128)+1),f
  4972     0F01                     u3112:
  4973     0F01  0822               	movf	(___fladd@b+2)^(0+128),w
  4974     0F02  1C03               	skipc
  4975     0F03  0F22               	incfsz	(___fladd@b+2)^(0+128),w
  4976     0F04  2F06               	goto	u3113
  4977     0F05  2F07               	goto	u3114
  4978     0F06                     u3113:
  4979     0F06  02AE               	subwf	((??___fladd+4)^(0+128)+2),f
  4980     0F07                     u3114:
  4981     0F07  0823               	movf	(___fladd@b+3)^(0+128),w
  4982     0F08  1C03               	skipc
  4983     0F09  0F23               	incfsz	(___fladd@b+3)^(0+128),w
  4984     0F0A  2F0C               	goto	u3115
  4985     0F0B  2F0D               	goto	u3116
  4986     0F0C                     u3115:
  4987     0F0C  02AF               	subwf	((??___fladd+4)^(0+128)+3),f
  4988     0F0D                     u3116:
  4989     0F0D  082C               	movf	(??___fladd+4)^(0+128),w
  4990     0F0E  07A8               	addwf	??___fladd^(0+128),f
  4991     0F0F  082D               	movf	(??___fladd+5)^(0+128),w
  4992     0F10  1803               	skipnc
  4993     0F11  0F2D               	incfsz	(??___fladd+5)^(0+128),w
  4994     0F12  2F14               	goto	u3120
  4995     0F13  2F15               	goto	u3121
  4996     0F14                     u3120:
  4997     0F14  07A9               	addwf	(??___fladd^(0+128)+1),f
  4998     0F15                     u3121:
  4999     0F15  082E               	movf	(??___fladd+6)^(0+128),w
  5000     0F16  1803               	skipnc
  5001     0F17  0F2E               	incfsz	(??___fladd+6)^(0+128),w
  5002     0F18  2F1A               	goto	u3122
  5003     0F19  2F1B               	goto	u3123
  5004     0F1A                     u3122:
  5005     0F1A  07AA               	addwf	(??___fladd^(0+128)+2),f
  5006     0F1B                     u3123:
  5007     0F1B  082F               	movf	(??___fladd+7)^(0+128),w
  5008     0F1C  1803               	skipnc
  5009     0F1D  0A2F               	incf	(??___fladd+7)^(0+128),w
  5010     0F1E  07AB               	addwf	(??___fladd^(0+128)+3),f
  5011     0F1F  082B               	movf	(??___fladd+3)^(0+128),w
  5012     0F20  00A3               	movwf	(___fladd@b+3)^(0+128)
  5013     0F21  082A               	movf	(??___fladd+2)^(0+128),w
  5014     0F22  00A2               	movwf	(___fladd@b+2)^(0+128)
  5015     0F23  0829               	movf	(??___fladd+1)^(0+128),w
  5016     0F24  00A1               	movwf	(___fladd@b+1)^(0+128)
  5017     0F25  0828               	movf	??___fladd^(0+128),w
  5018     0F26  00A0               	movwf	___fladd@b^(0+128)
  5019     0F27                     l2358:
  5020     0F27  3080               	movlw	128
  5021     0F28  00A8               	movwf	??___fladd^(0+128)
  5022     0F29  0828               	movf	??___fladd^(0+128),w
  5023     0F2A  06B0               	xorwf	___fladd@signs^(0+128),f
  5024     0F2B  09B3               	comf	___fladd@grs^(0+128),f
  5025     0F2C  0AB3               	incf	___fladd@grs^(0+128),f
  5026     0F2D                     l2360:
  5027     0F2D  0833               	movf	___fladd@grs^(0+128),w
  5028     0F2E  1D03               	btfss	3,2
  5029     0F2F  2F31               	goto	u3131
  5030     0F30  2F32               	goto	u3130
  5031     0F31                     u3131:
  5032     0F31  2F4F               	goto	l646
  5033     0F32                     u3130:
  5034     0F32                     l2362:
  5035     0F32  3001               	movlw	1
  5036     0F33  07A0               	addwf	___fladd@b^(0+128),f
  5037     0F34  3000               	movlw	0
  5038     0F35  1803               	skipnc
  5039     0F36  3001               	movlw	1
  5040     0F37  07A1               	addwf	(___fladd@b+1)^(0+128),f
  5041     0F38  3000               	movlw	0
  5042     0F39  1803               	skipnc
  5043     0F3A  3001               	movlw	1
  5044     0F3B  07A2               	addwf	(___fladd@b+2)^(0+128),f
  5045     0F3C  3000               	movlw	0
  5046     0F3D  1803               	skipnc
  5047     0F3E  3001               	movlw	1
  5048     0F3F  07A3               	addwf	(___fladd@b+3)^(0+128),f
  5049     0F40  2F4F               	goto	l646
  5050     0F41                     l2364:
  5051     0F41  0824               	movf	___fladd@a^(0+128),w
  5052     0F42  02A0               	subwf	___fladd@b^(0+128),f
  5053     0F43  0825               	movf	(___fladd@a+1)^(0+128),w
  5054     0F44  1C03               	skipc
  5055     0F45  0F25               	incfsz	(___fladd@a+1)^(0+128),w
  5056     0F46  02A1               	subwf	(___fladd@b+1)^(0+128),f
  5057     0F47  0826               	movf	(___fladd@a+2)^(0+128),w
  5058     0F48  1C03               	skipc
  5059     0F49  0F26               	incfsz	(___fladd@a+2)^(0+128),w
  5060     0F4A  02A2               	subwf	(___fladd@b+2)^(0+128),f
  5061     0F4B  0827               	movf	(___fladd@a+3)^(0+128),w
  5062     0F4C  1C03               	skipc
  5063     0F4D  0F27               	incfsz	(___fladd@a+3)^(0+128),w
  5064     0F4E  02A3               	subwf	(___fladd@b+3)^(0+128),f
  5065     0F4F                     l646:
  5066     0F4F  0823               	movf	(___fladd@b+3)^(0+128),w
  5067     0F50  0422               	iorwf	(___fladd@b+2)^(0+128),w
  5068     0F51  0421               	iorwf	(___fladd@b+1)^(0+128),w
  5069     0F52  0420               	iorwf	___fladd@b^(0+128),w
  5070     0F53  1D03               	skipz
  5071     0F54  2F56               	goto	u3141
  5072     0F55  2F57               	goto	u3140
  5073     0F56                     u3141:
  5074     0F56  2F83               	goto	l2386
  5075     0F57                     u3140:
  5076     0F57                     l2366:
  5077     0F57  0833               	movf	___fladd@grs^(0+128),w
  5078     0F58  1D03               	btfss	3,2
  5079     0F59  2F5B               	goto	u3151
  5080     0F5A  2F5C               	goto	u3150
  5081     0F5B                     u3151:
  5082     0F5B  2F83               	goto	l2386
  5083     0F5C                     u3150:
  5084     0F5C                     l2368:
  5085     0F5C  3000               	movlw	0
  5086     0F5D  00A3               	movwf	(?___fladd+3)^(0+128)
  5087     0F5E  3000               	movlw	0
  5088     0F5F  00A2               	movwf	(?___fladd+2)^(0+128)
  5089     0F60  3000               	movlw	0
  5090     0F61  00A1               	movwf	(?___fladd+1)^(0+128)
  5091     0F62  3000               	movlw	0
  5092     0F63  00A0               	movwf	?___fladd^(0+128)
  5093     0F64  2FFF               	goto	l638
  5094     0F65                     l2372:
  5095     0F65  3001               	movlw	1
  5096     0F66  00A8               	movwf	??___fladd^(0+128)
  5097     0F67                     u3165:
  5098     0F67  1003               	clrc
  5099     0F68  0DA0               	rlf	___fladd@b^(0+128),f
  5100     0F69  0DA1               	rlf	(___fladd@b+1)^(0+128),f
  5101     0F6A  0DA2               	rlf	(___fladd@b+2)^(0+128),f
  5102     0F6B  0DA3               	rlf	(___fladd@b+3)^(0+128),f
  5103     0F6C  0BA8               	decfsz	??___fladd^(0+128),f
  5104     0F6D  2F67               	goto	u3165
  5105     0F6E                     l2374:
  5106     0F6E  1FB3               	btfss	___fladd@grs^(0+128),7
  5107     0F6F  2F71               	goto	u3171
  5108     0F70  2F72               	goto	u3170
  5109     0F71                     u3171:
  5110     0F71  2F73               	goto	l650
  5111     0F72                     u3170:
  5112     0F72                     l2376:
  5113     0F72  1420               	bsf	___fladd@b^(0+128),0
  5114     0F73                     l650:
  5115     0F73  1C33               	btfss	___fladd@grs^(0+128),0
  5116     0F74  2F76               	goto	u3181
  5117     0F75  2F77               	goto	u3180
  5118     0F76                     u3181:
  5119     0F76  2F7A               	goto	l2380
  5120     0F77                     u3180:
  5121     0F77                     l2378:
  5122     0F77  1403               	setc
  5123     0F78  0DB3               	rlf	___fladd@grs^(0+128),f
  5124     0F79  2F7C               	goto	l2382
  5125     0F7A                     l2380:
  5126     0F7A  1003               	clrc
  5127     0F7B  0DB3               	rlf	___fladd@grs^(0+128),f
  5128     0F7C                     l2382:
  5129     0F7C  0832               	movf	___fladd@bexp^(0+128),w
  5130     0F7D  1903               	btfsc	3,2
  5131     0F7E  2F80               	goto	u3191
  5132     0F7F  2F81               	goto	u3190
  5133     0F80                     u3191:
  5134     0F80  2F83               	goto	l2386
  5135     0F81                     u3190:
  5136     0F81                     l2384:
  5137     0F81  3001               	movlw	1
  5138     0F82  02B2               	subwf	___fladd@bexp^(0+128),f
  5139     0F83                     l2386:
  5140     0F83  1FA2               	btfss	(___fladd@b+2)^(0+128),7
  5141     0F84  2F86               	goto	u3201
  5142     0F85  2F87               	goto	u3200
  5143     0F86                     u3201:
  5144     0F86  2F65               	goto	l2372
  5145     0F87                     u3200:
  5146     0F87                     l2388:
  5147     0F87  01B1               	clrf	___fladd@aexp^(0+128)
  5148     0F88                     l2390:
  5149     0F88  1FB3               	btfss	___fladd@grs^(0+128),7
  5150     0F89  2F8B               	goto	u3211
  5151     0F8A  2F8C               	goto	u3210
  5152     0F8B                     u3211:
  5153     0F8B  2F9A               	goto	l2398
  5154     0F8C                     u3210:
  5155     0F8C                     l2392:
  5156     0F8C  0833               	movf	___fladd@grs^(0+128),w
  5157     0F8D  397F               	andlw	127
  5158     0F8E  1903               	btfsc	3,2
  5159     0F8F  2F91               	goto	u3221
  5160     0F90  2F92               	goto	u3220
  5161     0F91                     u3221:
  5162     0F91  2F95               	goto	l656
  5163     0F92                     u3220:
  5164     0F92                     l2394:
  5165     0F92  01B1               	clrf	___fladd@aexp^(0+128)
  5166     0F93  0AB1               	incf	___fladd@aexp^(0+128),f
  5167     0F94  2F9A               	goto	l2398
  5168     0F95                     l656:
  5169     0F95  1C20               	btfss	___fladd@b^(0+128),0
  5170     0F96  2F98               	goto	u3231
  5171     0F97  2F99               	goto	u3230
  5172     0F98                     u3231:
  5173     0F98  2F9A               	goto	l2398
  5174     0F99                     u3230:
  5175     0F99  2F92               	goto	l2394
  5176     0F9A                     l2398:
  5177     0F9A  0831               	movf	___fladd@aexp^(0+128),w
  5178     0F9B  1903               	btfsc	3,2
  5179     0F9C  2F9E               	goto	u3241
  5180     0F9D  2F9F               	goto	u3240
  5181     0F9E                     u3241:
  5182     0F9E  2FD3               	goto	l659
  5183     0F9F                     u3240:
  5184     0F9F                     l2400:
  5185     0F9F  3001               	movlw	1
  5186     0FA0  07A0               	addwf	___fladd@b^(0+128),f
  5187     0FA1  3000               	movlw	0
  5188     0FA2  1803               	skipnc
  5189     0FA3  3001               	movlw	1
  5190     0FA4  07A1               	addwf	(___fladd@b+1)^(0+128),f
  5191     0FA5  3000               	movlw	0
  5192     0FA6  1803               	skipnc
  5193     0FA7  3001               	movlw	1
  5194     0FA8  07A2               	addwf	(___fladd@b+2)^(0+128),f
  5195     0FA9  3000               	movlw	0
  5196     0FAA  1803               	skipnc
  5197     0FAB  3001               	movlw	1
  5198     0FAC  07A3               	addwf	(___fladd@b+3)^(0+128),f
  5199     0FAD                     l2402:
  5200     0FAD  1C23               	btfss	(___fladd@b+3)^(0+128),0
  5201     0FAE  2FB0               	goto	u3251
  5202     0FAF  2FB1               	goto	u3250
  5203     0FB0                     u3251:
  5204     0FB0  2FD3               	goto	l659
  5205     0FB1                     u3250:
  5206     0FB1                     l2404:
  5207     0FB1  0820               	movf	___fladd@b^(0+128),w
  5208     0FB2  00A8               	movwf	??___fladd^(0+128)
  5209     0FB3  0821               	movf	(___fladd@b+1)^(0+128),w
  5210     0FB4  00A9               	movwf	(??___fladd^(0+128)+1)
  5211     0FB5  0822               	movf	(___fladd@b+2)^(0+128),w
  5212     0FB6  00AA               	movwf	(??___fladd^(0+128)+2)
  5213     0FB7  0823               	movf	(___fladd@b+3)^(0+128),w
  5214     0FB8  00AB               	movwf	(??___fladd^(0+128)+3)
  5215     0FB9  3001               	movlw	1
  5216     0FBA  00AC               	movwf	(??___fladd+4)^(0+128)
  5217     0FBB                     u3265:
  5218     0FBB  0D2B               	rlf	(??___fladd^(0+128)+3),w
  5219     0FBC  0CAB               	rrf	(??___fladd^(0+128)+3),f
  5220     0FBD  0CAA               	rrf	(??___fladd^(0+128)+2),f
  5221     0FBE  0CA9               	rrf	(??___fladd^(0+128)+1),f
  5222     0FBF  0CA8               	rrf	??___fladd^(0+128),f
  5223     0FC0                     u3260:
  5224     0FC0  0BAC               	decfsz	(??___fladd+4)^(0+128),f
  5225     0FC1  2FBB               	goto	u3265
  5226     0FC2  082B               	movf	(??___fladd+3)^(0+128),w
  5227     0FC3  00A3               	movwf	(___fladd@b+3)^(0+128)
  5228     0FC4  082A               	movf	(??___fladd+2)^(0+128),w
  5229     0FC5  00A2               	movwf	(___fladd@b+2)^(0+128)
  5230     0FC6  0829               	movf	(??___fladd+1)^(0+128),w
  5231     0FC7  00A1               	movwf	(___fladd@b+1)^(0+128)
  5232     0FC8  0828               	movf	??___fladd^(0+128),w
  5233     0FC9  00A0               	movwf	___fladd@b^(0+128)
  5234     0FCA  0A32               	incf	___fladd@bexp^(0+128),w
  5235     0FCB  1903               	btfsc	3,2
  5236     0FCC  2FCE               	goto	u3271
  5237     0FCD  2FCF               	goto	u3270
  5238     0FCE                     u3271:
  5239     0FCE  2FD3               	goto	l659
  5240     0FCF                     u3270:
  5241     0FCF                     l2406:
  5242     0FCF  3001               	movlw	1
  5243     0FD0  00A8               	movwf	??___fladd^(0+128)
  5244     0FD1  0828               	movf	??___fladd^(0+128),w
  5245     0FD2  07B2               	addwf	___fladd@bexp^(0+128),f
  5246     0FD3                     l659:
  5247     0FD3  0A32               	incf	___fladd@bexp^(0+128),w
  5248     0FD4  1903               	btfsc	3,2
  5249     0FD5  2FD7               	goto	u3281
  5250     0FD6  2FD8               	goto	u3280
  5251     0FD7                     u3281:
  5252     0FD7  2FDD               	goto	l2410
  5253     0FD8                     u3280:
  5254     0FD8                     l2408:
  5255     0FD8  0832               	movf	___fladd@bexp^(0+128),w
  5256     0FD9  1D03               	btfss	3,2
  5257     0FDA  2FDC               	goto	u3291
  5258     0FDB  2FDD               	goto	u3290
  5259     0FDC                     u3291:
  5260     0FDC  2FEB               	goto	l2416
  5261     0FDD                     u3290:
  5262     0FDD                     l2410:
  5263     0FDD  3000               	movlw	0
  5264     0FDE  00A3               	movwf	(___fladd@b+3)^(0+128)
  5265     0FDF  3000               	movlw	0
  5266     0FE0  00A2               	movwf	(___fladd@b+2)^(0+128)
  5267     0FE1  3000               	movlw	0
  5268     0FE2  00A1               	movwf	(___fladd@b+1)^(0+128)
  5269     0FE3  3000               	movlw	0
  5270     0FE4  00A0               	movwf	___fladd@b^(0+128)
  5271     0FE5                     l2412:
  5272     0FE5  0832               	movf	___fladd@bexp^(0+128),w
  5273     0FE6  1D03               	btfss	3,2
  5274     0FE7  2FE9               	goto	u3301
  5275     0FE8  2FEA               	goto	u3300
  5276     0FE9                     u3301:
  5277     0FE9  2FEB               	goto	l2416
  5278     0FEA                     u3300:
  5279     0FEA                     l2414:
  5280     0FEA  01B0               	clrf	___fladd@signs^(0+128)
  5281     0FEB                     l2416:
  5282     0FEB  1C32               	btfss	___fladd@bexp^(0+128),0
  5283     0FEC  2FEE               	goto	u3311
  5284     0FED  2FEF               	goto	u3310
  5285     0FEE                     u3311:
  5286     0FEE  2FF1               	goto	l2420
  5287     0FEF                     u3310:
  5288     0FEF                     l2418:
  5289     0FEF  17A2               	bsf	(___fladd@b^(0+128)+2),7
  5290     0FF0  2FF5               	goto	l667
  5291     0FF1                     l2420:
  5292     0FF1  307F               	movlw	127
  5293     0FF2  00A8               	movwf	??___fladd^(0+128)
  5294     0FF3  0828               	movf	??___fladd^(0+128),w
  5295     0FF4  05A2               	andwf	(___fladd@b^(0+128)+2),f
  5296     0FF5                     l667:
  5297     0FF5  0832               	movf	___fladd@bexp^(0+128),w
  5298     0FF6  00A8               	movwf	??___fladd^(0+128)
  5299     0FF7  1003               	clrc
  5300     0FF8  0C28               	rrf	??___fladd^(0+128),w
  5301     0FF9  00A3               	movwf	(___fladd@b^(0+128)+3)
  5302     0FFA                     l2422:
  5303     0FFA  1FB0               	btfss	___fladd@signs^(0+128),7
  5304     0FFB  2FFD               	goto	u3321
  5305     0FFC  2FFE               	goto	u3320
  5306     0FFD                     u3321:
  5307     0FFD  2FFF               	goto	l668
  5308     0FFE                     u3320:
  5309     0FFE                     l2424:
  5310     0FFE  17A3               	bsf	(___fladd@b^(0+128)+3),7
  5311     0FFF                     l668:
  5312     0FFF                     l638:
  5313     0FFF  0008               	return
  5314     1000                     __end_of___fladd:
  5315                           
  5316                           	psect	text21
  5317     1276                     __ptext21:	
  5318 ;; *************** function ___flneg *****************
  5319 ;; Defined at:
  5320 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  f1              4    0[BANK1 ] unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  4    0[BANK1 ] unsigned char 
  5327 ;; Registers used:
  5328 ;;		wreg
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5334 ;;      Params:         0       0       4       0       0
  5335 ;;      Locals:         0       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0
  5337 ;;      Totals:         0       0       4       0       0
  5338 ;;Total ram usage:        4 bytes
  5339 ;; Hardware stack levels used: 1
  5340 ;; Hardware stack levels required when called: 3
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_floatToStr
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348     1276                     ___flneg:	
  5349                           ;psect for function ___flneg
  5350                           
  5351     1276                     l2560:	
  5352                           ;incstack = 0
  5353                           ; Regs used in ___flneg: [wreg]
  5354                           
  5355     1276  1683               	bsf	3,5	;RP0=1, select bank1
  5356     1277  1303               	bcf	3,6	;RP1=0, select bank1
  5357     1278  0823               	movf	(___flneg@f1+3)^(0+128),w
  5358     1279  0422               	iorwf	(___flneg@f1+2)^(0+128),w
  5359     127A  0421               	iorwf	(___flneg@f1+1)^(0+128),w
  5360     127B  0420               	iorwf	___flneg@f1^(0+128),w
  5361     127C  1903               	skipnz
  5362     127D  2A7F               	goto	u3531
  5363     127E  2A80               	goto	u3530
  5364     127F                     u3531:
  5365     127F  2A82               	goto	l2564
  5366     1280                     u3530:
  5367     1280                     l2562:
  5368     1280  3080               	movlw	128
  5369     1281  06A3               	xorwf	(___flneg@f1+3)^(0+128),f
  5370     1282                     l2564:
  5371     1282                     l514:
  5372     1282  0008               	return
  5373     1283                     __end_of___flneg:
  5374                           
  5375                           	psect	text22
  5376     004B                     __ptext22:	
  5377 ;; *************** function ___flmul *****************
  5378 ;; Defined at:
  5379 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  b               4    9[BANK1 ] unsigned char 
  5382 ;;  a               4   13[BANK1 ] unsigned char 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  prod            4   29[BANK1 ] struct .
  5385 ;;  grs             4   23[BANK1 ] unsigned long 
  5386 ;;  temp            2   33[BANK1 ] struct .
  5387 ;;  bexp            1   28[BANK1 ] unsigned char 
  5388 ;;  aexp            1   27[BANK1 ] unsigned char 
  5389 ;;  sign            1   22[BANK1 ] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  4    9[BANK1 ] unsigned char 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5399 ;;      Params:         0       0       8       0       0
  5400 ;;      Locals:         0       0      13       0       0
  5401 ;;      Temps:          0       0       5       0       0
  5402 ;;      Totals:         0       0      26       0       0
  5403 ;;Total ram usage:       26 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 4
  5406 ;; This function calls:
  5407 ;;		__Umul8_16
  5408 ;; This function is called by:
  5409 ;;		_floatToStr
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413     004B                     ___flmul:	
  5414                           ;psect for function ___flmul
  5415                           
  5416     004B                     l2610:	
  5417                           ;incstack = 0
  5418                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5419                           
  5420     004B  1683               	bsf	3,5	;RP0=1, select bank1
  5421     004C  1303               	bcf	3,6	;RP1=0, select bank1
  5422     004D  082C               	movf	(___flmul@b^(0+128)+3),w
  5423     004E  3980               	andlw	128
  5424     004F  00B6               	movwf	___flmul@sign^(0+128)
  5425     0050                     l2612:
  5426     0050  082C               	movf	(___flmul@b^(0+128)+3),w
  5427     0051  00B1               	movwf	??___flmul^(0+128)
  5428     0052  0731               	addwf	??___flmul^(0+128),w
  5429     0053  00BC               	movwf	___flmul@bexp^(0+128)
  5430     0054                     l2614:
  5431     0054  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  5432     0055  2857               	goto	u3641
  5433     0056  2858               	goto	u3640
  5434     0057                     u3641:
  5435     0057  2859               	goto	l2618
  5436     0058                     u3640:
  5437     0058                     l2616:
  5438     0058  143C               	bsf	___flmul@bexp^(0+128),0
  5439     0059                     l2618:
  5440     0059  083C               	movf	___flmul@bexp^(0+128),w
  5441     005A  1903               	btfsc	3,2
  5442     005B  285D               	goto	u3651
  5443     005C  285E               	goto	u3650
  5444     005D                     u3651:
  5445     005D  286D               	goto	l2626
  5446     005E                     u3650:
  5447     005E                     l2620:
  5448     005E  0A3C               	incf	___flmul@bexp^(0+128),w
  5449     005F  1D03               	btfss	3,2
  5450     0060  2862               	goto	u3661
  5451     0061  2863               	goto	u3660
  5452     0062                     u3661:
  5453     0062  286B               	goto	l2624
  5454     0063                     u3660:
  5455     0063                     l2622:
  5456     0063  3000               	movlw	0
  5457     0064  00AC               	movwf	(___flmul@b+3)^(0+128)
  5458     0065  3000               	movlw	0
  5459     0066  00AB               	movwf	(___flmul@b+2)^(0+128)
  5460     0067  3000               	movlw	0
  5461     0068  00AA               	movwf	(___flmul@b+1)^(0+128)
  5462     0069  3000               	movlw	0
  5463     006A  00A9               	movwf	___flmul@b^(0+128)
  5464     006B                     l2624:
  5465     006B  17AB               	bsf	(___flmul@b^(0+128)+2),7
  5466     006C  2875               	goto	l2628
  5467     006D                     l2626:
  5468     006D  3000               	movlw	0
  5469     006E  00AC               	movwf	(___flmul@b+3)^(0+128)
  5470     006F  3000               	movlw	0
  5471     0070  00AB               	movwf	(___flmul@b+2)^(0+128)
  5472     0071  3000               	movlw	0
  5473     0072  00AA               	movwf	(___flmul@b+1)^(0+128)
  5474     0073  3000               	movlw	0
  5475     0074  00A9               	movwf	___flmul@b^(0+128)
  5476     0075                     l2628:
  5477     0075  0830               	movf	(___flmul@a^(0+128)+3),w
  5478     0076  3980               	andlw	128
  5479     0077  00B1               	movwf	??___flmul^(0+128)
  5480     0078  0831               	movf	??___flmul^(0+128),w
  5481     0079  06B6               	xorwf	___flmul@sign^(0+128),f
  5482     007A                     l2630:
  5483     007A  0830               	movf	(___flmul@a^(0+128)+3),w
  5484     007B  00B1               	movwf	??___flmul^(0+128)
  5485     007C  0731               	addwf	??___flmul^(0+128),w
  5486     007D  00BB               	movwf	___flmul@aexp^(0+128)
  5487     007E                     l2632:
  5488     007E  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  5489     007F  2881               	goto	u3671
  5490     0080  2882               	goto	u3670
  5491     0081                     u3671:
  5492     0081  2883               	goto	l2636
  5493     0082                     u3670:
  5494     0082                     l2634:
  5495     0082  143B               	bsf	___flmul@aexp^(0+128),0
  5496     0083                     l2636:
  5497     0083  083B               	movf	___flmul@aexp^(0+128),w
  5498     0084  1903               	btfsc	3,2
  5499     0085  2887               	goto	u3681
  5500     0086  2888               	goto	u3680
  5501     0087                     u3681:
  5502     0087  2897               	goto	l2644
  5503     0088                     u3680:
  5504     0088                     l2638:
  5505     0088  0A3B               	incf	___flmul@aexp^(0+128),w
  5506     0089  1D03               	btfss	3,2
  5507     008A  288C               	goto	u3691
  5508     008B  288D               	goto	u3690
  5509     008C                     u3691:
  5510     008C  2895               	goto	l2642
  5511     008D                     u3690:
  5512     008D                     l2640:
  5513     008D  3000               	movlw	0
  5514     008E  00B0               	movwf	(___flmul@a+3)^(0+128)
  5515     008F  3000               	movlw	0
  5516     0090  00AF               	movwf	(___flmul@a+2)^(0+128)
  5517     0091  3000               	movlw	0
  5518     0092  00AE               	movwf	(___flmul@a+1)^(0+128)
  5519     0093  3000               	movlw	0
  5520     0094  00AD               	movwf	___flmul@a^(0+128)
  5521     0095                     l2642:
  5522     0095  17AF               	bsf	(___flmul@a^(0+128)+2),7
  5523     0096  289F               	goto	l2646
  5524     0097                     l2644:
  5525     0097  3000               	movlw	0
  5526     0098  00B0               	movwf	(___flmul@a+3)^(0+128)
  5527     0099  3000               	movlw	0
  5528     009A  00AF               	movwf	(___flmul@a+2)^(0+128)
  5529     009B  3000               	movlw	0
  5530     009C  00AE               	movwf	(___flmul@a+1)^(0+128)
  5531     009D  3000               	movlw	0
  5532     009E  00AD               	movwf	___flmul@a^(0+128)
  5533     009F                     l2646:
  5534     009F  083B               	movf	___flmul@aexp^(0+128),w
  5535     00A0  1903               	btfsc	3,2
  5536     00A1  28A3               	goto	u3701
  5537     00A2  28A4               	goto	u3700
  5538     00A3                     u3701:
  5539     00A3  28A9               	goto	l2650
  5540     00A4                     u3700:
  5541     00A4                     l2648:
  5542     00A4  083C               	movf	___flmul@bexp^(0+128),w
  5543     00A5  1D03               	btfss	3,2
  5544     00A6  28A8               	goto	u3711
  5545     00A7  28A9               	goto	u3710
  5546     00A8                     u3711:
  5547     00A8  28B2               	goto	l2654
  5548     00A9                     u3710:
  5549     00A9                     l2650:
  5550     00A9  3000               	movlw	0
  5551     00AA  00AC               	movwf	(?___flmul+3)^(0+128)
  5552     00AB  3000               	movlw	0
  5553     00AC  00AB               	movwf	(?___flmul+2)^(0+128)
  5554     00AD  3000               	movlw	0
  5555     00AE  00AA               	movwf	(?___flmul+1)^(0+128)
  5556     00AF  3000               	movlw	0
  5557     00B0  00A9               	movwf	?___flmul^(0+128)
  5558     00B1  2B8F               	goto	l721
  5559     00B2                     l2654:
  5560     00B2  0829               	movf	___flmul@b^(0+128),w
  5561     00B3  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5562     00B4  082F               	movf	(___flmul@a^(0+128)+2),w
  5563     00B5  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5564     00BA  1683               	bsf	3,5	;RP0=1, select bank1
  5565     00BB  1303               	bcf	3,6	;RP1=0, select bank1
  5566     00BC  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5567     00BD  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5568     00BE  0820               	movf	?__Umul8_16^(0+128),w
  5569     00BF  00C1               	movwf	___flmul@temp^(0+128)
  5570     00C0                     l2656:
  5571     00C0  0841               	movf	___flmul@temp^(0+128),w
  5572     00C1  00B1               	movwf	??___flmul^(0+128)
  5573     00C2  01B2               	clrf	(??___flmul^(0+128)+1)
  5574     00C3  01B3               	clrf	(??___flmul^(0+128)+2)
  5575     00C4  01B4               	clrf	(??___flmul^(0+128)+3)
  5576     00C5  0834               	movf	(??___flmul+3)^(0+128),w
  5577     00C6  00BA               	movwf	(___flmul@grs+3)^(0+128)
  5578     00C7  0833               	movf	(??___flmul+2)^(0+128),w
  5579     00C8  00B9               	movwf	(___flmul@grs+2)^(0+128)
  5580     00C9  0832               	movf	(??___flmul+1)^(0+128),w
  5581     00CA  00B8               	movwf	(___flmul@grs+1)^(0+128)
  5582     00CB  0831               	movf	??___flmul^(0+128),w
  5583     00CC  00B7               	movwf	___flmul@grs^(0+128)
  5584     00CD                     l2658:
  5585     00CD  0842               	movf	(___flmul@temp^(0+128)+1),w
  5586     00CE  00B1               	movwf	??___flmul^(0+128)
  5587     00CF  01B2               	clrf	(??___flmul^(0+128)+1)
  5588     00D0  01B3               	clrf	(??___flmul^(0+128)+2)
  5589     00D1  01B4               	clrf	(??___flmul^(0+128)+3)
  5590     00D2  0834               	movf	(??___flmul+3)^(0+128),w
  5591     00D3  00C0               	movwf	(___flmul@prod+3)^(0+128)
  5592     00D4  0833               	movf	(??___flmul+2)^(0+128),w
  5593     00D5  00BF               	movwf	(___flmul@prod+2)^(0+128)
  5594     00D6  0832               	movf	(??___flmul+1)^(0+128),w
  5595     00D7  00BE               	movwf	(___flmul@prod+1)^(0+128)
  5596     00D8  0831               	movf	??___flmul^(0+128),w
  5597     00D9  00BD               	movwf	___flmul@prod^(0+128)
  5598     00DA  082A               	movf	(___flmul@b^(0+128)+1),w
  5599     00DB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5600     00DC  082E               	movf	(___flmul@a^(0+128)+1),w
  5601     00DD  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5602     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  5603     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  5604     00E4  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5605     00E5  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5606     00E6  0820               	movf	?__Umul8_16^(0+128),w
  5607     00E7  00C1               	movwf	___flmul@temp^(0+128)
  5608     00E8                     l2660:
  5609     00E8  0841               	movf	___flmul@temp^(0+128),w
  5610     00E9  00B1               	movwf	??___flmul^(0+128)
  5611     00EA  01B2               	clrf	(??___flmul^(0+128)+1)
  5612     00EB  01B3               	clrf	(??___flmul^(0+128)+2)
  5613     00EC  01B4               	clrf	(??___flmul^(0+128)+3)
  5614     00ED  0831               	movf	??___flmul^(0+128),w
  5615     00EE  07B7               	addwf	___flmul@grs^(0+128),f
  5616     00EF  0832               	movf	(??___flmul+1)^(0+128),w
  5617     00F0  1103               	clrz
  5618     00F1  1803               	skipnc
  5619     00F2  3E01               	addlw	1
  5620     00F3  1903               	skipnz
  5621     00F4  28F6               	goto	u3721
  5622     00F5  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5623     00F6                     u3721:
  5624     00F6  0833               	movf	(??___flmul+2)^(0+128),w
  5625     00F7  1103               	clrz
  5626     00F8  1803               	skipnc
  5627     00F9  3E01               	addlw	1
  5628     00FA  1903               	skipnz
  5629     00FB  28FD               	goto	u3722
  5630     00FC  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5631     00FD                     u3722:
  5632     00FD  0834               	movf	(??___flmul+3)^(0+128),w
  5633     00FE  1103               	clrz
  5634     00FF  1803               	skipnc
  5635     0100  3E01               	addlw	1
  5636     0101  1903               	skipnz
  5637     0102  2904               	goto	u3723
  5638     0103  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5639     0104                     u3723:
  5640     0104                     l2662:
  5641     0104  0842               	movf	(___flmul@temp^(0+128)+1),w
  5642     0105  00B1               	movwf	??___flmul^(0+128)
  5643     0106  01B2               	clrf	(??___flmul^(0+128)+1)
  5644     0107  01B3               	clrf	(??___flmul^(0+128)+2)
  5645     0108  01B4               	clrf	(??___flmul^(0+128)+3)
  5646     0109  0831               	movf	??___flmul^(0+128),w
  5647     010A  07BD               	addwf	___flmul@prod^(0+128),f
  5648     010B  0832               	movf	(??___flmul+1)^(0+128),w
  5649     010C  1103               	clrz
  5650     010D  1803               	skipnc
  5651     010E  3E01               	addlw	1
  5652     010F  1903               	skipnz
  5653     0110  2912               	goto	u3731
  5654     0111  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  5655     0112                     u3731:
  5656     0112  0833               	movf	(??___flmul+2)^(0+128),w
  5657     0113  1103               	clrz
  5658     0114  1803               	skipnc
  5659     0115  3E01               	addlw	1
  5660     0116  1903               	skipnz
  5661     0117  2919               	goto	u3732
  5662     0118  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  5663     0119                     u3732:
  5664     0119  0834               	movf	(??___flmul+3)^(0+128),w
  5665     011A  1103               	clrz
  5666     011B  1803               	skipnc
  5667     011C  3E01               	addlw	1
  5668     011D  1903               	skipnz
  5669     011E  2920               	goto	u3733
  5670     011F  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  5671     0120                     u3733:
  5672     0120  082B               	movf	(___flmul@b^(0+128)+2),w
  5673     0121  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5674     0122  082D               	movf	___flmul@a^(0+128),w
  5675     0123  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5676     0128  1683               	bsf	3,5	;RP0=1, select bank1
  5677     0129  1303               	bcf	3,6	;RP1=0, select bank1
  5678     012A  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5679     012B  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5680     012C  0820               	movf	?__Umul8_16^(0+128),w
  5681     012D  00C1               	movwf	___flmul@temp^(0+128)
  5682     012E                     l2664:
  5683     012E  0841               	movf	___flmul@temp^(0+128),w
  5684     012F  00B1               	movwf	??___flmul^(0+128)
  5685     0130  01B2               	clrf	(??___flmul^(0+128)+1)
  5686     0131  01B3               	clrf	(??___flmul^(0+128)+2)
  5687     0132  01B4               	clrf	(??___flmul^(0+128)+3)
  5688     0133  0831               	movf	??___flmul^(0+128),w
  5689     0134  07B7               	addwf	___flmul@grs^(0+128),f
  5690     0135  0832               	movf	(??___flmul+1)^(0+128),w
  5691     0136  1103               	clrz
  5692     0137  1803               	skipnc
  5693     0138  3E01               	addlw	1
  5694     0139  1903               	skipnz
  5695     013A  293C               	goto	u3741
  5696     013B  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5697     013C                     u3741:
  5698     013C  0833               	movf	(??___flmul+2)^(0+128),w
  5699     013D  1103               	clrz
  5700     013E  1803               	skipnc
  5701     013F  3E01               	addlw	1
  5702     0140  1903               	skipnz
  5703     0141  2943               	goto	u3742
  5704     0142  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5705     0143                     u3742:
  5706     0143  0834               	movf	(??___flmul+3)^(0+128),w
  5707     0144  1103               	clrz
  5708     0145  1803               	skipnc
  5709     0146  3E01               	addlw	1
  5710     0147  1903               	skipnz
  5711     0148  294A               	goto	u3743
  5712     0149  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5713     014A                     u3743:
  5714     014A                     l2666:
  5715     014A  0842               	movf	(___flmul@temp^(0+128)+1),w
  5716     014B  00B1               	movwf	??___flmul^(0+128)
  5717     014C  01B2               	clrf	(??___flmul^(0+128)+1)
  5718     014D  01B3               	clrf	(??___flmul^(0+128)+2)
  5719     014E  01B4               	clrf	(??___flmul^(0+128)+3)
  5720     014F  0831               	movf	??___flmul^(0+128),w
  5721     0150  07BD               	addwf	___flmul@prod^(0+128),f
  5722     0151  0832               	movf	(??___flmul+1)^(0+128),w
  5723     0152  1103               	clrz
  5724     0153  1803               	skipnc
  5725     0154  3E01               	addlw	1
  5726     0155  1903               	skipnz
  5727     0156  2958               	goto	u3751
  5728     0157  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  5729     0158                     u3751:
  5730     0158  0833               	movf	(??___flmul+2)^(0+128),w
  5731     0159  1103               	clrz
  5732     015A  1803               	skipnc
  5733     015B  3E01               	addlw	1
  5734     015C  1903               	skipnz
  5735     015D  295F               	goto	u3752
  5736     015E  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  5737     015F                     u3752:
  5738     015F  0834               	movf	(??___flmul+3)^(0+128),w
  5739     0160  1103               	clrz
  5740     0161  1803               	skipnc
  5741     0162  3E01               	addlw	1
  5742     0163  1903               	skipnz
  5743     0164  2966               	goto	u3753
  5744     0165  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  5745     0166                     u3753:
  5746     0166                     l2668:
  5747     0166  3008               	movlw	8
  5748     0167  00B1               	movwf	??___flmul^(0+128)
  5749     0168                     u3765:
  5750     0168  1003               	clrc
  5751     0169  0DB7               	rlf	___flmul@grs^(0+128),f
  5752     016A  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5753     016B  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5754     016C  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5755     016D  0BB1               	decfsz	??___flmul^(0+128),f
  5756     016E  2968               	goto	u3765
  5757     016F                     l2670:
  5758     016F  082A               	movf	(___flmul@b^(0+128)+1),w
  5759     0170  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5760     0171  082D               	movf	___flmul@a^(0+128),w
  5761     0172  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5762     0177  1683               	bsf	3,5	;RP0=1, select bank1
  5763     0178  1303               	bcf	3,6	;RP1=0, select bank1
  5764     0179  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5765     017A  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5766     017B  0820               	movf	?__Umul8_16^(0+128),w
  5767     017C  00C1               	movwf	___flmul@temp^(0+128)
  5768     017D                     l2672:
  5769     017D  0841               	movf	___flmul@temp^(0+128),w
  5770     017E  00B1               	movwf	??___flmul^(0+128)
  5771     017F  0842               	movf	(___flmul@temp+1)^(0+128),w
  5772     0180  00B2               	movwf	(??___flmul^(0+128)+1)
  5773     0181  01B3               	clrf	(??___flmul^(0+128)+2)
  5774     0182  01B4               	clrf	(??___flmul^(0+128)+3)
  5775     0183  0831               	movf	??___flmul^(0+128),w
  5776     0184  07B7               	addwf	___flmul@grs^(0+128),f
  5777     0185  0832               	movf	(??___flmul+1)^(0+128),w
  5778     0186  1103               	clrz
  5779     0187  1803               	skipnc
  5780     0188  3E01               	addlw	1
  5781     0189  1903               	skipnz
  5782     018A  298C               	goto	u3771
  5783     018B  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5784     018C                     u3771:
  5785     018C  0833               	movf	(??___flmul+2)^(0+128),w
  5786     018D  1103               	clrz
  5787     018E  1803               	skipnc
  5788     018F  3E01               	addlw	1
  5789     0190  1903               	skipnz
  5790     0191  2993               	goto	u3772
  5791     0192  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5792     0193                     u3772:
  5793     0193  0834               	movf	(??___flmul+3)^(0+128),w
  5794     0194  1103               	clrz
  5795     0195  1803               	skipnc
  5796     0196  3E01               	addlw	1
  5797     0197  1903               	skipnz
  5798     0198  299A               	goto	u3773
  5799     0199  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5800     019A                     u3773:
  5801     019A                     l2674:
  5802     019A  0829               	movf	___flmul@b^(0+128),w
  5803     019B  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5804     019C  082E               	movf	(___flmul@a^(0+128)+1),w
  5805     019D  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5806     01A2  1683               	bsf	3,5	;RP0=1, select bank1
  5807     01A3  1303               	bcf	3,6	;RP1=0, select bank1
  5808     01A4  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5809     01A5  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5810     01A6  0820               	movf	?__Umul8_16^(0+128),w
  5811     01A7  00C1               	movwf	___flmul@temp^(0+128)
  5812     01A8                     l2676:
  5813     01A8  0841               	movf	___flmul@temp^(0+128),w
  5814     01A9  00B1               	movwf	??___flmul^(0+128)
  5815     01AA  0842               	movf	(___flmul@temp+1)^(0+128),w
  5816     01AB  00B2               	movwf	(??___flmul^(0+128)+1)
  5817     01AC  01B3               	clrf	(??___flmul^(0+128)+2)
  5818     01AD  01B4               	clrf	(??___flmul^(0+128)+3)
  5819     01AE  0831               	movf	??___flmul^(0+128),w
  5820     01AF  07B7               	addwf	___flmul@grs^(0+128),f
  5821     01B0  0832               	movf	(??___flmul+1)^(0+128),w
  5822     01B1  1103               	clrz
  5823     01B2  1803               	skipnc
  5824     01B3  3E01               	addlw	1
  5825     01B4  1903               	skipnz
  5826     01B5  29B7               	goto	u3781
  5827     01B6  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5828     01B7                     u3781:
  5829     01B7  0833               	movf	(??___flmul+2)^(0+128),w
  5830     01B8  1103               	clrz
  5831     01B9  1803               	skipnc
  5832     01BA  3E01               	addlw	1
  5833     01BB  1903               	skipnz
  5834     01BC  29BE               	goto	u3782
  5835     01BD  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5836     01BE                     u3782:
  5837     01BE  0834               	movf	(??___flmul+3)^(0+128),w
  5838     01BF  1103               	clrz
  5839     01C0  1803               	skipnc
  5840     01C1  3E01               	addlw	1
  5841     01C2  1903               	skipnz
  5842     01C3  29C5               	goto	u3783
  5843     01C4  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5844     01C5                     u3783:
  5845     01C5                     l2678:
  5846     01C5  3008               	movlw	8
  5847     01C6  00B1               	movwf	??___flmul^(0+128)
  5848     01C7                     u3795:
  5849     01C7  1003               	clrc
  5850     01C8  0DB7               	rlf	___flmul@grs^(0+128),f
  5851     01C9  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5852     01CA  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5853     01CB  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5854     01CC  0BB1               	decfsz	??___flmul^(0+128),f
  5855     01CD  29C7               	goto	u3795
  5856     01CE  0829               	movf	___flmul@b^(0+128),w
  5857     01CF  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5858     01D0  082D               	movf	___flmul@a^(0+128),w
  5859     01D1  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5860     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  5861     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  5862     01D8  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5863     01D9  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5864     01DA  0820               	movf	?__Umul8_16^(0+128),w
  5865     01DB  00C1               	movwf	___flmul@temp^(0+128)
  5866     01DC                     l2680:
  5867     01DC  0841               	movf	___flmul@temp^(0+128),w
  5868     01DD  00B1               	movwf	??___flmul^(0+128)
  5869     01DE  0842               	movf	(___flmul@temp+1)^(0+128),w
  5870     01DF  00B2               	movwf	(??___flmul^(0+128)+1)
  5871     01E0  01B3               	clrf	(??___flmul^(0+128)+2)
  5872     01E1  01B4               	clrf	(??___flmul^(0+128)+3)
  5873     01E2  0831               	movf	??___flmul^(0+128),w
  5874     01E3  07B7               	addwf	___flmul@grs^(0+128),f
  5875     01E4  0832               	movf	(??___flmul+1)^(0+128),w
  5876     01E5  1103               	clrz
  5877     01E6  1803               	skipnc
  5878     01E7  3E01               	addlw	1
  5879     01E8  1903               	skipnz
  5880     01E9  29EB               	goto	u3801
  5881     01EA  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5882     01EB                     u3801:
  5883     01EB  0833               	movf	(??___flmul+2)^(0+128),w
  5884     01EC  1103               	clrz
  5885     01ED  1803               	skipnc
  5886     01EE  3E01               	addlw	1
  5887     01EF  1903               	skipnz
  5888     01F0  29F2               	goto	u3802
  5889     01F1  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5890     01F2                     u3802:
  5891     01F2  0834               	movf	(??___flmul+3)^(0+128),w
  5892     01F3  1103               	clrz
  5893     01F4  1803               	skipnc
  5894     01F5  3E01               	addlw	1
  5895     01F6  1903               	skipnz
  5896     01F7  29F9               	goto	u3803
  5897     01F8  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5898     01F9                     u3803:
  5899     01F9                     l2682:
  5900     01F9  082A               	movf	(___flmul@b^(0+128)+1),w
  5901     01FA  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5902     01FB  082F               	movf	(___flmul@a^(0+128)+2),w
  5903     01FC  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5904     0201  1683               	bsf	3,5	;RP0=1, select bank1
  5905     0202  1303               	bcf	3,6	;RP1=0, select bank1
  5906     0203  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5907     0204  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5908     0205  0820               	movf	?__Umul8_16^(0+128),w
  5909     0206  00C1               	movwf	___flmul@temp^(0+128)
  5910     0207  0841               	movf	___flmul@temp^(0+128),w
  5911     0208  00B1               	movwf	??___flmul^(0+128)
  5912     0209  0842               	movf	(___flmul@temp+1)^(0+128),w
  5913     020A  00B2               	movwf	(??___flmul^(0+128)+1)
  5914     020B  01B3               	clrf	(??___flmul^(0+128)+2)
  5915     020C  01B4               	clrf	(??___flmul^(0+128)+3)
  5916     020D  0831               	movf	??___flmul^(0+128),w
  5917     020E  07BD               	addwf	___flmul@prod^(0+128),f
  5918     020F  0832               	movf	(??___flmul+1)^(0+128),w
  5919     0210  1103               	clrz
  5920     0211  1803               	skipnc
  5921     0212  3E01               	addlw	1
  5922     0213  1903               	skipnz
  5923     0214  2A16               	goto	u3811
  5924     0215  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  5925     0216                     u3811:
  5926     0216  0833               	movf	(??___flmul+2)^(0+128),w
  5927     0217  1103               	clrz
  5928     0218  1803               	skipnc
  5929     0219  3E01               	addlw	1
  5930     021A  1903               	skipnz
  5931     021B  2A1D               	goto	u3812
  5932     021C  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  5933     021D                     u3812:
  5934     021D  0834               	movf	(??___flmul+3)^(0+128),w
  5935     021E  1103               	clrz
  5936     021F  1803               	skipnc
  5937     0220  3E01               	addlw	1
  5938     0221  1903               	skipnz
  5939     0222  2A24               	goto	u3813
  5940     0223  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  5941     0224                     u3813:
  5942     0224                     l2684:
  5943     0224  082B               	movf	(___flmul@b^(0+128)+2),w
  5944     0225  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5945     0226  082E               	movf	(___flmul@a^(0+128)+1),w
  5946     0227  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5947     022C  1683               	bsf	3,5	;RP0=1, select bank1
  5948     022D  1303               	bcf	3,6	;RP1=0, select bank1
  5949     022E  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5950     022F  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5951     0230  0820               	movf	?__Umul8_16^(0+128),w
  5952     0231  00C1               	movwf	___flmul@temp^(0+128)
  5953     0232                     l2686:
  5954     0232  0841               	movf	___flmul@temp^(0+128),w
  5955     0233  00B1               	movwf	??___flmul^(0+128)
  5956     0234  0842               	movf	(___flmul@temp+1)^(0+128),w
  5957     0235  00B2               	movwf	(??___flmul^(0+128)+1)
  5958     0236  01B3               	clrf	(??___flmul^(0+128)+2)
  5959     0237  01B4               	clrf	(??___flmul^(0+128)+3)
  5960     0238  0831               	movf	??___flmul^(0+128),w
  5961     0239  07BD               	addwf	___flmul@prod^(0+128),f
  5962     023A  0832               	movf	(??___flmul+1)^(0+128),w
  5963     023B  1103               	clrz
  5964     023C  1803               	skipnc
  5965     023D  3E01               	addlw	1
  5966     023E  1903               	skipnz
  5967     023F  2A41               	goto	u3821
  5968     0240  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  5969     0241                     u3821:
  5970     0241  0833               	movf	(??___flmul+2)^(0+128),w
  5971     0242  1103               	clrz
  5972     0243  1803               	skipnc
  5973     0244  3E01               	addlw	1
  5974     0245  1903               	skipnz
  5975     0246  2A48               	goto	u3822
  5976     0247  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  5977     0248                     u3822:
  5978     0248  0834               	movf	(??___flmul+3)^(0+128),w
  5979     0249  1103               	clrz
  5980     024A  1803               	skipnc
  5981     024B  3E01               	addlw	1
  5982     024C  1903               	skipnz
  5983     024D  2A4F               	goto	u3823
  5984     024E  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  5985     024F                     u3823:
  5986     024F  082B               	movf	(___flmul@b^(0+128)+2),w
  5987     0250  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5988     0251  082F               	movf	(___flmul@a^(0+128)+2),w
  5989     0252  160A  118A  2322  120A  118A  	fcall	__Umul8_16
  5990     0257  1683               	bsf	3,5	;RP0=1, select bank1
  5991     0258  1303               	bcf	3,6	;RP1=0, select bank1
  5992     0259  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5993     025A  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5994     025B  0820               	movf	?__Umul8_16^(0+128),w
  5995     025C  00C1               	movwf	___flmul@temp^(0+128)
  5996     025D                     l2688:
  5997     025D  0841               	movf	___flmul@temp^(0+128),w
  5998     025E  00B1               	movwf	??___flmul^(0+128)
  5999     025F  0842               	movf	(___flmul@temp+1)^(0+128),w
  6000     0260  00B2               	movwf	(??___flmul^(0+128)+1)
  6001     0261  01B3               	clrf	(??___flmul^(0+128)+2)
  6002     0262  01B4               	clrf	(??___flmul^(0+128)+3)
  6003     0263  3008               	movlw	8
  6004     0264                     u3835:
  6005     0264  1003               	clrc
  6006     0265  0DB1               	rlf	??___flmul^(0+128),f
  6007     0266  0DB2               	rlf	(??___flmul^(0+128)+1),f
  6008     0267  0DB3               	rlf	(??___flmul^(0+128)+2),f
  6009     0268  0DB4               	rlf	(??___flmul^(0+128)+3),f
  6010     0269                     u3830:
  6011     0269  3EFF               	addlw	-1
  6012     026A  1D03               	skipz
  6013     026B  2A64               	goto	u3835
  6014     026C  0831               	movf	??___flmul^(0+128),w
  6015     026D  07BD               	addwf	___flmul@prod^(0+128),f
  6016     026E  0832               	movf	(??___flmul+1)^(0+128),w
  6017     026F  1103               	clrz
  6018     0270  1803               	skipnc
  6019     0271  3E01               	addlw	1
  6020     0272  1903               	skipnz
  6021     0273  2A75               	goto	u3841
  6022     0274  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6023     0275                     u3841:
  6024     0275  0833               	movf	(??___flmul+2)^(0+128),w
  6025     0276  1103               	clrz
  6026     0277  1803               	skipnc
  6027     0278  3E01               	addlw	1
  6028     0279  1903               	skipnz
  6029     027A  2A7C               	goto	u3842
  6030     027B  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6031     027C                     u3842:
  6032     027C  0834               	movf	(??___flmul+3)^(0+128),w
  6033     027D  1103               	clrz
  6034     027E  1803               	skipnc
  6035     027F  3E01               	addlw	1
  6036     0280  1903               	skipnz
  6037     0281  2A83               	goto	u3843
  6038     0282  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6039     0283                     u3843:
  6040     0283                     l2690:
  6041     0283  0837               	movf	___flmul@grs^(0+128),w
  6042     0284  00B1               	movwf	??___flmul^(0+128)
  6043     0285  0838               	movf	(___flmul@grs+1)^(0+128),w
  6044     0286  00B2               	movwf	(??___flmul^(0+128)+1)
  6045     0287  0839               	movf	(___flmul@grs+2)^(0+128),w
  6046     0288  00B3               	movwf	(??___flmul^(0+128)+2)
  6047     0289  083A               	movf	(___flmul@grs+3)^(0+128),w
  6048     028A  00B4               	movwf	(??___flmul^(0+128)+3)
  6049     028B  3018               	movlw	24
  6050     028C                     u3855:
  6051     028C  1003               	clrc
  6052     028D  0CB4               	rrf	(??___flmul^(0+128)+3),f
  6053     028E  0CB3               	rrf	(??___flmul^(0+128)+2),f
  6054     028F  0CB2               	rrf	(??___flmul^(0+128)+1),f
  6055     0290  0CB1               	rrf	??___flmul^(0+128),f
  6056     0291                     u3850:
  6057     0291  3EFF               	addlw	-1
  6058     0292  1D03               	skipz
  6059     0293  2A8C               	goto	u3855
  6060     0294  0831               	movf	??___flmul^(0+128),w
  6061     0295  07BD               	addwf	___flmul@prod^(0+128),f
  6062     0296  0832               	movf	(??___flmul+1)^(0+128),w
  6063     0297  1103               	clrz
  6064     0298  1803               	skipnc
  6065     0299  3E01               	addlw	1
  6066     029A  1903               	skipnz
  6067     029B  2A9D               	goto	u3861
  6068     029C  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6069     029D                     u3861:
  6070     029D  0833               	movf	(??___flmul+2)^(0+128),w
  6071     029E  1103               	clrz
  6072     029F  1803               	skipnc
  6073     02A0  3E01               	addlw	1
  6074     02A1  1903               	skipnz
  6075     02A2  2AA4               	goto	u3862
  6076     02A3  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6077     02A4                     u3862:
  6078     02A4  0834               	movf	(??___flmul+3)^(0+128),w
  6079     02A5  1103               	clrz
  6080     02A6  1803               	skipnc
  6081     02A7  3E01               	addlw	1
  6082     02A8  1903               	skipnz
  6083     02A9  2AAB               	goto	u3863
  6084     02AA  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6085     02AB                     u3863:
  6086     02AB                     l2692:
  6087     02AB  3008               	movlw	8
  6088     02AC  00B1               	movwf	??___flmul^(0+128)
  6089     02AD                     u3875:
  6090     02AD  1003               	clrc
  6091     02AE  0DB7               	rlf	___flmul@grs^(0+128),f
  6092     02AF  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  6093     02B0  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  6094     02B1  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  6095     02B2  0BB1               	decfsz	??___flmul^(0+128),f
  6096     02B3  2AAD               	goto	u3875
  6097     02B4                     l2694:
  6098     02B4  083C               	movf	___flmul@bexp^(0+128),w
  6099     02B5  073B               	addwf	___flmul@aexp^(0+128),w
  6100     02B6  00B1               	movwf	??___flmul^(0+128)
  6101     02B7  01B2               	clrf	(??___flmul^(0+128)+1)
  6102     02B8  0DB2               	rlf	(??___flmul+1)^(0+128),f
  6103     02B9  0831               	movf	??___flmul^(0+128),w
  6104     02BA  3E82               	addlw	130
  6105     02BB  00C1               	movwf	___flmul@temp^(0+128)
  6106     02BC  0832               	movf	(??___flmul+1)^(0+128),w
  6107     02BD  1803               	skipnc
  6108     02BE  3E01               	addlw	1
  6109     02BF  3EFF               	addlw	255
  6110     02C0  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6111     02C1  2ADF               	goto	l2706
  6112     02C2                     l2696:
  6113     02C2  3001               	movlw	1
  6114     02C3  00B1               	movwf	??___flmul^(0+128)
  6115     02C4                     u3885:
  6116     02C4  1003               	clrc
  6117     02C5  0DBD               	rlf	___flmul@prod^(0+128),f
  6118     02C6  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  6119     02C7  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  6120     02C8  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  6121     02C9  0BB1               	decfsz	??___flmul^(0+128),f
  6122     02CA  2AC4               	goto	u3885
  6123     02CB                     l2698:
  6124     02CB  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  6125     02CC  2ACE               	goto	u3891
  6126     02CD  2ACF               	goto	u3890
  6127     02CE                     u3891:
  6128     02CE  2AD0               	goto	l2702
  6129     02CF                     u3890:
  6130     02CF                     l2700:
  6131     02CF  143D               	bsf	___flmul@prod^(0+128),0
  6132     02D0                     l2702:
  6133     02D0  3001               	movlw	1
  6134     02D1  00B1               	movwf	??___flmul^(0+128)
  6135     02D2                     u3905:
  6136     02D2  1003               	clrc
  6137     02D3  0DB7               	rlf	___flmul@grs^(0+128),f
  6138     02D4  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  6139     02D5  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  6140     02D6  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  6141     02D7  0BB1               	decfsz	??___flmul^(0+128),f
  6142     02D8  2AD2               	goto	u3905
  6143     02D9                     l2704:
  6144     02D9  30FF               	movlw	255
  6145     02DA  07C1               	addwf	___flmul@temp^(0+128),f
  6146     02DB  1803               	skipnc
  6147     02DC  0AC2               	incf	(___flmul@temp+1)^(0+128),f
  6148     02DD  30FF               	movlw	255
  6149     02DE  07C2               	addwf	(___flmul@temp+1)^(0+128),f
  6150     02DF                     l2706:
  6151     02DF  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  6152     02E0  2AE2               	goto	u3911
  6153     02E1  2AE3               	goto	u3910
  6154     02E2                     u3911:
  6155     02E2  2AC2               	goto	l2696
  6156     02E3                     u3910:
  6157     02E3                     l2708:
  6158     02E3  01BB               	clrf	___flmul@aexp^(0+128)
  6159     02E4                     l2710:
  6160     02E4  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  6161     02E5  2AE7               	goto	u3921
  6162     02E6  2AE8               	goto	u3920
  6163     02E7                     u3921:
  6164     02E7  2B04               	goto	l2718
  6165     02E8                     u3920:
  6166     02E8                     l2712:
  6167     02E8  30FF               	movlw	255
  6168     02E9  0537               	andwf	___flmul@grs^(0+128),w
  6169     02EA  00B1               	movwf	??___flmul^(0+128)
  6170     02EB  30FF               	movlw	255
  6171     02EC  0538               	andwf	(___flmul@grs+1)^(0+128),w
  6172     02ED  00B2               	movwf	(??___flmul^(0+128)+1)
  6173     02EE  30FF               	movlw	255
  6174     02EF  0539               	andwf	(___flmul@grs+2)^(0+128),w
  6175     02F0  00B3               	movwf	(??___flmul^(0+128)+2)
  6176     02F1  307F               	movlw	127
  6177     02F2  053A               	andwf	(___flmul@grs+3)^(0+128),w
  6178     02F3  00B4               	movwf	(??___flmul^(0+128)+3)
  6179     02F4  0834               	movf	(??___flmul+3)^(0+128),w
  6180     02F5  0433               	iorwf	(??___flmul+2)^(0+128),w
  6181     02F6  0432               	iorwf	(??___flmul+1)^(0+128),w
  6182     02F7  0431               	iorwf	??___flmul^(0+128),w
  6183     02F8  1903               	skipnz
  6184     02F9  2AFB               	goto	u3931
  6185     02FA  2AFC               	goto	u3930
  6186     02FB                     u3931:
  6187     02FB  2AFF               	goto	l727
  6188     02FC                     u3930:
  6189     02FC                     l2714:
  6190     02FC  01BB               	clrf	___flmul@aexp^(0+128)
  6191     02FD  0ABB               	incf	___flmul@aexp^(0+128),f
  6192     02FE  2B04               	goto	l2718
  6193     02FF                     l727:
  6194     02FF  1C3D               	btfss	___flmul@prod^(0+128),0
  6195     0300  2B02               	goto	u3941
  6196     0301  2B03               	goto	u3940
  6197     0302                     u3941:
  6198     0302  2B04               	goto	l2718
  6199     0303                     u3940:
  6200     0303  2AFC               	goto	l2714
  6201     0304                     l2718:
  6202     0304  083B               	movf	___flmul@aexp^(0+128),w
  6203     0305  1903               	btfsc	3,2
  6204     0306  2B08               	goto	u3951
  6205     0307  2B09               	goto	u3950
  6206     0308                     u3951:
  6207     0308  2B3A               	goto	l2728
  6208     0309                     u3950:
  6209     0309                     l2720:
  6210     0309  3001               	movlw	1
  6211     030A  07BD               	addwf	___flmul@prod^(0+128),f
  6212     030B  3000               	movlw	0
  6213     030C  1803               	skipnc
  6214     030D  3001               	movlw	1
  6215     030E  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6216     030F  3000               	movlw	0
  6217     0310  1803               	skipnc
  6218     0311  3001               	movlw	1
  6219     0312  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6220     0313  3000               	movlw	0
  6221     0314  1803               	skipnc
  6222     0315  3001               	movlw	1
  6223     0316  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6224     0317                     l2722:
  6225     0317  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  6226     0318  2B1A               	goto	u3961
  6227     0319  2B1B               	goto	u3960
  6228     031A                     u3961:
  6229     031A  2B3A               	goto	l2728
  6230     031B                     u3960:
  6231     031B                     l2724:
  6232     031B  083D               	movf	___flmul@prod^(0+128),w
  6233     031C  00B1               	movwf	??___flmul^(0+128)
  6234     031D  083E               	movf	(___flmul@prod+1)^(0+128),w
  6235     031E  00B2               	movwf	(??___flmul^(0+128)+1)
  6236     031F  083F               	movf	(___flmul@prod+2)^(0+128),w
  6237     0320  00B3               	movwf	(??___flmul^(0+128)+2)
  6238     0321  0840               	movf	(___flmul@prod+3)^(0+128),w
  6239     0322  00B4               	movwf	(??___flmul^(0+128)+3)
  6240     0323  3001               	movlw	1
  6241     0324  00B5               	movwf	(??___flmul+4)^(0+128)
  6242     0325                     u3975:
  6243     0325  0D34               	rlf	(??___flmul^(0+128)+3),w
  6244     0326  0CB4               	rrf	(??___flmul^(0+128)+3),f
  6245     0327  0CB3               	rrf	(??___flmul^(0+128)+2),f
  6246     0328  0CB2               	rrf	(??___flmul^(0+128)+1),f
  6247     0329  0CB1               	rrf	??___flmul^(0+128),f
  6248     032A                     u3970:
  6249     032A  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  6250     032B  2B25               	goto	u3975
  6251     032C  0834               	movf	(??___flmul+3)^(0+128),w
  6252     032D  00C0               	movwf	(___flmul@prod+3)^(0+128)
  6253     032E  0833               	movf	(??___flmul+2)^(0+128),w
  6254     032F  00BF               	movwf	(___flmul@prod+2)^(0+128)
  6255     0330  0832               	movf	(??___flmul+1)^(0+128),w
  6256     0331  00BE               	movwf	(___flmul@prod+1)^(0+128)
  6257     0332  0831               	movf	??___flmul^(0+128),w
  6258     0333  00BD               	movwf	___flmul@prod^(0+128)
  6259     0334                     l2726:
  6260     0334  3001               	movlw	1
  6261     0335  07C1               	addwf	___flmul@temp^(0+128),f
  6262     0336  1803               	skipnc
  6263     0337  0AC2               	incf	(___flmul@temp+1)^(0+128),f
  6264     0338  3000               	movlw	0
  6265     0339  07C2               	addwf	(___flmul@temp+1)^(0+128),f
  6266     033A                     l2728:
  6267     033A  0842               	movf	(___flmul@temp+1)^(0+128),w
  6268     033B  3A80               	xorlw	128
  6269     033C  00FF               	movwf	btemp+1
  6270     033D  3080               	movlw	128
  6271     033E  027F               	subwf	btemp+1,w
  6272     033F  1D03               	skipz
  6273     0340  2B43               	goto	u3985
  6274     0341  30FF               	movlw	255
  6275     0342  0241               	subwf	___flmul@temp^(0+128),w
  6276     0343                     u3985:
  6277     0343  1C03               	skipc
  6278     0344  2B46               	goto	u3981
  6279     0345  2B47               	goto	u3980
  6280     0346                     u3981:
  6281     0346  2B52               	goto	l2732
  6282     0347                     u3980:
  6283     0347                     l2730:
  6284     0347  307F               	movlw	127
  6285     0348  1683               	bsf	3,5	;RP0=1, select bank1
  6286     0349  1303               	bcf	3,6	;RP1=0, select bank1
  6287     034A  00C0               	movwf	(___flmul@prod+3)^(0+128)
  6288     034B  3080               	movlw	128
  6289     034C  00BF               	movwf	(___flmul@prod+2)^(0+128)
  6290     034D  3000               	movlw	0
  6291     034E  00BE               	movwf	(___flmul@prod+1)^(0+128)
  6292     034F  3000               	movlw	0
  6293     0350  00BD               	movwf	___flmul@prod^(0+128)
  6294     0351  2B83               	goto	l733
  6295     0352                     l2732:
  6296     0352  1683               	bsf	3,5	;RP0=1, select bank1
  6297     0353  1303               	bcf	3,6	;RP1=0, select bank1
  6298     0354  0842               	movf	(___flmul@temp+1)^(0+128),w
  6299     0355  3A80               	xorlw	128
  6300     0356  00FF               	movwf	btemp+1
  6301     0357  3080               	movlw	128
  6302     0358  027F               	subwf	btemp+1,w
  6303     0359  1D03               	skipz
  6304     035A  2B5D               	goto	u3995
  6305     035B  3001               	movlw	1
  6306     035C  0241               	subwf	___flmul@temp^(0+128),w
  6307     035D                     u3995:
  6308     035D  1803               	skipnc
  6309     035E  2B60               	goto	u3991
  6310     035F  2B61               	goto	u3990
  6311     0360                     u3991:
  6312     0360  2B6D               	goto	l2738
  6313     0361                     u3990:
  6314     0361                     l2734:
  6315     0361  3000               	movlw	0
  6316     0362  1683               	bsf	3,5	;RP0=1, select bank1
  6317     0363  1303               	bcf	3,6	;RP1=0, select bank1
  6318     0364  00C0               	movwf	(___flmul@prod+3)^(0+128)
  6319     0365  3000               	movlw	0
  6320     0366  00BF               	movwf	(___flmul@prod+2)^(0+128)
  6321     0367  3000               	movlw	0
  6322     0368  00BE               	movwf	(___flmul@prod+1)^(0+128)
  6323     0369  3000               	movlw	0
  6324     036A  00BD               	movwf	___flmul@prod^(0+128)
  6325     036B                     l2736:
  6326     036B  01B6               	clrf	___flmul@sign^(0+128)
  6327     036C  2B83               	goto	l733
  6328     036D                     l2738:
  6329     036D  1683               	bsf	3,5	;RP0=1, select bank1
  6330     036E  1303               	bcf	3,6	;RP1=0, select bank1
  6331     036F  0841               	movf	___flmul@temp^(0+128),w
  6332     0370  00BC               	movwf	___flmul@bexp^(0+128)
  6333     0371  30FF               	movlw	255
  6334     0372  05BD               	andwf	___flmul@prod^(0+128),f
  6335     0373  30FF               	movlw	255
  6336     0374  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  6337     0375  307F               	movlw	127
  6338     0376  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  6339     0377  3000               	movlw	0
  6340     0378  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  6341     0379                     l2740:
  6342     0379  1C3C               	btfss	___flmul@bexp^(0+128),0
  6343     037A  2B7C               	goto	u4001
  6344     037B  2B7D               	goto	u4000
  6345     037C                     u4001:
  6346     037C  2B7E               	goto	l2744
  6347     037D                     u4000:
  6348     037D                     l2742:
  6349     037D  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  6350     037E                     l2744:
  6351     037E  083C               	movf	___flmul@bexp^(0+128),w
  6352     037F  00B1               	movwf	??___flmul^(0+128)
  6353     0380  1003               	clrc
  6354     0381  0C31               	rrf	??___flmul^(0+128),w
  6355     0382  00C0               	movwf	(___flmul@prod^(0+128)+3)
  6356     0383                     l733:
  6357     0383  0836               	movf	___flmul@sign^(0+128),w
  6358     0384  00B1               	movwf	??___flmul^(0+128)
  6359     0385  0831               	movf	??___flmul^(0+128),w
  6360     0386  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  6361     0387                     l2746:
  6362     0387  0840               	movf	(___flmul@prod+3)^(0+128),w
  6363     0388  00AC               	movwf	(?___flmul+3)^(0+128)
  6364     0389  083F               	movf	(___flmul@prod+2)^(0+128),w
  6365     038A  00AB               	movwf	(?___flmul+2)^(0+128)
  6366     038B  083E               	movf	(___flmul@prod+1)^(0+128),w
  6367     038C  00AA               	movwf	(?___flmul+1)^(0+128)
  6368     038D  083D               	movf	___flmul@prod^(0+128),w
  6369     038E  00A9               	movwf	?___flmul^(0+128)
  6370     038F                     l721:
  6371     038F  0008               	return
  6372     0390                     __end_of___flmul:
  6373                           
  6374                           	psect	text23
  6375     1322                     __ptext23:	
  6376 ;; *************** function __Umul8_16 *****************
  6377 ;; Defined at:
  6378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  multiplier      1    wreg     unsigned char 
  6381 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  multiplier      1    8[BANK1 ] unsigned char 
  6384 ;;  word_mpld       2    6[BANK1 ] unsigned int 
  6385 ;;  product         2    4[BANK1 ] unsigned int 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  2    0[BANK1 ] unsigned int 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6395 ;;      Params:         0       0       2       0       0
  6396 ;;      Locals:         0       0       5       0       0
  6397 ;;      Temps:          0       0       2       0       0
  6398 ;;      Totals:         0       0       9       0       0
  6399 ;;Total ram usage:        9 bytes
  6400 ;; Hardware stack levels used: 1
  6401 ;; Hardware stack levels required when called: 3
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		___flmul
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409     1322                     __Umul8_16:	
  6410                           ;psect for function __Umul8_16
  6411                           
  6412                           
  6413                           ;incstack = 0
  6414                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6415                           ;__Umul8_16@multiplier stored from wreg
  6416     1322  1683               	bsf	3,5	;RP0=1, select bank1
  6417     1323  1303               	bcf	3,6	;RP1=0, select bank1
  6418     1324  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  6419     1325                     l2426:
  6420     1325  01A4               	clrf	__Umul8_16@product^(0+128)
  6421     1326  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  6422     1327                     l2428:
  6423     1327  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  6424     1328  00A2               	movwf	??__Umul8_16^(0+128)
  6425     1329  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  6426     132A  0822               	movf	??__Umul8_16^(0+128),w
  6427     132B  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  6428     132C  0823               	movf	(??__Umul8_16+1)^(0+128),w
  6429     132D  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  6430     132E                     l2430:
  6431     132E  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  6432     132F  2B31               	goto	u3331
  6433     1330  2B32               	goto	u3330
  6434     1331                     u3331:
  6435     1331  2B38               	goto	l740
  6436     1332                     u3330:
  6437     1332                     l2432:
  6438     1332  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  6439     1333  07A4               	addwf	__Umul8_16@product^(0+128),f
  6440     1334  1803               	skipnc
  6441     1335  0AA5               	incf	(__Umul8_16@product+1)^(0+128),f
  6442     1336  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  6443     1337  07A5               	addwf	(__Umul8_16@product+1)^(0+128),f
  6444     1338                     l740:
  6445     1338  3001               	movlw	1
  6446     1339                     u3345:
  6447     1339  1003               	clrc
  6448     133A  0DA6               	rlf	__Umul8_16@word_mpld^(0+128),f
  6449     133B  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  6450     133C  3EFF               	addlw	-1
  6451     133D  1D03               	skipz
  6452     133E  2B39               	goto	u3345
  6453     133F  1003               	clrc
  6454     1340  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  6455     1341                     l2434:
  6456     1341  0828               	movf	__Umul8_16@multiplier^(0+128),w
  6457     1342  1D03               	btfss	3,2
  6458     1343  2B45               	goto	u3351
  6459     1344  2B46               	goto	u3350
  6460     1345                     u3351:
  6461     1345  2B2E               	goto	l2430
  6462     1346                     u3350:
  6463     1346                     l2436:
  6464     1346  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  6465     1347  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  6466     1348  0824               	movf	__Umul8_16@product^(0+128),w
  6467     1349  00A0               	movwf	?__Umul8_16^(0+128)
  6468     134A                     l742:
  6469     134A  0008               	return
  6470     134B                     __end_of__Umul8_16:
  6471                           
  6472                           	psect	text24
  6473     0895                     __ptext24:	
  6474 ;; *************** function ___flge *****************
  6475 ;; Defined at:
  6476 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  ff1             4    0[BANK1 ] unsigned int 
  6479 ;;  ff2             4    4[BANK1 ] unsigned int 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;		None               void
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6491 ;;      Params:         0       0       8       0       0
  6492 ;;      Locals:         0       0       0       0       0
  6493 ;;      Temps:          0       0       4       0       0
  6494 ;;      Totals:         0       0      12       0       0
  6495 ;;Total ram usage:       12 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 3
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_floatToStr
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505     0895                     ___flge:	
  6506                           ;psect for function ___flge
  6507                           
  6508     0895                     l2540:	
  6509                           ;incstack = 0
  6510                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6511                           
  6512     0895  3000               	movlw	0
  6513     0896  1683               	bsf	3,5	;RP0=1, select bank1
  6514     0897  1303               	bcf	3,6	;RP1=0, select bank1
  6515     0898  0520               	andwf	___flge@ff1^(0+128),w
  6516     0899  00A8               	movwf	??___flge^(0+128)
  6517     089A  3000               	movlw	0
  6518     089B  0521               	andwf	(___flge@ff1+1)^(0+128),w
  6519     089C  00A9               	movwf	(??___flge^(0+128)+1)
  6520     089D  3080               	movlw	128
  6521     089E  0522               	andwf	(___flge@ff1+2)^(0+128),w
  6522     089F  00AA               	movwf	(??___flge^(0+128)+2)
  6523     08A0  307F               	movlw	127
  6524     08A1  0523               	andwf	(___flge@ff1+3)^(0+128),w
  6525     08A2  00AB               	movwf	(??___flge^(0+128)+3)
  6526     08A3  082B               	movf	(??___flge+3)^(0+128),w
  6527     08A4  042A               	iorwf	(??___flge+2)^(0+128),w
  6528     08A5  0429               	iorwf	(??___flge+1)^(0+128),w
  6529     08A6  0428               	iorwf	??___flge^(0+128),w
  6530     08A7  1D03               	skipz
  6531     08A8  28AA               	goto	u3461
  6532     08A9  28AB               	goto	u3460
  6533     08AA                     u3461:
  6534     08AA  28B3               	goto	l506
  6535     08AB                     u3460:
  6536     08AB                     l2542:
  6537     08AB  3000               	movlw	0
  6538     08AC  00A3               	movwf	(___flge@ff1+3)^(0+128)
  6539     08AD  3000               	movlw	0
  6540     08AE  00A2               	movwf	(___flge@ff1+2)^(0+128)
  6541     08AF  3000               	movlw	0
  6542     08B0  00A1               	movwf	(___flge@ff1+1)^(0+128)
  6543     08B1  3000               	movlw	0
  6544     08B2  00A0               	movwf	___flge@ff1^(0+128)
  6545     08B3                     l506:
  6546     08B3  3000               	movlw	0
  6547     08B4  0524               	andwf	___flge@ff2^(0+128),w
  6548     08B5  00A8               	movwf	??___flge^(0+128)
  6549     08B6  3000               	movlw	0
  6550     08B7  0525               	andwf	(___flge@ff2+1)^(0+128),w
  6551     08B8  00A9               	movwf	(??___flge^(0+128)+1)
  6552     08B9  3080               	movlw	128
  6553     08BA  0526               	andwf	(___flge@ff2+2)^(0+128),w
  6554     08BB  00AA               	movwf	(??___flge^(0+128)+2)
  6555     08BC  307F               	movlw	127
  6556     08BD  0527               	andwf	(___flge@ff2+3)^(0+128),w
  6557     08BE  00AB               	movwf	(??___flge^(0+128)+3)
  6558     08BF  082B               	movf	(??___flge+3)^(0+128),w
  6559     08C0  042A               	iorwf	(??___flge+2)^(0+128),w
  6560     08C1  0429               	iorwf	(??___flge+1)^(0+128),w
  6561     08C2  0428               	iorwf	??___flge^(0+128),w
  6562     08C3  1D03               	skipz
  6563     08C4  28C6               	goto	u3471
  6564     08C5  28C7               	goto	u3470
  6565     08C6                     u3471:
  6566     08C6  28CF               	goto	l2546
  6567     08C7                     u3470:
  6568     08C7                     l2544:
  6569     08C7  3000               	movlw	0
  6570     08C8  00A7               	movwf	(___flge@ff2+3)^(0+128)
  6571     08C9  3000               	movlw	0
  6572     08CA  00A6               	movwf	(___flge@ff2+2)^(0+128)
  6573     08CB  3000               	movlw	0
  6574     08CC  00A5               	movwf	(___flge@ff2+1)^(0+128)
  6575     08CD  3000               	movlw	0
  6576     08CE  00A4               	movwf	___flge@ff2^(0+128)
  6577     08CF                     l2546:
  6578     08CF  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  6579     08D0  28D2               	goto	u3481
  6580     08D1  28D3               	goto	u3480
  6581     08D2                     u3481:
  6582     08D2  28F7               	goto	l2550
  6583     08D3                     u3480:
  6584     08D3                     l2548:
  6585     08D3  3000               	movlw	0
  6586     08D4  00A8               	movwf	??___flge^(0+128)
  6587     08D5  3000               	movlw	0
  6588     08D6  00A9               	movwf	(??___flge^(0+128)+1)
  6589     08D7  3000               	movlw	0
  6590     08D8  00AA               	movwf	(??___flge^(0+128)+2)
  6591     08D9  3080               	movlw	128
  6592     08DA  00AB               	movwf	(??___flge^(0+128)+3)
  6593     08DB  0820               	movf	___flge@ff1^(0+128),w
  6594     08DC  02A8               	subwf	??___flge^(0+128),f
  6595     08DD  0821               	movf	(___flge@ff1+1)^(0+128),w
  6596     08DE  1C03               	skipc
  6597     08DF  0F21               	incfsz	(___flge@ff1+1)^(0+128),w
  6598     08E0  28E2               	goto	u3491
  6599     08E1  28E3               	goto	u3492
  6600     08E2                     u3491:
  6601     08E2  02A9               	subwf	(??___flge^(0+128)+1),f
  6602     08E3                     u3492:
  6603     08E3  0822               	movf	(___flge@ff1+2)^(0+128),w
  6604     08E4  1C03               	skipc
  6605     08E5  0F22               	incfsz	(___flge@ff1+2)^(0+128),w
  6606     08E6  28E8               	goto	u3493
  6607     08E7  28E9               	goto	u3494
  6608     08E8                     u3493:
  6609     08E8  02AA               	subwf	(??___flge^(0+128)+2),f
  6610     08E9                     u3494:
  6611     08E9  0823               	movf	(___flge@ff1+3)^(0+128),w
  6612     08EA  1C03               	skipc
  6613     08EB  0F23               	incfsz	(___flge@ff1+3)^(0+128),w
  6614     08EC  28EE               	goto	u3495
  6615     08ED  28EF               	goto	u3496
  6616     08EE                     u3495:
  6617     08EE  02AB               	subwf	(??___flge^(0+128)+3),f
  6618     08EF                     u3496:
  6619     08EF  082B               	movf	(??___flge+3)^(0+128),w
  6620     08F0  00A3               	movwf	(___flge@ff1+3)^(0+128)
  6621     08F1  082A               	movf	(??___flge+2)^(0+128),w
  6622     08F2  00A2               	movwf	(___flge@ff1+2)^(0+128)
  6623     08F3  0829               	movf	(??___flge+1)^(0+128),w
  6624     08F4  00A1               	movwf	(___flge@ff1+1)^(0+128)
  6625     08F5  0828               	movf	??___flge^(0+128),w
  6626     08F6  00A0               	movwf	___flge@ff1^(0+128)
  6627     08F7                     l2550:
  6628     08F7  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  6629     08F8  28FA               	goto	u3501
  6630     08F9  28FB               	goto	u3500
  6631     08FA                     u3501:
  6632     08FA  291F               	goto	l509
  6633     08FB                     u3500:
  6634     08FB                     l2552:
  6635     08FB  3000               	movlw	0
  6636     08FC  00A8               	movwf	??___flge^(0+128)
  6637     08FD  3000               	movlw	0
  6638     08FE  00A9               	movwf	(??___flge^(0+128)+1)
  6639     08FF  3000               	movlw	0
  6640     0900  00AA               	movwf	(??___flge^(0+128)+2)
  6641     0901  3080               	movlw	128
  6642     0902  00AB               	movwf	(??___flge^(0+128)+3)
  6643     0903  0824               	movf	___flge@ff2^(0+128),w
  6644     0904  02A8               	subwf	??___flge^(0+128),f
  6645     0905  0825               	movf	(___flge@ff2+1)^(0+128),w
  6646     0906  1C03               	skipc
  6647     0907  0F25               	incfsz	(___flge@ff2+1)^(0+128),w
  6648     0908  290A               	goto	u3511
  6649     0909  290B               	goto	u3512
  6650     090A                     u3511:
  6651     090A  02A9               	subwf	(??___flge^(0+128)+1),f
  6652     090B                     u3512:
  6653     090B  0826               	movf	(___flge@ff2+2)^(0+128),w
  6654     090C  1C03               	skipc
  6655     090D  0F26               	incfsz	(___flge@ff2+2)^(0+128),w
  6656     090E  2910               	goto	u3513
  6657     090F  2911               	goto	u3514
  6658     0910                     u3513:
  6659     0910  02AA               	subwf	(??___flge^(0+128)+2),f
  6660     0911                     u3514:
  6661     0911  0827               	movf	(___flge@ff2+3)^(0+128),w
  6662     0912  1C03               	skipc
  6663     0913  0F27               	incfsz	(___flge@ff2+3)^(0+128),w
  6664     0914  2916               	goto	u3515
  6665     0915  2917               	goto	u3516
  6666     0916                     u3515:
  6667     0916  02AB               	subwf	(??___flge^(0+128)+3),f
  6668     0917                     u3516:
  6669     0917  082B               	movf	(??___flge+3)^(0+128),w
  6670     0918  00A7               	movwf	(___flge@ff2+3)^(0+128)
  6671     0919  082A               	movf	(??___flge+2)^(0+128),w
  6672     091A  00A6               	movwf	(___flge@ff2+2)^(0+128)
  6673     091B  0829               	movf	(??___flge+1)^(0+128),w
  6674     091C  00A5               	movwf	(___flge@ff2+1)^(0+128)
  6675     091D  0828               	movf	??___flge^(0+128),w
  6676     091E  00A4               	movwf	___flge@ff2^(0+128)
  6677     091F                     l509:
  6678     091F  3080               	movlw	128
  6679     0920  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  6680     0921  3080               	movlw	128
  6681     0922  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  6682     0923  0827               	movf	(___flge@ff2+3)^(0+128),w
  6683     0924  0223               	subwf	(___flge@ff1+3)^(0+128),w
  6684     0925  1D03               	skipz
  6685     0926  2931               	goto	u3525
  6686     0927  0826               	movf	(___flge@ff2+2)^(0+128),w
  6687     0928  0222               	subwf	(___flge@ff1+2)^(0+128),w
  6688     0929  1D03               	skipz
  6689     092A  2931               	goto	u3525
  6690     092B  0825               	movf	(___flge@ff2+1)^(0+128),w
  6691     092C  0221               	subwf	(___flge@ff1+1)^(0+128),w
  6692     092D  1D03               	skipz
  6693     092E  2931               	goto	u3525
  6694     092F  0824               	movf	___flge@ff2^(0+128),w
  6695     0930  0220               	subwf	___flge@ff1^(0+128),w
  6696     0931                     u3525:
  6697     0931  1803               	skipnc
  6698     0932  2934               	goto	u3521
  6699     0933  2935               	goto	u3520
  6700     0934                     u3521:
  6701     0934  2937               	goto	l2556
  6702     0935                     u3520:
  6703     0935                     l2554:
  6704     0935  1003               	clrc
  6705     0936  2938               	goto	l510
  6706     0937                     l2556:
  6707     0937  1403               	setc
  6708     0938                     l510:
  6709     0938  0008               	return
  6710     0939                     __end_of___flge:
  6711                           
  6712                           	psect	text25
  6713     1376                     __ptext25:	
  6714 ;; *************** function _adc_change_channel *****************
  6715 ;; Defined at:
  6716 ;;		line 25 in file "../LAB1_1.X/ADC.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  channel         1    wreg     PTR const int 
  6719 ;;		 -> channels(4), 
  6720 ;;  length          2    0[BANK1 ] int 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  channel         1    5[BANK1 ] PTR const int 
  6723 ;;		 -> channels(4), 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6733 ;;      Params:         0       0       2       0       0
  6734 ;;      Locals:         0       0       1       0       0
  6735 ;;      Temps:          0       0       3       0       0
  6736 ;;      Totals:         0       0       6       0       0
  6737 ;;Total ram usage:        6 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 3
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747     1376                     _adc_change_channel:	
  6748                           ;psect for function _adc_change_channel
  6749                           
  6750                           
  6751                           ;incstack = 0
  6752                           ; Regs used in _adc_change_channel: [wreg-fsr0h+status,2+status,0]
  6753                           ;adc_change_channel@channel stored from wreg
  6754     1376  1683               	bsf	3,5	;RP0=1, select bank1
  6755     1377  1303               	bcf	3,6	;RP1=0, select bank1
  6756     1378  00A5               	movwf	adc_change_channel@channel^(0+128)
  6757     1379                     l2878:
  6758                           
  6759                           ;../LAB1_1.X/ADC.c: 26:     static int temp_channel = 0;;../LAB1_1.X/ADC.c: 28:     if (
      +                          ADCON0bits.GO == 0) {
  6760     1379  1283               	bcf	3,5	;RP0=0, select bank0
  6761     137A  1303               	bcf	3,6	;RP1=0, select bank0
  6762     137B  189F               	btfsc	31,1	;volatile
  6763     137C  2B7E               	goto	u4211
  6764     137D  2B7F               	goto	u4210
  6765     137E                     u4211:
  6766     137E  2BBC               	goto	l195
  6767     137F                     u4210:
  6768     137F                     l2880:
  6769                           
  6770                           ;../LAB1_1.X/ADC.c: 29:         temp_channel++;
  6771     137F  3001               	movlw	1
  6772     1380  1683               	bsf	3,5	;RP0=1, select bank1
  6773     1381  1303               	bcf	3,6	;RP1=0, select bank1
  6774     1382  07DE               	addwf	adc_change_channel@temp_channel^(0+128),f
  6775     1383  1803               	skipnc
  6776     1384  0ADF               	incf	(adc_change_channel@temp_channel+1)^(0+128),f
  6777     1385  3000               	movlw	0
  6778     1386  07DF               	addwf	(adc_change_channel@temp_channel+1)^(0+128),f
  6779                           
  6780                           ;../LAB1_1.X/ADC.c: 30:         if (temp_channel >= length) {
  6781     1387  085F               	movf	(adc_change_channel@temp_channel+1)^(0+128),w
  6782     1388  3A80               	xorlw	128
  6783     1389  00A2               	movwf	??_adc_change_channel^(0+128)
  6784     138A  0821               	movf	(adc_change_channel@length+1)^(0+128),w
  6785     138B  3A80               	xorlw	128
  6786     138C  0222               	subwf	??_adc_change_channel^(0+128),w
  6787     138D  1D03               	skipz
  6788     138E  2B91               	goto	u4225
  6789     138F  0820               	movf	adc_change_channel@length^(0+128),w
  6790     1390  025E               	subwf	adc_change_channel@temp_channel^(0+128),w
  6791     1391                     u4225:
  6792     1391  1C03               	skipc
  6793     1392  2B94               	goto	u4221
  6794     1393  2B95               	goto	u4220
  6795     1394                     u4221:
  6796     1394  2B99               	goto	l2884
  6797     1395                     u4220:
  6798     1395                     l2882:
  6799                           
  6800                           ;../LAB1_1.X/ADC.c: 31:             temp_channel = 0;
  6801     1395  1683               	bsf	3,5	;RP0=1, select bank1
  6802     1396  1303               	bcf	3,6	;RP1=0, select bank1
  6803     1397  01DE               	clrf	adc_change_channel@temp_channel^(0+128)
  6804     1398  01DF               	clrf	(adc_change_channel@temp_channel+1)^(0+128)
  6805     1399                     l2884:
  6806                           
  6807                           ;../LAB1_1.X/ADC.c: 34:         ADCON0bits.CHS = channel[temp_channel];
  6808     1399  1683               	bsf	3,5	;RP0=1, select bank1
  6809     139A  1303               	bcf	3,6	;RP1=0, select bank1
  6810     139B  085E               	movf	adc_change_channel@temp_channel^(0+128),w
  6811     139C  00A2               	movwf	??_adc_change_channel^(0+128)
  6812     139D  0722               	addwf	??_adc_change_channel^(0+128),w
  6813     139E  0725               	addwf	adc_change_channel@channel^(0+128),w
  6814     139F  00A3               	movwf	(??_adc_change_channel+1)^(0+128)
  6815     13A0  0823               	movf	(??_adc_change_channel+1)^(0+128),w
  6816     13A1  0084               	movwf	4
  6817     13A2  1383               	bcf	3,7	;select IRP bank0
  6818     13A3  0800               	movf	0,w
  6819     13A4  00A4               	movwf	(??_adc_change_channel+2)^(0+128)
  6820     13A5  0DA4               	rlf	(??_adc_change_channel+2)^(0+128),f
  6821     13A6  0DA4               	rlf	(??_adc_change_channel+2)^(0+128),f
  6822     13A7  1283               	bcf	3,5	;RP0=0, select bank0
  6823     13A8  1303               	bcf	3,6	;RP1=0, select bank0
  6824     13A9  081F               	movf	31,w	;volatile
  6825     13AA  1683               	bsf	3,5	;RP0=1, select bank1
  6826     13AB  1303               	bcf	3,6	;RP1=0, select bank1
  6827     13AC  0624               	xorwf	(??_adc_change_channel+2)^(0+128),w
  6828     13AD  39C3               	andlw	-61
  6829     13AE  0624               	xorwf	(??_adc_change_channel+2)^(0+128),w
  6830     13AF  1283               	bcf	3,5	;RP0=0, select bank0
  6831     13B0  1303               	bcf	3,6	;RP1=0, select bank0
  6832     13B1  009F               	movwf	31	;volatile
  6833     13B2                     l2886:
  6834                           
  6835                           ;../LAB1_1.X/ADC.c: 35:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  6836     13B2  3020               	movlw	32
  6837     13B3  1683               	bsf	3,5	;RP0=1, select bank1
  6838     13B4  1303               	bcf	3,6	;RP1=0, select bank1
  6839     13B5  00A2               	movwf	??_adc_change_channel^(0+128)
  6840     13B6                     u5347:
  6841     13B6  0BA2               	decfsz	??_adc_change_channel^(0+128),f
  6842     13B7  2BB6               	goto	u5347
  6843     13B8  0000               	nop
  6844     13B9                     l2888:
  6845                           
  6846                           ;../LAB1_1.X/ADC.c: 36:         ADCON0bits.GO = 1;
  6847     13B9  1283               	bcf	3,5	;RP0=0, select bank0
  6848     13BA  1303               	bcf	3,6	;RP1=0, select bank0
  6849     13BB  149F               	bsf	31,1	;volatile
  6850     13BC                     l195:
  6851     13BC  0008               	return
  6852     13BD                     __end_of_adc_change_channel:
  6853                           
  6854                           	psect	text26
  6855     140E                     __ptext26:	
  6856 ;; *************** function _USART_print *****************
  6857 ;; Defined at:
  6858 ;;		line 45 in file "USART.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  string          2    1[BANK1 ] PTR const unsigned char 
  6861 ;;		 -> buffer(20), STR_1(2), 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  i               2    6[BANK1 ] int 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6873 ;;      Params:         0       0       2       0       0
  6874 ;;      Locals:         0       0       2       0       0
  6875 ;;      Temps:          0       0       3       0       0
  6876 ;;      Totals:         0       0       7       0       0
  6877 ;;Total ram usage:        7 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 4
  6880 ;; This function calls:
  6881 ;;		_USART_send
  6882 ;; This function is called by:
  6883 ;;		_main
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887     140E                     _USART_print:	
  6888                           ;psect for function _USART_print
  6889                           
  6890     140E                     l2870:	
  6891                           ;incstack = 0
  6892                           ; Regs used in _USART_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6893                           
  6894                           
  6895                           ;USART.c: 45: void USART_print(const char *string);USART.c: 46: {;USART.c: 47:     int i
      +                           = 0;
  6896     140E  1683               	bsf	3,5	;RP0=1, select bank1
  6897     140F  1303               	bcf	3,6	;RP1=0, select bank1
  6898     1410  01A6               	clrf	USART_print@i^(0+128)
  6899     1411  01A7               	clrf	(USART_print@i+1)^(0+128)
  6900     1412  2C3F               	goto	l2876
  6901     1413                     l2872:
  6902                           
  6903                           ;USART.c: 50:     {;USART.c: 51:         USART_send(string[i]);
  6904     1413  1683               	bsf	3,5	;RP0=1, select bank1
  6905     1414  1303               	bcf	3,6	;RP1=0, select bank1
  6906     1415  0826               	movf	USART_print@i^(0+128),w
  6907     1416  0721               	addwf	USART_print@string^(0+128),w
  6908     1417  00A4               	movwf	(??_USART_print+1)^(0+128)
  6909     1418  0822               	movf	(USART_print@string+1)^(0+128),w
  6910     1419  00A3               	movwf	??_USART_print^(0+128)
  6911     141A  1803               	skipnc
  6912     141B  0AA3               	incf	??_USART_print^(0+128),f
  6913     141C  1FA6               	btfss	USART_print@i^(0+128),7
  6914     141D  2C1F               	goto	u4180
  6915     141E  03A3               	decf	??_USART_print^(0+128),f
  6916     141F                     u4180:
  6917     141F  1683               	bsf	3,5	;RP0=1, select bank1
  6918     1420  1303               	bcf	3,6	;RP1=0, select bank1
  6919     1421  0823               	movf	??_USART_print^(0+128),w
  6920     1422  00A5               	movwf	((??_USART_print+1)^(0+128)+1)
  6921     1423  0825               	movf	(??_USART_print+2)^(0+128),w
  6922     1424  1283               	bcf	3,5	;RP0=0, select bank0
  6923     1425  1303               	bcf	3,6	;RP1=0, select bank0
  6924     1426  00FF               	movwf	btemp+1
  6925     1427  1683               	bsf	3,5	;RP0=1, select bank1
  6926     1428  1303               	bcf	3,6	;RP1=0, select bank1
  6927     1429  0824               	movf	(??_USART_print+1)^(0+128),w
  6928     142A  0084               	movwf	4
  6929     142B  1283               	bcf	3,5	;RP0=0, select bank0
  6930     142C  1303               	bcf	3,6	;RP1=0, select bank0
  6931     142D  160A  118A  2000  160A  118A  	fcall	stringtab
  6932     1432  160A  118A  225D  160A  118A  	fcall	_USART_send
  6933     1437                     l2874:
  6934                           
  6935                           ;USART.c: 52:     }
  6936     1437  3001               	movlw	1
  6937     1438  1683               	bsf	3,5	;RP0=1, select bank1
  6938     1439  1303               	bcf	3,6	;RP1=0, select bank1
  6939     143A  07A6               	addwf	USART_print@i^(0+128),f
  6940     143B  1803               	skipnc
  6941     143C  0AA7               	incf	(USART_print@i+1)^(0+128),f
  6942     143D  3000               	movlw	0
  6943     143E  07A7               	addwf	(USART_print@i+1)^(0+128),f
  6944     143F                     l2876:
  6945     143F  0826               	movf	USART_print@i^(0+128),w
  6946     1440  0721               	addwf	USART_print@string^(0+128),w
  6947     1441  00A4               	movwf	(??_USART_print+1)^(0+128)
  6948     1442  0822               	movf	(USART_print@string+1)^(0+128),w
  6949     1443  00A3               	movwf	??_USART_print^(0+128)
  6950     1444  1803               	skipnc
  6951     1445  0AA3               	incf	??_USART_print^(0+128),f
  6952     1446  1FA6               	btfss	USART_print@i^(0+128),7
  6953     1447  2C49               	goto	u4190
  6954     1448  03A3               	decf	??_USART_print^(0+128),f
  6955     1449                     u4190:
  6956     1449  1683               	bsf	3,5	;RP0=1, select bank1
  6957     144A  1303               	bcf	3,6	;RP1=0, select bank1
  6958     144B  0823               	movf	??_USART_print^(0+128),w
  6959     144C  00A5               	movwf	((??_USART_print+1)^(0+128)+1)
  6960     144D  0825               	movf	(??_USART_print+2)^(0+128),w
  6961     144E  1283               	bcf	3,5	;RP0=0, select bank0
  6962     144F  1303               	bcf	3,6	;RP1=0, select bank0
  6963     1450  00FF               	movwf	btemp+1
  6964     1451  1683               	bsf	3,5	;RP0=1, select bank1
  6965     1452  1303               	bcf	3,6	;RP1=0, select bank1
  6966     1453  0824               	movf	(??_USART_print+1)^(0+128),w
  6967     1454  0084               	movwf	4
  6968     1455  1283               	bcf	3,5	;RP0=0, select bank0
  6969     1456  1303               	bcf	3,6	;RP1=0, select bank0
  6970     1457  160A  118A  2000  160A  118A  	fcall	stringtab
  6971     145C  3A00               	xorlw	0
  6972     145D  1D03               	skipz
  6973     145E  2C60               	goto	u4201
  6974     145F  2C61               	goto	u4200
  6975     1460                     u4201:
  6976     1460  2C13               	goto	l2872
  6977     1461                     u4200:
  6978     1461                     l237:
  6979     1461  0008               	return
  6980     1462                     __end_of_USART_print:
  6981                           
  6982                           	psect	text27
  6983     125D                     __ptext27:	
  6984 ;; *************** function _USART_send *****************
  6985 ;; Defined at:
  6986 ;;		line 34 in file "USART.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  data            1    wreg     const unsigned char 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  data            1    0[BANK1 ] const unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7000 ;;      Params:         0       0       0       0       0
  7001 ;;      Locals:         0       0       1       0       0
  7002 ;;      Temps:          0       0       0       0       0
  7003 ;;      Totals:         0       0       1       0       0
  7004 ;;Total ram usage:        1 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 3
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_USART_print
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014     125D                     _USART_send:	
  7015                           ;psect for function _USART_send
  7016                           
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _USART_send: [wreg]
  7020                           ;USART_send@data stored from wreg
  7021     125D  1683               	bsf	3,5	;RP0=1, select bank1
  7022     125E  1303               	bcf	3,6	;RP1=0, select bank1
  7023     125F  00A0               	movwf	USART_send@data^(0+128)
  7024     1260                     l2536:
  7025     1260                     l225:	
  7026                           ;USART.c: 34: void USART_send(const char data);USART.c: 35: {;USART.c: 36:     while(!TR
      +                          MT);
  7027                           
  7028     1260  1C98               	btfss	24,1	;volatile
  7029     1261  2A63               	goto	u3451
  7030     1262  2A64               	goto	u3450
  7031     1263                     u3451:
  7032     1263  2A60               	goto	l225
  7033     1264                     u3450:
  7034     1264                     l2538:
  7035                           
  7036                           ;USART.c: 37:     TXREG = data;
  7037     1264  0820               	movf	USART_send@data^(0+128),w
  7038     1265  1283               	bcf	3,5	;RP0=0, select bank0
  7039     1266  1303               	bcf	3,6	;RP1=0, select bank0
  7040     1267  0099               	movwf	25	;volatile
  7041     1268                     l228:
  7042     1268  0008               	return
  7043     1269                     __end_of_USART_send:
  7044                           
  7045                           	psect	text28
  7046     0939                     __ptext28:	
  7047 ;; *************** function _isr *****************
  7048 ;; Defined at:
  7049 ;;		line 46 in file "LAB2.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      void 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7063 ;;      Params:         0       0       0       0       0
  7064 ;;      Locals:         0       0       0       0       0
  7065 ;;      Temps:          0       4       0       0       0
  7066 ;;      Totals:         0       4       0       0       0
  7067 ;;Total ram usage:        4 bytes
  7068 ;; Hardware stack levels used: 1
  7069 ;; Hardware stack levels required when called: 2
  7070 ;; This function calls:
  7071 ;;		___fldiv
  7072 ;;		_adc_get_channel
  7073 ;;		_adc_read
  7074 ;;		i1___flmul
  7075 ;;		i1___xxtofl
  7076 ;; This function is called by:
  7077 ;;		Interrupt level 1
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081     0939                     _isr:	
  7082                           ;psect for function _isr
  7083                           
  7084     0939                     i1l3270:
  7085                           
  7086                           ;LAB2.c: 50:     if(PIR1bits.ADIF){
  7087     0939  1F0C               	btfss	12,6	;volatile
  7088     093A  293C               	goto	u507_21
  7089     093B  293D               	goto	u507_20
  7090     093C                     u507_21:
  7091     093C  29B3               	goto	i1l3282
  7092     093D                     u507_20:
  7093     093D                     i1l3272:
  7094                           
  7095                           ;LAB2.c: 51:         if(adc_get_channel() == 0){
  7096     093D  160A  118A  2269  120A  158A  	fcall	_adc_get_channel
  7097     0942  0870               	movf	?_adc_get_channel,w
  7098     0943  0471               	iorwf	?_adc_get_channel+1,w
  7099     0944  1D03               	btfss	3,2
  7100     0945  2947               	goto	u508_21
  7101     0946  2948               	goto	u508_20
  7102     0947                     u508_21:
  7103     0947  29A6               	goto	i1l3278
  7104     0948                     u508_20:
  7105     0948                     i1l3274:
  7106                           
  7107                           ;LAB2.c: 52:             numero = adc_read();
  7108     0948  160A  118A  2253  120A  158A  	fcall	_adc_read
  7109     094D  0871               	movf	?_adc_read+1,w
  7110     094E  1283               	bcf	3,5	;RP0=0, select bank0
  7111     094F  1303               	bcf	3,6	;RP1=0, select bank0
  7112     0950  00DB               	movwf	_numero+1
  7113     0951  0870               	movf	?_adc_read,w
  7114     0952  00DA               	movwf	_numero
  7115     0953                     i1l3276:
  7116                           
  7117                           ;LAB2.c: 53:             volt = (float)numero*1.961/100;
  7118     0953  3042               	movlw	66
  7119     0954  00BD               	movwf	___fldiv@a+3
  7120     0955  30C8               	movlw	200
  7121     0956  00BC               	movwf	___fldiv@a+2
  7122     0957  3000               	movlw	0
  7123     0958  00BB               	movwf	___fldiv@a+1
  7124     0959  3000               	movlw	0
  7125     095A  00BA               	movwf	___fldiv@a
  7126     095B  303F               	movlw	63
  7127     095C  00A3               	movwf	i1___flmul@b+3
  7128     095D  30FB               	movlw	251
  7129     095E  00A2               	movwf	i1___flmul@b+2
  7130     095F  3002               	movlw	2
  7131     0960  00A1               	movwf	i1___flmul@b+1
  7132     0961  300C               	movlw	12
  7133     0962  00A0               	movwf	i1___flmul@b
  7134     0963  085A               	movf	_numero,w
  7135     0964  00F0               	movwf	i1___xxtofl@val
  7136     0965  085B               	movf	_numero+1,w
  7137     0966  00F1               	movwf	i1___xxtofl@val+1
  7138     0967  01F2               	clrf	i1___xxtofl@val+2
  7139     0968  01F3               	clrf	i1___xxtofl@val+3
  7140     0969  3000               	movlw	0
  7141     096A  120A  158A  21E7  120A  158A  	fcall	i1___xxtofl
  7142     096F  0873               	movf	?i1___xxtofl+3,w
  7143     0970  1283               	bcf	3,5	;RP0=0, select bank0
  7144     0971  1303               	bcf	3,6	;RP1=0, select bank0
  7145     0972  00A7               	movwf	i1___flmul@a+3
  7146     0973  0872               	movf	?i1___xxtofl+2,w
  7147     0974  00A6               	movwf	i1___flmul@a+2
  7148     0975  0871               	movf	?i1___xxtofl+1,w
  7149     0976  00A5               	movwf	i1___flmul@a+1
  7150     0977  0870               	movf	?i1___xxtofl,w
  7151     0978  00A4               	movwf	i1___flmul@a
  7152     0979  120A  118A  2390  120A  158A  	fcall	i1___flmul
  7153     097E  1283               	bcf	3,5	;RP0=0, select bank0
  7154     097F  1303               	bcf	3,6	;RP1=0, select bank0
  7155     0980  0823               	movf	?i1___flmul+3,w
  7156     0981  00C1               	movwf	___fldiv@b+3
  7157     0982  0822               	movf	?i1___flmul+2,w
  7158     0983  00C0               	movwf	___fldiv@b+2
  7159     0984  0821               	movf	?i1___flmul+1,w
  7160     0985  00BF               	movwf	___fldiv@b+1
  7161     0986  0820               	movf	?i1___flmul,w
  7162     0987  00BE               	movwf	___fldiv@b
  7163     0988  120A  158A  23D5  120A  158A  	fcall	___fldiv
  7164     098D  1283               	bcf	3,5	;RP0=0, select bank0
  7165     098E  1303               	bcf	3,6	;RP1=0, select bank0
  7166     098F  083D               	movf	?___fldiv+3,w
  7167     0990  1683               	bsf	3,5	;RP0=1, select bank1
  7168     0991  1303               	bcf	3,6	;RP1=0, select bank1
  7169     0992  00DD               	movwf	(_volt+3)^(0+128)
  7170     0993  1283               	bcf	3,5	;RP0=0, select bank0
  7171     0994  1303               	bcf	3,6	;RP1=0, select bank0
  7172     0995  083C               	movf	?___fldiv+2,w
  7173     0996  1683               	bsf	3,5	;RP0=1, select bank1
  7174     0997  1303               	bcf	3,6	;RP1=0, select bank1
  7175     0998  00DC               	movwf	(_volt+2)^(0+128)
  7176     0999  1283               	bcf	3,5	;RP0=0, select bank0
  7177     099A  1303               	bcf	3,6	;RP1=0, select bank0
  7178     099B  083B               	movf	?___fldiv+1,w
  7179     099C  1683               	bsf	3,5	;RP0=1, select bank1
  7180     099D  1303               	bcf	3,6	;RP1=0, select bank1
  7181     099E  00DB               	movwf	(_volt+1)^(0+128)
  7182     099F  1283               	bcf	3,5	;RP0=0, select bank0
  7183     09A0  1303               	bcf	3,6	;RP1=0, select bank0
  7184     09A1  083A               	movf	?___fldiv,w
  7185     09A2  1683               	bsf	3,5	;RP0=1, select bank1
  7186     09A3  1303               	bcf	3,6	;RP1=0, select bank1
  7187     09A4  00DA               	movwf	_volt^(0+128)
  7188                           
  7189                           ;LAB2.c: 55:         }
  7190     09A5  29B1               	goto	i1l3280
  7191     09A6                     i1l3278:
  7192                           
  7193                           ;LAB2.c: 58:             numero2 = adc_read();
  7194     09A6  160A  118A  2253  120A  158A  	fcall	_adc_read
  7195     09AB  0871               	movf	?_adc_read+1,w
  7196     09AC  1283               	bcf	3,5	;RP0=0, select bank0
  7197     09AD  1303               	bcf	3,6	;RP1=0, select bank0
  7198     09AE  00D9               	movwf	_numero2+1
  7199     09AF  0870               	movf	?_adc_read,w
  7200     09B0  00D8               	movwf	_numero2
  7201     09B1                     i1l3280:
  7202                           
  7203                           ;LAB2.c: 59:             PIR1bits.ADIF = 0;
  7204     09B1  1283               	bcf	3,5	;RP0=0, select bank0
  7205     09B2  130C               	bcf	12,6	;volatile
  7206     09B3                     i1l3282:
  7207                           
  7208                           ;LAB2.c: 61:     if (RCIF){
  7209     09B3  1E8C               	btfss	12,5	;volatile
  7210     09B4  29B6               	goto	u509_21
  7211     09B5  29B7               	goto	u509_20
  7212     09B6                     u509_21:
  7213     09B6  29DE               	goto	i1l92
  7214     09B7                     u509_20:
  7215     09B7                     i1l3284:
  7216                           
  7217                           ;LAB2.c: 62:         PORTD = 0;
  7218     09B7  0188               	clrf	8	;volatile
  7219     09B8                     i1l3286:
  7220                           
  7221                           ;LAB2.c: 63:         if (RCREG == '+'){
  7222     09B8  302B               	movlw	43
  7223     09B9  061A               	xorwf	26,w	;volatile
  7224     09BA  1D03               	btfss	3,2
  7225     09BB  29BD               	goto	u510_21
  7226     09BC  29BE               	goto	u510_20
  7227     09BD                     u510_21:
  7228     09BD  29C5               	goto	i1l3290
  7229     09BE                     u510_20:
  7230     09BE                     i1l3288:
  7231                           
  7232                           ;LAB2.c: 64:             cont++;
  7233     09BE  3001               	movlw	1
  7234     09BF  00D4               	movwf	??_isr
  7235     09C0  0854               	movf	??_isr,w
  7236     09C1  1683               	bsf	3,5	;RP0=1, select bank1
  7237     09C2  1303               	bcf	3,6	;RP1=0, select bank1
  7238     09C3  07E2               	addwf	_cont^(0+128),f
  7239                           
  7240                           ;LAB2.c: 65:         }
  7241     09C4  29DC               	goto	i1l3298
  7242     09C5                     i1l3290:
  7243     09C5  302D               	movlw	45
  7244     09C6  061A               	xorwf	26,w	;volatile
  7245     09C7  1D03               	btfss	3,2
  7246     09C8  29CA               	goto	u511_21
  7247     09C9  29CB               	goto	u511_20
  7248     09CA                     u511_21:
  7249     09CA  29D0               	goto	i1l3294
  7250     09CB                     u511_20:
  7251     09CB                     i1l3292:
  7252                           
  7253                           ;LAB2.c: 67:             cont--;
  7254     09CB  3001               	movlw	1
  7255     09CC  1683               	bsf	3,5	;RP0=1, select bank1
  7256     09CD  1303               	bcf	3,6	;RP1=0, select bank1
  7257     09CE  02E2               	subwf	_cont^(0+128),f
  7258                           
  7259                           ;LAB2.c: 68:         }
  7260     09CF  29DC               	goto	i1l3298
  7261     09D0                     i1l3294:
  7262     09D0  3031               	movlw	49
  7263     09D1  061A               	xorwf	26,w	;volatile
  7264     09D2  1D03               	btfss	3,2
  7265     09D3  29D5               	goto	u512_21
  7266     09D4  29D6               	goto	u512_20
  7267     09D5                     u512_21:
  7268     09D5  29DC               	goto	i1l3298
  7269     09D6                     u512_20:
  7270     09D6                     i1l3296:
  7271                           
  7272                           ;LAB2.c: 70:             x = 1;
  7273     09D6  3001               	movlw	1
  7274     09D7  1683               	bsf	3,5	;RP0=1, select bank1
  7275     09D8  1303               	bcf	3,6	;RP1=0, select bank1
  7276     09D9  00E0               	movwf	_x^(0+128)
  7277     09DA  3000               	movlw	0
  7278     09DB  00E1               	movwf	(_x^(0+128)+1)
  7279     09DC                     i1l3298:
  7280                           
  7281                           ;LAB2.c: 73:         RCIF = 0;
  7282     09DC  1283               	bcf	3,5	;RP0=0, select bank0
  7283     09DD  128C               	bcf	12,5	;volatile
  7284     09DE                     i1l92:
  7285     09DE  0857               	movf	??_isr+3,w
  7286     09DF  00FF               	movwf	btemp+1
  7287     09E0  0856               	movf	??_isr+2,w
  7288     09E1  008A               	movwf	10
  7289     09E2  0E55               	swapf	??_isr+1,w
  7290     09E3  0083               	movwf	3
  7291     09E4  0EFE               	swapf	btemp,f
  7292     09E5  0E7E               	swapf	btemp,w
  7293     09E6  0009               	retfie
  7294     09E7                     __end_of_isr:
  7295                           
  7296                           	psect	intentry
  7297     0004                     __pintentry:	
  7298                           ;incstack = 0
  7299                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7300                           
  7301     0004                     interrupt_function:
  7302     007E                     saved_w	set	btemp
  7303     0004  00FE               	movwf	btemp
  7304     0005  0E03               	swapf	3,w
  7305     0006  1283               	bcf	3,5	;RP0=0, select bank0
  7306     0007  1303               	bcf	3,6	;RP1=0, select bank0
  7307     0008  00D5               	movwf	??_isr+1
  7308     0009  080A               	movf	10,w
  7309     000A  00D6               	movwf	??_isr+2
  7310     000B  087F               	movf	btemp+1,w
  7311     000C  00D7               	movwf	??_isr+3
  7312     000D  120A  158A  2939   	ljmp	_isr
  7313                           
  7314                           	psect	text29
  7315     09E7                     __ptext29:	
  7316 ;; *************** function i1___xxtofl *****************
  7317 ;; Defined at:
  7318 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  sign            1    wreg     unsigned char 
  7321 ;;  val             4    0[COMMON] long 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  sign            1    8[COMMON] unsigned char 
  7324 ;;  arg             4   10[COMMON] unsigned long 
  7325 ;;  exp             1    9[COMMON] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  4    0[COMMON] unsigned char 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7335 ;;      Params:         4       0       0       0       0
  7336 ;;      Locals:         6       0       0       0       0
  7337 ;;      Temps:          4       0       0       0       0
  7338 ;;      Totals:        14       0       0       0       0
  7339 ;;Total ram usage:       14 bytes
  7340 ;; Hardware stack levels used: 1
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_isr
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348     09E7                     i1___xxtofl:	
  7349                           ;psect for function i1___xxtofl
  7350                           
  7351                           
  7352                           ;incstack = 0
  7353                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
  7354                           ;i1___xxtofl@sign stored from wreg
  7355     09E7  00F8               	movwf	i1___xxtofl@sign
  7356     09E8                     i1l3226:
  7357     09E8  0878               	movf	i1___xxtofl@sign,w
  7358     09E9  1903               	btfsc	3,2
  7359     09EA  29EC               	goto	u493_21
  7360     09EB  29ED               	goto	u493_20
  7361     09EC                     u493_21:
  7362     09EC  2A01               	goto	i1l3232
  7363     09ED                     u493_20:
  7364     09ED                     i1l3228:
  7365     09ED  1FF3               	btfss	i1___xxtofl@val+3,7
  7366     09EE  29F0               	goto	u494_21
  7367     09EF  29F1               	goto	u494_20
  7368     09F0                     u494_21:
  7369     09F0  2A01               	goto	i1l3232
  7370     09F1                     u494_20:
  7371     09F1                     i1l3230:
  7372     09F1  0970               	comf	i1___xxtofl@val,w
  7373     09F2  00FA               	movwf	i1___xxtofl@arg
  7374     09F3  0971               	comf	i1___xxtofl@val+1,w
  7375     09F4  00FB               	movwf	i1___xxtofl@arg+1
  7376     09F5  0972               	comf	i1___xxtofl@val+2,w
  7377     09F6  00FC               	movwf	i1___xxtofl@arg+2
  7378     09F7  0973               	comf	i1___xxtofl@val+3,w
  7379     09F8  00FD               	movwf	i1___xxtofl@arg+3
  7380     09F9  0AFA               	incf	i1___xxtofl@arg,f
  7381     09FA  1903               	skipnz
  7382     09FB  0AFB               	incf	i1___xxtofl@arg+1,f
  7383     09FC  1903               	skipnz
  7384     09FD  0AFC               	incf	i1___xxtofl@arg+2,f
  7385     09FE  1903               	skipnz
  7386     09FF  0AFD               	incf	i1___xxtofl@arg+3,f
  7387     0A00  2A09               	goto	i1l765
  7388     0A01                     i1l3232:
  7389     0A01  0873               	movf	i1___xxtofl@val+3,w
  7390     0A02  00FD               	movwf	i1___xxtofl@arg+3
  7391     0A03  0872               	movf	i1___xxtofl@val+2,w
  7392     0A04  00FC               	movwf	i1___xxtofl@arg+2
  7393     0A05  0871               	movf	i1___xxtofl@val+1,w
  7394     0A06  00FB               	movwf	i1___xxtofl@arg+1
  7395     0A07  0870               	movf	i1___xxtofl@val,w
  7396     0A08  00FA               	movwf	i1___xxtofl@arg
  7397     0A09                     i1l765:
  7398     0A09  0873               	movf	i1___xxtofl@val+3,w
  7399     0A0A  0472               	iorwf	i1___xxtofl@val+2,w
  7400     0A0B  0471               	iorwf	i1___xxtofl@val+1,w
  7401     0A0C  0470               	iorwf	i1___xxtofl@val,w
  7402     0A0D  1D03               	skipz
  7403     0A0E  2A10               	goto	u495_21
  7404     0A0F  2A11               	goto	u495_20
  7405     0A10                     u495_21:
  7406     0A10  2A1A               	goto	i1l3238
  7407     0A11                     u495_20:
  7408     0A11                     i1l3234:
  7409     0A11  3000               	movlw	0
  7410     0A12  00F3               	movwf	?i1___xxtofl+3
  7411     0A13  3000               	movlw	0
  7412     0A14  00F2               	movwf	?i1___xxtofl+2
  7413     0A15  3000               	movlw	0
  7414     0A16  00F1               	movwf	?i1___xxtofl+1
  7415     0A17  3000               	movlw	0
  7416     0A18  00F0               	movwf	?i1___xxtofl
  7417     0A19  2A9E               	goto	i1l767
  7418     0A1A                     i1l3238:
  7419     0A1A  3096               	movlw	150
  7420     0A1B  00F9               	movwf	i1___xxtofl@exp
  7421     0A1C  2A2A               	goto	i1l3242
  7422     0A1D                     i1l3240:
  7423     0A1D  3001               	movlw	1
  7424     0A1E  00F4               	movwf	??i1___xxtofl
  7425     0A1F  0874               	movf	??i1___xxtofl,w
  7426     0A20  07F9               	addwf	i1___xxtofl@exp,f
  7427     0A21  3001               	movlw	1
  7428     0A22                     u496_25:
  7429     0A22  1003               	clrc
  7430     0A23  0CFD               	rrf	i1___xxtofl@arg+3,f
  7431     0A24  0CFC               	rrf	i1___xxtofl@arg+2,f
  7432     0A25  0CFB               	rrf	i1___xxtofl@arg+1,f
  7433     0A26  0CFA               	rrf	i1___xxtofl@arg,f
  7434     0A27  3EFF               	addlw	-1
  7435     0A28  1D03               	skipz
  7436     0A29  2A22               	goto	u496_25
  7437     0A2A                     i1l3242:
  7438     0A2A  30FE               	movlw	254
  7439     0A2B  057D               	andwf	i1___xxtofl@arg+3,w
  7440     0A2C  1D03               	btfss	3,2
  7441     0A2D  2A2F               	goto	u497_21
  7442     0A2E  2A30               	goto	u497_20
  7443     0A2F                     u497_21:
  7444     0A2F  2A1D               	goto	i1l3240
  7445     0A30                     u497_20:
  7446     0A30  2A4C               	goto	i1l771
  7447     0A31                     i1l3244:
  7448     0A31  3001               	movlw	1
  7449     0A32  00F4               	movwf	??i1___xxtofl
  7450     0A33  0874               	movf	??i1___xxtofl,w
  7451     0A34  07F9               	addwf	i1___xxtofl@exp,f
  7452     0A35                     i1l3246:
  7453     0A35  3001               	movlw	1
  7454     0A36  07FA               	addwf	i1___xxtofl@arg,f
  7455     0A37  3000               	movlw	0
  7456     0A38  1803               	skipnc
  7457     0A39  3001               	movlw	1
  7458     0A3A  07FB               	addwf	i1___xxtofl@arg+1,f
  7459     0A3B  3000               	movlw	0
  7460     0A3C  1803               	skipnc
  7461     0A3D  3001               	movlw	1
  7462     0A3E  07FC               	addwf	i1___xxtofl@arg+2,f
  7463     0A3F  3000               	movlw	0
  7464     0A40  1803               	skipnc
  7465     0A41  3001               	movlw	1
  7466     0A42  07FD               	addwf	i1___xxtofl@arg+3,f
  7467     0A43                     i1l3248:
  7468     0A43  3001               	movlw	1
  7469     0A44                     u498_25:
  7470     0A44  1003               	clrc
  7471     0A45  0CFD               	rrf	i1___xxtofl@arg+3,f
  7472     0A46  0CFC               	rrf	i1___xxtofl@arg+2,f
  7473     0A47  0CFB               	rrf	i1___xxtofl@arg+1,f
  7474     0A48  0CFA               	rrf	i1___xxtofl@arg,f
  7475     0A49  3EFF               	addlw	-1
  7476     0A4A  1D03               	skipz
  7477     0A4B  2A44               	goto	u498_25
  7478     0A4C                     i1l771:
  7479     0A4C  30FF               	movlw	255
  7480     0A4D  057D               	andwf	i1___xxtofl@arg+3,w
  7481     0A4E  1D03               	btfss	3,2
  7482     0A4F  2A51               	goto	u499_21
  7483     0A50  2A52               	goto	u499_20
  7484     0A51                     u499_21:
  7485     0A51  2A31               	goto	i1l3244
  7486     0A52                     u499_20:
  7487     0A52  2A5E               	goto	i1l3252
  7488     0A53                     i1l3250:
  7489     0A53  3001               	movlw	1
  7490     0A54  02F9               	subwf	i1___xxtofl@exp,f
  7491     0A55  3001               	movlw	1
  7492     0A56  00F4               	movwf	??i1___xxtofl
  7493     0A57                     u500_25:
  7494     0A57  1003               	clrc
  7495     0A58  0DFA               	rlf	i1___xxtofl@arg,f
  7496     0A59  0DFB               	rlf	i1___xxtofl@arg+1,f
  7497     0A5A  0DFC               	rlf	i1___xxtofl@arg+2,f
  7498     0A5B  0DFD               	rlf	i1___xxtofl@arg+3,f
  7499     0A5C  0BF4               	decfsz	??i1___xxtofl,f
  7500     0A5D  2A57               	goto	u500_25
  7501     0A5E                     i1l3252:
  7502     0A5E  1BFC               	btfsc	i1___xxtofl@arg+2,7
  7503     0A5F  2A61               	goto	u501_21
  7504     0A60  2A62               	goto	u501_20
  7505     0A61                     u501_21:
  7506     0A61  2A68               	goto	i1l778
  7507     0A62                     u501_20:
  7508     0A62                     i1l3254:
  7509     0A62  3002               	movlw	2
  7510     0A63  0279               	subwf	i1___xxtofl@exp,w
  7511     0A64  1803               	skipnc
  7512     0A65  2A67               	goto	u502_21
  7513     0A66  2A68               	goto	u502_20
  7514     0A67                     u502_21:
  7515     0A67  2A53               	goto	i1l3250
  7516     0A68                     u502_20:
  7517     0A68                     i1l778:
  7518     0A68  1879               	btfsc	i1___xxtofl@exp,0
  7519     0A69  2A6B               	goto	u503_21
  7520     0A6A  2A6C               	goto	u503_20
  7521     0A6B                     u503_21:
  7522     0A6B  2A74               	goto	i1l779
  7523     0A6C                     u503_20:
  7524     0A6C                     i1l3256:
  7525     0A6C  30FF               	movlw	255
  7526     0A6D  05FA               	andwf	i1___xxtofl@arg,f
  7527     0A6E  30FF               	movlw	255
  7528     0A6F  05FB               	andwf	i1___xxtofl@arg+1,f
  7529     0A70  307F               	movlw	127
  7530     0A71  05FC               	andwf	i1___xxtofl@arg+2,f
  7531     0A72  30FF               	movlw	255
  7532     0A73  05FD               	andwf	i1___xxtofl@arg+3,f
  7533     0A74                     i1l779:
  7534     0A74  1003               	clrc
  7535     0A75  0CF9               	rrf	i1___xxtofl@exp,f
  7536     0A76                     i1l3258:
  7537     0A76  0879               	movf	i1___xxtofl@exp,w
  7538     0A77  00F4               	movwf	??i1___xxtofl
  7539     0A78  01F5               	clrf	??i1___xxtofl+1
  7540     0A79  01F6               	clrf	??i1___xxtofl+2
  7541     0A7A  01F7               	clrf	??i1___xxtofl+3
  7542     0A7B  3018               	movlw	24
  7543     0A7C                     u504_25:
  7544     0A7C  1003               	clrc
  7545     0A7D  0DF4               	rlf	??i1___xxtofl,f
  7546     0A7E  0DF5               	rlf	??i1___xxtofl+1,f
  7547     0A7F  0DF6               	rlf	??i1___xxtofl+2,f
  7548     0A80  0DF7               	rlf	??i1___xxtofl+3,f
  7549     0A81                     u504_20:
  7550     0A81  3EFF               	addlw	-1
  7551     0A82  1D03               	skipz
  7552     0A83  2A7C               	goto	u504_25
  7553     0A84  0874               	movf	??i1___xxtofl,w
  7554     0A85  04FA               	iorwf	i1___xxtofl@arg,f
  7555     0A86  0875               	movf	??i1___xxtofl+1,w
  7556     0A87  04FB               	iorwf	i1___xxtofl@arg+1,f
  7557     0A88  0876               	movf	??i1___xxtofl+2,w
  7558     0A89  04FC               	iorwf	i1___xxtofl@arg+2,f
  7559     0A8A  0877               	movf	??i1___xxtofl+3,w
  7560     0A8B  04FD               	iorwf	i1___xxtofl@arg+3,f
  7561     0A8C                     i1l3260:
  7562     0A8C  0878               	movf	i1___xxtofl@sign,w
  7563     0A8D  1903               	btfsc	3,2
  7564     0A8E  2A90               	goto	u505_21
  7565     0A8F  2A91               	goto	u505_20
  7566     0A90                     u505_21:
  7567     0A90  2A96               	goto	i1l3266
  7568     0A91                     u505_20:
  7569     0A91                     i1l3262:
  7570     0A91  1FF3               	btfss	i1___xxtofl@val+3,7
  7571     0A92  2A94               	goto	u506_21
  7572     0A93  2A95               	goto	u506_20
  7573     0A94                     u506_21:
  7574     0A94  2A96               	goto	i1l3266
  7575     0A95                     u506_20:
  7576     0A95                     i1l3264:
  7577     0A95  17FD               	bsf	i1___xxtofl@arg+3,7
  7578     0A96                     i1l3266:
  7579     0A96  087D               	movf	i1___xxtofl@arg+3,w
  7580     0A97  00F3               	movwf	?i1___xxtofl+3
  7581     0A98  087C               	movf	i1___xxtofl@arg+2,w
  7582     0A99  00F2               	movwf	?i1___xxtofl+2
  7583     0A9A  087B               	movf	i1___xxtofl@arg+1,w
  7584     0A9B  00F1               	movwf	?i1___xxtofl+1
  7585     0A9C  087A               	movf	i1___xxtofl@arg,w
  7586     0A9D  00F0               	movwf	?i1___xxtofl
  7587     0A9E                     i1l767:
  7588     0A9E  0008               	return
  7589     0A9F                     __end_ofi1___xxtofl:
  7590                           
  7591                           	psect	text30
  7592     0390                     __ptext30:	
  7593 ;; *************** function i1___flmul *****************
  7594 ;; Defined at:
  7595 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  b               4    0[BANK0 ] unsigned char 
  7598 ;;  a               4    4[BANK0 ] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  prod            4   20[BANK0 ] struct .
  7601 ;;  grs             4   14[BANK0 ] unsigned long 
  7602 ;;  temp            2   24[BANK0 ] struct .
  7603 ;;  bexp            1   19[BANK0 ] unsigned char 
  7604 ;;  aexp            1   18[BANK0 ] unsigned char 
  7605 ;;  sign            1   13[BANK0 ] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  4    0[BANK0 ] unsigned char 
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7615 ;;      Params:         0       8       0       0       0
  7616 ;;      Locals:         0      13       0       0       0
  7617 ;;      Temps:          0       5       0       0       0
  7618 ;;      Totals:         0      26       0       0       0
  7619 ;;Total ram usage:       26 bytes
  7620 ;; Hardware stack levels used: 1
  7621 ;; Hardware stack levels required when called: 1
  7622 ;; This function calls:
  7623 ;;		i1__Umul8_16
  7624 ;; This function is called by:
  7625 ;;		_isr
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629     0390                     i1___flmul:	
  7630                           ;psect for function i1___flmul
  7631                           
  7632     0390                     i1l3086:	
  7633                           ;incstack = 0
  7634                           ; Regs used in i1___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7635                           
  7636     0390  1283               	bcf	3,5	;RP0=0, select bank0
  7637     0391  1303               	bcf	3,6	;RP1=0, select bank0
  7638     0392  0823               	movf	i1___flmul@b+3,w
  7639     0393  3980               	andlw	128
  7640     0394  00AD               	movwf	i1___flmul@sign
  7641     0395                     i1l3088:
  7642     0395  0823               	movf	i1___flmul@b+3,w
  7643     0396  00A8               	movwf	??i1___flmul
  7644     0397  0728               	addwf	??i1___flmul,w
  7645     0398  00B3               	movwf	i1___flmul@bexp
  7646     0399                     i1l3090:
  7647     0399  1FA2               	btfss	i1___flmul@b+2,7
  7648     039A  2B9C               	goto	u456_21
  7649     039B  2B9D               	goto	u456_20
  7650     039C                     u456_21:
  7651     039C  2B9E               	goto	i1l3094
  7652     039D                     u456_20:
  7653     039D                     i1l3092:
  7654     039D  1433               	bsf	i1___flmul@bexp,0
  7655     039E                     i1l3094:
  7656     039E  0833               	movf	i1___flmul@bexp,w
  7657     039F  1903               	btfsc	3,2
  7658     03A0  2BA2               	goto	u457_21
  7659     03A1  2BA3               	goto	u457_20
  7660     03A2                     u457_21:
  7661     03A2  2BB2               	goto	i1l3102
  7662     03A3                     u457_20:
  7663     03A3                     i1l3096:
  7664     03A3  0A33               	incf	i1___flmul@bexp,w
  7665     03A4  1D03               	btfss	3,2
  7666     03A5  2BA7               	goto	u458_21
  7667     03A6  2BA8               	goto	u458_20
  7668     03A7                     u458_21:
  7669     03A7  2BB0               	goto	i1l3100
  7670     03A8                     u458_20:
  7671     03A8                     i1l3098:
  7672     03A8  3000               	movlw	0
  7673     03A9  00A3               	movwf	i1___flmul@b+3
  7674     03AA  3000               	movlw	0
  7675     03AB  00A2               	movwf	i1___flmul@b+2
  7676     03AC  3000               	movlw	0
  7677     03AD  00A1               	movwf	i1___flmul@b+1
  7678     03AE  3000               	movlw	0
  7679     03AF  00A0               	movwf	i1___flmul@b
  7680     03B0                     i1l3100:
  7681     03B0  17A2               	bsf	i1___flmul@b+2,7
  7682     03B1  2BBA               	goto	i1l3104
  7683     03B2                     i1l3102:
  7684     03B2  3000               	movlw	0
  7685     03B3  00A3               	movwf	i1___flmul@b+3
  7686     03B4  3000               	movlw	0
  7687     03B5  00A2               	movwf	i1___flmul@b+2
  7688     03B6  3000               	movlw	0
  7689     03B7  00A1               	movwf	i1___flmul@b+1
  7690     03B8  3000               	movlw	0
  7691     03B9  00A0               	movwf	i1___flmul@b
  7692     03BA                     i1l3104:
  7693     03BA  0827               	movf	i1___flmul@a+3,w
  7694     03BB  3980               	andlw	128
  7695     03BC  00A8               	movwf	??i1___flmul
  7696     03BD  0828               	movf	??i1___flmul,w
  7697     03BE  06AD               	xorwf	i1___flmul@sign,f
  7698     03BF                     i1l3106:
  7699     03BF  0827               	movf	i1___flmul@a+3,w
  7700     03C0  00A8               	movwf	??i1___flmul
  7701     03C1  0728               	addwf	??i1___flmul,w
  7702     03C2  00B2               	movwf	i1___flmul@aexp
  7703     03C3                     i1l3108:
  7704     03C3  1FA6               	btfss	i1___flmul@a+2,7
  7705     03C4  2BC6               	goto	u459_21
  7706     03C5  2BC7               	goto	u459_20
  7707     03C6                     u459_21:
  7708     03C6  2BC8               	goto	i1l3112
  7709     03C7                     u459_20:
  7710     03C7                     i1l3110:
  7711     03C7  1432               	bsf	i1___flmul@aexp,0
  7712     03C8                     i1l3112:
  7713     03C8  0832               	movf	i1___flmul@aexp,w
  7714     03C9  1903               	btfsc	3,2
  7715     03CA  2BCC               	goto	u460_21
  7716     03CB  2BCD               	goto	u460_20
  7717     03CC                     u460_21:
  7718     03CC  2BDC               	goto	i1l3120
  7719     03CD                     u460_20:
  7720     03CD                     i1l3114:
  7721     03CD  0A32               	incf	i1___flmul@aexp,w
  7722     03CE  1D03               	btfss	3,2
  7723     03CF  2BD1               	goto	u461_21
  7724     03D0  2BD2               	goto	u461_20
  7725     03D1                     u461_21:
  7726     03D1  2BDA               	goto	i1l3118
  7727     03D2                     u461_20:
  7728     03D2                     i1l3116:
  7729     03D2  3000               	movlw	0
  7730     03D3  00A7               	movwf	i1___flmul@a+3
  7731     03D4  3000               	movlw	0
  7732     03D5  00A6               	movwf	i1___flmul@a+2
  7733     03D6  3000               	movlw	0
  7734     03D7  00A5               	movwf	i1___flmul@a+1
  7735     03D8  3000               	movlw	0
  7736     03D9  00A4               	movwf	i1___flmul@a
  7737     03DA                     i1l3118:
  7738     03DA  17A6               	bsf	i1___flmul@a+2,7
  7739     03DB  2BE4               	goto	i1l3122
  7740     03DC                     i1l3120:
  7741     03DC  3000               	movlw	0
  7742     03DD  00A7               	movwf	i1___flmul@a+3
  7743     03DE  3000               	movlw	0
  7744     03DF  00A6               	movwf	i1___flmul@a+2
  7745     03E0  3000               	movlw	0
  7746     03E1  00A5               	movwf	i1___flmul@a+1
  7747     03E2  3000               	movlw	0
  7748     03E3  00A4               	movwf	i1___flmul@a
  7749     03E4                     i1l3122:
  7750     03E4  0832               	movf	i1___flmul@aexp,w
  7751     03E5  1903               	btfsc	3,2
  7752     03E6  2BE8               	goto	u462_21
  7753     03E7  2BE9               	goto	u462_20
  7754     03E8                     u462_21:
  7755     03E8  2BEE               	goto	i1l3126
  7756     03E9                     u462_20:
  7757     03E9                     i1l3124:
  7758     03E9  0833               	movf	i1___flmul@bexp,w
  7759     03EA  1D03               	btfss	3,2
  7760     03EB  2BED               	goto	u463_21
  7761     03EC  2BEE               	goto	u463_20
  7762     03ED                     u463_21:
  7763     03ED  2BF7               	goto	i1l3130
  7764     03EE                     u463_20:
  7765     03EE                     i1l3126:
  7766     03EE  3000               	movlw	0
  7767     03EF  00A3               	movwf	?i1___flmul+3
  7768     03F0  3000               	movlw	0
  7769     03F1  00A2               	movwf	?i1___flmul+2
  7770     03F2  3000               	movlw	0
  7771     03F3  00A1               	movwf	?i1___flmul+1
  7772     03F4  3000               	movlw	0
  7773     03F5  00A0               	movwf	?i1___flmul
  7774     03F6  2ED4               	goto	i1l721
  7775     03F7                     i1l3130:
  7776     03F7  0820               	movf	i1___flmul@b,w
  7777     03F8  00F0               	movwf	i1__Umul8_16@multiplicand
  7778     03F9  0826               	movf	i1___flmul@a+2,w
  7779     03FA  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  7780     03FF  0871               	movf	?i1__Umul8_16+1,w
  7781     0400  1283               	bcf	3,5	;RP0=0, select bank0
  7782     0401  1303               	bcf	3,6	;RP1=0, select bank0
  7783     0402  00B9               	movwf	i1___flmul@temp+1
  7784     0403  0870               	movf	?i1__Umul8_16,w
  7785     0404  00B8               	movwf	i1___flmul@temp
  7786     0405                     i1l3132:
  7787     0405  0838               	movf	i1___flmul@temp,w
  7788     0406  00A8               	movwf	??i1___flmul
  7789     0407  01A9               	clrf	??i1___flmul+1
  7790     0408  01AA               	clrf	??i1___flmul+2
  7791     0409  01AB               	clrf	??i1___flmul+3
  7792     040A  082B               	movf	??i1___flmul+3,w
  7793     040B  00B1               	movwf	i1___flmul@grs+3
  7794     040C  082A               	movf	??i1___flmul+2,w
  7795     040D  00B0               	movwf	i1___flmul@grs+2
  7796     040E  0829               	movf	??i1___flmul+1,w
  7797     040F  00AF               	movwf	i1___flmul@grs+1
  7798     0410  0828               	movf	??i1___flmul,w
  7799     0411  00AE               	movwf	i1___flmul@grs
  7800     0412                     i1l3134:
  7801     0412  0839               	movf	i1___flmul@temp+1,w
  7802     0413  00A8               	movwf	??i1___flmul
  7803     0414  01A9               	clrf	??i1___flmul+1
  7804     0415  01AA               	clrf	??i1___flmul+2
  7805     0416  01AB               	clrf	??i1___flmul+3
  7806     0417  082B               	movf	??i1___flmul+3,w
  7807     0418  00B7               	movwf	i1___flmul@prod+3
  7808     0419  082A               	movf	??i1___flmul+2,w
  7809     041A  00B6               	movwf	i1___flmul@prod+2
  7810     041B  0829               	movf	??i1___flmul+1,w
  7811     041C  00B5               	movwf	i1___flmul@prod+1
  7812     041D  0828               	movf	??i1___flmul,w
  7813     041E  00B4               	movwf	i1___flmul@prod
  7814     041F  0821               	movf	i1___flmul@b+1,w
  7815     0420  00F0               	movwf	i1__Umul8_16@multiplicand
  7816     0421  0825               	movf	i1___flmul@a+1,w
  7817     0422  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  7818     0427  0871               	movf	?i1__Umul8_16+1,w
  7819     0428  1283               	bcf	3,5	;RP0=0, select bank0
  7820     0429  1303               	bcf	3,6	;RP1=0, select bank0
  7821     042A  00B9               	movwf	i1___flmul@temp+1
  7822     042B  0870               	movf	?i1__Umul8_16,w
  7823     042C  00B8               	movwf	i1___flmul@temp
  7824     042D                     i1l3136:
  7825     042D  0838               	movf	i1___flmul@temp,w
  7826     042E  00A8               	movwf	??i1___flmul
  7827     042F  01A9               	clrf	??i1___flmul+1
  7828     0430  01AA               	clrf	??i1___flmul+2
  7829     0431  01AB               	clrf	??i1___flmul+3
  7830     0432  0828               	movf	??i1___flmul,w
  7831     0433  07AE               	addwf	i1___flmul@grs,f
  7832     0434  0829               	movf	??i1___flmul+1,w
  7833     0435  1103               	clrz
  7834     0436  1803               	skipnc
  7835     0437  3E01               	addlw	1
  7836     0438  1903               	skipnz
  7837     0439  2C3B               	goto	u464_21
  7838     043A  07AF               	addwf	i1___flmul@grs+1,f
  7839     043B                     u464_21:
  7840     043B  082A               	movf	??i1___flmul+2,w
  7841     043C  1103               	clrz
  7842     043D  1803               	skipnc
  7843     043E  3E01               	addlw	1
  7844     043F  1903               	skipnz
  7845     0440  2C42               	goto	u464_22
  7846     0441  07B0               	addwf	i1___flmul@grs+2,f
  7847     0442                     u464_22:
  7848     0442  082B               	movf	??i1___flmul+3,w
  7849     0443  1103               	clrz
  7850     0444  1803               	skipnc
  7851     0445  3E01               	addlw	1
  7852     0446  1903               	skipnz
  7853     0447  2C49               	goto	u464_23
  7854     0448  07B1               	addwf	i1___flmul@grs+3,f
  7855     0449                     u464_23:
  7856     0449                     i1l3138:
  7857     0449  0839               	movf	i1___flmul@temp+1,w
  7858     044A  00A8               	movwf	??i1___flmul
  7859     044B  01A9               	clrf	??i1___flmul+1
  7860     044C  01AA               	clrf	??i1___flmul+2
  7861     044D  01AB               	clrf	??i1___flmul+3
  7862     044E  0828               	movf	??i1___flmul,w
  7863     044F  07B4               	addwf	i1___flmul@prod,f
  7864     0450  0829               	movf	??i1___flmul+1,w
  7865     0451  1103               	clrz
  7866     0452  1803               	skipnc
  7867     0453  3E01               	addlw	1
  7868     0454  1903               	skipnz
  7869     0455  2C57               	goto	u465_21
  7870     0456  07B5               	addwf	i1___flmul@prod+1,f
  7871     0457                     u465_21:
  7872     0457  082A               	movf	??i1___flmul+2,w
  7873     0458  1103               	clrz
  7874     0459  1803               	skipnc
  7875     045A  3E01               	addlw	1
  7876     045B  1903               	skipnz
  7877     045C  2C5E               	goto	u465_22
  7878     045D  07B6               	addwf	i1___flmul@prod+2,f
  7879     045E                     u465_22:
  7880     045E  082B               	movf	??i1___flmul+3,w
  7881     045F  1103               	clrz
  7882     0460  1803               	skipnc
  7883     0461  3E01               	addlw	1
  7884     0462  1903               	skipnz
  7885     0463  2C65               	goto	u465_23
  7886     0464  07B7               	addwf	i1___flmul@prod+3,f
  7887     0465                     u465_23:
  7888     0465  0822               	movf	i1___flmul@b+2,w
  7889     0466  00F0               	movwf	i1__Umul8_16@multiplicand
  7890     0467  0824               	movf	i1___flmul@a,w
  7891     0468  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  7892     046D  0871               	movf	?i1__Umul8_16+1,w
  7893     046E  1283               	bcf	3,5	;RP0=0, select bank0
  7894     046F  1303               	bcf	3,6	;RP1=0, select bank0
  7895     0470  00B9               	movwf	i1___flmul@temp+1
  7896     0471  0870               	movf	?i1__Umul8_16,w
  7897     0472  00B8               	movwf	i1___flmul@temp
  7898     0473                     i1l3140:
  7899     0473  0838               	movf	i1___flmul@temp,w
  7900     0474  00A8               	movwf	??i1___flmul
  7901     0475  01A9               	clrf	??i1___flmul+1
  7902     0476  01AA               	clrf	??i1___flmul+2
  7903     0477  01AB               	clrf	??i1___flmul+3
  7904     0478  0828               	movf	??i1___flmul,w
  7905     0479  07AE               	addwf	i1___flmul@grs,f
  7906     047A  0829               	movf	??i1___flmul+1,w
  7907     047B  1103               	clrz
  7908     047C  1803               	skipnc
  7909     047D  3E01               	addlw	1
  7910     047E  1903               	skipnz
  7911     047F  2C81               	goto	u466_21
  7912     0480  07AF               	addwf	i1___flmul@grs+1,f
  7913     0481                     u466_21:
  7914     0481  082A               	movf	??i1___flmul+2,w
  7915     0482  1103               	clrz
  7916     0483  1803               	skipnc
  7917     0484  3E01               	addlw	1
  7918     0485  1903               	skipnz
  7919     0486  2C88               	goto	u466_22
  7920     0487  07B0               	addwf	i1___flmul@grs+2,f
  7921     0488                     u466_22:
  7922     0488  082B               	movf	??i1___flmul+3,w
  7923     0489  1103               	clrz
  7924     048A  1803               	skipnc
  7925     048B  3E01               	addlw	1
  7926     048C  1903               	skipnz
  7927     048D  2C8F               	goto	u466_23
  7928     048E  07B1               	addwf	i1___flmul@grs+3,f
  7929     048F                     u466_23:
  7930     048F                     i1l3142:
  7931     048F  0839               	movf	i1___flmul@temp+1,w
  7932     0490  00A8               	movwf	??i1___flmul
  7933     0491  01A9               	clrf	??i1___flmul+1
  7934     0492  01AA               	clrf	??i1___flmul+2
  7935     0493  01AB               	clrf	??i1___flmul+3
  7936     0494  0828               	movf	??i1___flmul,w
  7937     0495  07B4               	addwf	i1___flmul@prod,f
  7938     0496  0829               	movf	??i1___flmul+1,w
  7939     0497  1103               	clrz
  7940     0498  1803               	skipnc
  7941     0499  3E01               	addlw	1
  7942     049A  1903               	skipnz
  7943     049B  2C9D               	goto	u467_21
  7944     049C  07B5               	addwf	i1___flmul@prod+1,f
  7945     049D                     u467_21:
  7946     049D  082A               	movf	??i1___flmul+2,w
  7947     049E  1103               	clrz
  7948     049F  1803               	skipnc
  7949     04A0  3E01               	addlw	1
  7950     04A1  1903               	skipnz
  7951     04A2  2CA4               	goto	u467_22
  7952     04A3  07B6               	addwf	i1___flmul@prod+2,f
  7953     04A4                     u467_22:
  7954     04A4  082B               	movf	??i1___flmul+3,w
  7955     04A5  1103               	clrz
  7956     04A6  1803               	skipnc
  7957     04A7  3E01               	addlw	1
  7958     04A8  1903               	skipnz
  7959     04A9  2CAB               	goto	u467_23
  7960     04AA  07B7               	addwf	i1___flmul@prod+3,f
  7961     04AB                     u467_23:
  7962     04AB                     i1l3144:
  7963     04AB  3008               	movlw	8
  7964     04AC  00A8               	movwf	??i1___flmul
  7965     04AD                     u468_25:
  7966     04AD  1003               	clrc
  7967     04AE  0DAE               	rlf	i1___flmul@grs,f
  7968     04AF  0DAF               	rlf	i1___flmul@grs+1,f
  7969     04B0  0DB0               	rlf	i1___flmul@grs+2,f
  7970     04B1  0DB1               	rlf	i1___flmul@grs+3,f
  7971     04B2  0BA8               	decfsz	??i1___flmul,f
  7972     04B3  2CAD               	goto	u468_25
  7973     04B4                     i1l3146:
  7974     04B4  0821               	movf	i1___flmul@b+1,w
  7975     04B5  00F0               	movwf	i1__Umul8_16@multiplicand
  7976     04B6  0824               	movf	i1___flmul@a,w
  7977     04B7  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  7978     04BC  0871               	movf	?i1__Umul8_16+1,w
  7979     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  7980     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  7981     04BF  00B9               	movwf	i1___flmul@temp+1
  7982     04C0  0870               	movf	?i1__Umul8_16,w
  7983     04C1  00B8               	movwf	i1___flmul@temp
  7984     04C2                     i1l3148:
  7985     04C2  0838               	movf	i1___flmul@temp,w
  7986     04C3  00A8               	movwf	??i1___flmul
  7987     04C4  0839               	movf	i1___flmul@temp+1,w
  7988     04C5  00A9               	movwf	??i1___flmul+1
  7989     04C6  01AA               	clrf	??i1___flmul+2
  7990     04C7  01AB               	clrf	??i1___flmul+3
  7991     04C8  0828               	movf	??i1___flmul,w
  7992     04C9  07AE               	addwf	i1___flmul@grs,f
  7993     04CA  0829               	movf	??i1___flmul+1,w
  7994     04CB  1103               	clrz
  7995     04CC  1803               	skipnc
  7996     04CD  3E01               	addlw	1
  7997     04CE  1903               	skipnz
  7998     04CF  2CD1               	goto	u469_21
  7999     04D0  07AF               	addwf	i1___flmul@grs+1,f
  8000     04D1                     u469_21:
  8001     04D1  082A               	movf	??i1___flmul+2,w
  8002     04D2  1103               	clrz
  8003     04D3  1803               	skipnc
  8004     04D4  3E01               	addlw	1
  8005     04D5  1903               	skipnz
  8006     04D6  2CD8               	goto	u469_22
  8007     04D7  07B0               	addwf	i1___flmul@grs+2,f
  8008     04D8                     u469_22:
  8009     04D8  082B               	movf	??i1___flmul+3,w
  8010     04D9  1103               	clrz
  8011     04DA  1803               	skipnc
  8012     04DB  3E01               	addlw	1
  8013     04DC  1903               	skipnz
  8014     04DD  2CDF               	goto	u469_23
  8015     04DE  07B1               	addwf	i1___flmul@grs+3,f
  8016     04DF                     u469_23:
  8017     04DF                     i1l3150:
  8018     04DF  0820               	movf	i1___flmul@b,w
  8019     04E0  00F0               	movwf	i1__Umul8_16@multiplicand
  8020     04E1  0825               	movf	i1___flmul@a+1,w
  8021     04E2  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  8022     04E7  0871               	movf	?i1__Umul8_16+1,w
  8023     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  8024     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  8025     04EA  00B9               	movwf	i1___flmul@temp+1
  8026     04EB  0870               	movf	?i1__Umul8_16,w
  8027     04EC  00B8               	movwf	i1___flmul@temp
  8028     04ED                     i1l3152:
  8029     04ED  0838               	movf	i1___flmul@temp,w
  8030     04EE  00A8               	movwf	??i1___flmul
  8031     04EF  0839               	movf	i1___flmul@temp+1,w
  8032     04F0  00A9               	movwf	??i1___flmul+1
  8033     04F1  01AA               	clrf	??i1___flmul+2
  8034     04F2  01AB               	clrf	??i1___flmul+3
  8035     04F3  0828               	movf	??i1___flmul,w
  8036     04F4  07AE               	addwf	i1___flmul@grs,f
  8037     04F5  0829               	movf	??i1___flmul+1,w
  8038     04F6  1103               	clrz
  8039     04F7  1803               	skipnc
  8040     04F8  3E01               	addlw	1
  8041     04F9  1903               	skipnz
  8042     04FA  2CFC               	goto	u470_21
  8043     04FB  07AF               	addwf	i1___flmul@grs+1,f
  8044     04FC                     u470_21:
  8045     04FC  082A               	movf	??i1___flmul+2,w
  8046     04FD  1103               	clrz
  8047     04FE  1803               	skipnc
  8048     04FF  3E01               	addlw	1
  8049     0500  1903               	skipnz
  8050     0501  2D03               	goto	u470_22
  8051     0502  07B0               	addwf	i1___flmul@grs+2,f
  8052     0503                     u470_22:
  8053     0503  082B               	movf	??i1___flmul+3,w
  8054     0504  1103               	clrz
  8055     0505  1803               	skipnc
  8056     0506  3E01               	addlw	1
  8057     0507  1903               	skipnz
  8058     0508  2D0A               	goto	u470_23
  8059     0509  07B1               	addwf	i1___flmul@grs+3,f
  8060     050A                     u470_23:
  8061     050A                     i1l3154:
  8062     050A  3008               	movlw	8
  8063     050B  00A8               	movwf	??i1___flmul
  8064     050C                     u471_25:
  8065     050C  1003               	clrc
  8066     050D  0DAE               	rlf	i1___flmul@grs,f
  8067     050E  0DAF               	rlf	i1___flmul@grs+1,f
  8068     050F  0DB0               	rlf	i1___flmul@grs+2,f
  8069     0510  0DB1               	rlf	i1___flmul@grs+3,f
  8070     0511  0BA8               	decfsz	??i1___flmul,f
  8071     0512  2D0C               	goto	u471_25
  8072     0513  0820               	movf	i1___flmul@b,w
  8073     0514  00F0               	movwf	i1__Umul8_16@multiplicand
  8074     0515  0824               	movf	i1___flmul@a,w
  8075     0516  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  8076     051B  0871               	movf	?i1__Umul8_16+1,w
  8077     051C  1283               	bcf	3,5	;RP0=0, select bank0
  8078     051D  1303               	bcf	3,6	;RP1=0, select bank0
  8079     051E  00B9               	movwf	i1___flmul@temp+1
  8080     051F  0870               	movf	?i1__Umul8_16,w
  8081     0520  00B8               	movwf	i1___flmul@temp
  8082     0521                     i1l3156:
  8083     0521  0838               	movf	i1___flmul@temp,w
  8084     0522  00A8               	movwf	??i1___flmul
  8085     0523  0839               	movf	i1___flmul@temp+1,w
  8086     0524  00A9               	movwf	??i1___flmul+1
  8087     0525  01AA               	clrf	??i1___flmul+2
  8088     0526  01AB               	clrf	??i1___flmul+3
  8089     0527  0828               	movf	??i1___flmul,w
  8090     0528  07AE               	addwf	i1___flmul@grs,f
  8091     0529  0829               	movf	??i1___flmul+1,w
  8092     052A  1103               	clrz
  8093     052B  1803               	skipnc
  8094     052C  3E01               	addlw	1
  8095     052D  1903               	skipnz
  8096     052E  2D30               	goto	u472_21
  8097     052F  07AF               	addwf	i1___flmul@grs+1,f
  8098     0530                     u472_21:
  8099     0530  082A               	movf	??i1___flmul+2,w
  8100     0531  1103               	clrz
  8101     0532  1803               	skipnc
  8102     0533  3E01               	addlw	1
  8103     0534  1903               	skipnz
  8104     0535  2D37               	goto	u472_22
  8105     0536  07B0               	addwf	i1___flmul@grs+2,f
  8106     0537                     u472_22:
  8107     0537  082B               	movf	??i1___flmul+3,w
  8108     0538  1103               	clrz
  8109     0539  1803               	skipnc
  8110     053A  3E01               	addlw	1
  8111     053B  1903               	skipnz
  8112     053C  2D3E               	goto	u472_23
  8113     053D  07B1               	addwf	i1___flmul@grs+3,f
  8114     053E                     u472_23:
  8115     053E                     i1l3158:
  8116     053E  0821               	movf	i1___flmul@b+1,w
  8117     053F  00F0               	movwf	i1__Umul8_16@multiplicand
  8118     0540  0826               	movf	i1___flmul@a+2,w
  8119     0541  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  8120     0546  0871               	movf	?i1__Umul8_16+1,w
  8121     0547  1283               	bcf	3,5	;RP0=0, select bank0
  8122     0548  1303               	bcf	3,6	;RP1=0, select bank0
  8123     0549  00B9               	movwf	i1___flmul@temp+1
  8124     054A  0870               	movf	?i1__Umul8_16,w
  8125     054B  00B8               	movwf	i1___flmul@temp
  8126     054C  0838               	movf	i1___flmul@temp,w
  8127     054D  00A8               	movwf	??i1___flmul
  8128     054E  0839               	movf	i1___flmul@temp+1,w
  8129     054F  00A9               	movwf	??i1___flmul+1
  8130     0550  01AA               	clrf	??i1___flmul+2
  8131     0551  01AB               	clrf	??i1___flmul+3
  8132     0552  0828               	movf	??i1___flmul,w
  8133     0553  07B4               	addwf	i1___flmul@prod,f
  8134     0554  0829               	movf	??i1___flmul+1,w
  8135     0555  1103               	clrz
  8136     0556  1803               	skipnc
  8137     0557  3E01               	addlw	1
  8138     0558  1903               	skipnz
  8139     0559  2D5B               	goto	u473_21
  8140     055A  07B5               	addwf	i1___flmul@prod+1,f
  8141     055B                     u473_21:
  8142     055B  082A               	movf	??i1___flmul+2,w
  8143     055C  1103               	clrz
  8144     055D  1803               	skipnc
  8145     055E  3E01               	addlw	1
  8146     055F  1903               	skipnz
  8147     0560  2D62               	goto	u473_22
  8148     0561  07B6               	addwf	i1___flmul@prod+2,f
  8149     0562                     u473_22:
  8150     0562  082B               	movf	??i1___flmul+3,w
  8151     0563  1103               	clrz
  8152     0564  1803               	skipnc
  8153     0565  3E01               	addlw	1
  8154     0566  1903               	skipnz
  8155     0567  2D69               	goto	u473_23
  8156     0568  07B7               	addwf	i1___flmul@prod+3,f
  8157     0569                     u473_23:
  8158     0569                     i1l3160:
  8159     0569  0822               	movf	i1___flmul@b+2,w
  8160     056A  00F0               	movwf	i1__Umul8_16@multiplicand
  8161     056B  0825               	movf	i1___flmul@a+1,w
  8162     056C  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  8163     0571  0871               	movf	?i1__Umul8_16+1,w
  8164     0572  1283               	bcf	3,5	;RP0=0, select bank0
  8165     0573  1303               	bcf	3,6	;RP1=0, select bank0
  8166     0574  00B9               	movwf	i1___flmul@temp+1
  8167     0575  0870               	movf	?i1__Umul8_16,w
  8168     0576  00B8               	movwf	i1___flmul@temp
  8169     0577                     i1l3162:
  8170     0577  0838               	movf	i1___flmul@temp,w
  8171     0578  00A8               	movwf	??i1___flmul
  8172     0579  0839               	movf	i1___flmul@temp+1,w
  8173     057A  00A9               	movwf	??i1___flmul+1
  8174     057B  01AA               	clrf	??i1___flmul+2
  8175     057C  01AB               	clrf	??i1___flmul+3
  8176     057D  0828               	movf	??i1___flmul,w
  8177     057E  07B4               	addwf	i1___flmul@prod,f
  8178     057F  0829               	movf	??i1___flmul+1,w
  8179     0580  1103               	clrz
  8180     0581  1803               	skipnc
  8181     0582  3E01               	addlw	1
  8182     0583  1903               	skipnz
  8183     0584  2D86               	goto	u474_21
  8184     0585  07B5               	addwf	i1___flmul@prod+1,f
  8185     0586                     u474_21:
  8186     0586  082A               	movf	??i1___flmul+2,w
  8187     0587  1103               	clrz
  8188     0588  1803               	skipnc
  8189     0589  3E01               	addlw	1
  8190     058A  1903               	skipnz
  8191     058B  2D8D               	goto	u474_22
  8192     058C  07B6               	addwf	i1___flmul@prod+2,f
  8193     058D                     u474_22:
  8194     058D  082B               	movf	??i1___flmul+3,w
  8195     058E  1103               	clrz
  8196     058F  1803               	skipnc
  8197     0590  3E01               	addlw	1
  8198     0591  1903               	skipnz
  8199     0592  2D94               	goto	u474_23
  8200     0593  07B7               	addwf	i1___flmul@prod+3,f
  8201     0594                     u474_23:
  8202     0594  0822               	movf	i1___flmul@b+2,w
  8203     0595  00F0               	movwf	i1__Umul8_16@multiplicand
  8204     0596  0826               	movf	i1___flmul@a+2,w
  8205     0597  160A  118A  22FB  120A  118A  	fcall	i1__Umul8_16
  8206     059C  0871               	movf	?i1__Umul8_16+1,w
  8207     059D  1283               	bcf	3,5	;RP0=0, select bank0
  8208     059E  1303               	bcf	3,6	;RP1=0, select bank0
  8209     059F  00B9               	movwf	i1___flmul@temp+1
  8210     05A0  0870               	movf	?i1__Umul8_16,w
  8211     05A1  00B8               	movwf	i1___flmul@temp
  8212     05A2                     i1l3164:
  8213     05A2  0838               	movf	i1___flmul@temp,w
  8214     05A3  00A8               	movwf	??i1___flmul
  8215     05A4  0839               	movf	i1___flmul@temp+1,w
  8216     05A5  00A9               	movwf	??i1___flmul+1
  8217     05A6  01AA               	clrf	??i1___flmul+2
  8218     05A7  01AB               	clrf	??i1___flmul+3
  8219     05A8  3008               	movlw	8
  8220     05A9                     u475_25:
  8221     05A9  1003               	clrc
  8222     05AA  0DA8               	rlf	??i1___flmul,f
  8223     05AB  0DA9               	rlf	??i1___flmul+1,f
  8224     05AC  0DAA               	rlf	??i1___flmul+2,f
  8225     05AD  0DAB               	rlf	??i1___flmul+3,f
  8226     05AE                     u475_20:
  8227     05AE  3EFF               	addlw	-1
  8228     05AF  1D03               	skipz
  8229     05B0  2DA9               	goto	u475_25
  8230     05B1  0828               	movf	??i1___flmul,w
  8231     05B2  07B4               	addwf	i1___flmul@prod,f
  8232     05B3  0829               	movf	??i1___flmul+1,w
  8233     05B4  1103               	clrz
  8234     05B5  1803               	skipnc
  8235     05B6  3E01               	addlw	1
  8236     05B7  1903               	skipnz
  8237     05B8  2DBA               	goto	u476_21
  8238     05B9  07B5               	addwf	i1___flmul@prod+1,f
  8239     05BA                     u476_21:
  8240     05BA  082A               	movf	??i1___flmul+2,w
  8241     05BB  1103               	clrz
  8242     05BC  1803               	skipnc
  8243     05BD  3E01               	addlw	1
  8244     05BE  1903               	skipnz
  8245     05BF  2DC1               	goto	u476_22
  8246     05C0  07B6               	addwf	i1___flmul@prod+2,f
  8247     05C1                     u476_22:
  8248     05C1  082B               	movf	??i1___flmul+3,w
  8249     05C2  1103               	clrz
  8250     05C3  1803               	skipnc
  8251     05C4  3E01               	addlw	1
  8252     05C5  1903               	skipnz
  8253     05C6  2DC8               	goto	u476_23
  8254     05C7  07B7               	addwf	i1___flmul@prod+3,f
  8255     05C8                     u476_23:
  8256     05C8                     i1l3166:
  8257     05C8  082E               	movf	i1___flmul@grs,w
  8258     05C9  00A8               	movwf	??i1___flmul
  8259     05CA  082F               	movf	i1___flmul@grs+1,w
  8260     05CB  00A9               	movwf	??i1___flmul+1
  8261     05CC  0830               	movf	i1___flmul@grs+2,w
  8262     05CD  00AA               	movwf	??i1___flmul+2
  8263     05CE  0831               	movf	i1___flmul@grs+3,w
  8264     05CF  00AB               	movwf	??i1___flmul+3
  8265     05D0  3018               	movlw	24
  8266     05D1                     u477_25:
  8267     05D1  1003               	clrc
  8268     05D2  0CAB               	rrf	??i1___flmul+3,f
  8269     05D3  0CAA               	rrf	??i1___flmul+2,f
  8270     05D4  0CA9               	rrf	??i1___flmul+1,f
  8271     05D5  0CA8               	rrf	??i1___flmul,f
  8272     05D6                     u477_20:
  8273     05D6  3EFF               	addlw	-1
  8274     05D7  1D03               	skipz
  8275     05D8  2DD1               	goto	u477_25
  8276     05D9  0828               	movf	??i1___flmul,w
  8277     05DA  07B4               	addwf	i1___flmul@prod,f
  8278     05DB  0829               	movf	??i1___flmul+1,w
  8279     05DC  1103               	clrz
  8280     05DD  1803               	skipnc
  8281     05DE  3E01               	addlw	1
  8282     05DF  1903               	skipnz
  8283     05E0  2DE2               	goto	u478_21
  8284     05E1  07B5               	addwf	i1___flmul@prod+1,f
  8285     05E2                     u478_21:
  8286     05E2  082A               	movf	??i1___flmul+2,w
  8287     05E3  1103               	clrz
  8288     05E4  1803               	skipnc
  8289     05E5  3E01               	addlw	1
  8290     05E6  1903               	skipnz
  8291     05E7  2DE9               	goto	u478_22
  8292     05E8  07B6               	addwf	i1___flmul@prod+2,f
  8293     05E9                     u478_22:
  8294     05E9  082B               	movf	??i1___flmul+3,w
  8295     05EA  1103               	clrz
  8296     05EB  1803               	skipnc
  8297     05EC  3E01               	addlw	1
  8298     05ED  1903               	skipnz
  8299     05EE  2DF0               	goto	u478_23
  8300     05EF  07B7               	addwf	i1___flmul@prod+3,f
  8301     05F0                     u478_23:
  8302     05F0                     i1l3168:
  8303     05F0  3008               	movlw	8
  8304     05F1  00A8               	movwf	??i1___flmul
  8305     05F2                     u479_25:
  8306     05F2  1003               	clrc
  8307     05F3  0DAE               	rlf	i1___flmul@grs,f
  8308     05F4  0DAF               	rlf	i1___flmul@grs+1,f
  8309     05F5  0DB0               	rlf	i1___flmul@grs+2,f
  8310     05F6  0DB1               	rlf	i1___flmul@grs+3,f
  8311     05F7  0BA8               	decfsz	??i1___flmul,f
  8312     05F8  2DF2               	goto	u479_25
  8313     05F9                     i1l3170:
  8314     05F9  0833               	movf	i1___flmul@bexp,w
  8315     05FA  0732               	addwf	i1___flmul@aexp,w
  8316     05FB  00A8               	movwf	??i1___flmul
  8317     05FC  01A9               	clrf	??i1___flmul+1
  8318     05FD  0DA9               	rlf	??i1___flmul+1,f
  8319     05FE  0828               	movf	??i1___flmul,w
  8320     05FF  3E82               	addlw	130
  8321     0600  00B8               	movwf	i1___flmul@temp
  8322     0601  0829               	movf	??i1___flmul+1,w
  8323     0602  1803               	skipnc
  8324     0603  3E01               	addlw	1
  8325     0604  3EFF               	addlw	255
  8326     0605  00B9               	movwf	i1___flmul@temp+1
  8327     0606  2E24               	goto	i1l3182
  8328     0607                     i1l3172:
  8329     0607  3001               	movlw	1
  8330     0608  00A8               	movwf	??i1___flmul
  8331     0609                     u480_25:
  8332     0609  1003               	clrc
  8333     060A  0DB4               	rlf	i1___flmul@prod,f
  8334     060B  0DB5               	rlf	i1___flmul@prod+1,f
  8335     060C  0DB6               	rlf	i1___flmul@prod+2,f
  8336     060D  0DB7               	rlf	i1___flmul@prod+3,f
  8337     060E  0BA8               	decfsz	??i1___flmul,f
  8338     060F  2E09               	goto	u480_25
  8339     0610                     i1l3174:
  8340     0610  1FB1               	btfss	i1___flmul@grs+3,7
  8341     0611  2E13               	goto	u481_21
  8342     0612  2E14               	goto	u481_20
  8343     0613                     u481_21:
  8344     0613  2E15               	goto	i1l3178
  8345     0614                     u481_20:
  8346     0614                     i1l3176:
  8347     0614  1434               	bsf	i1___flmul@prod,0
  8348     0615                     i1l3178:
  8349     0615  3001               	movlw	1
  8350     0616  00A8               	movwf	??i1___flmul
  8351     0617                     u482_25:
  8352     0617  1003               	clrc
  8353     0618  0DAE               	rlf	i1___flmul@grs,f
  8354     0619  0DAF               	rlf	i1___flmul@grs+1,f
  8355     061A  0DB0               	rlf	i1___flmul@grs+2,f
  8356     061B  0DB1               	rlf	i1___flmul@grs+3,f
  8357     061C  0BA8               	decfsz	??i1___flmul,f
  8358     061D  2E17               	goto	u482_25
  8359     061E                     i1l3180:
  8360     061E  30FF               	movlw	255
  8361     061F  07B8               	addwf	i1___flmul@temp,f
  8362     0620  1803               	skipnc
  8363     0621  0AB9               	incf	i1___flmul@temp+1,f
  8364     0622  30FF               	movlw	255
  8365     0623  07B9               	addwf	i1___flmul@temp+1,f
  8366     0624                     i1l3182:
  8367     0624  1FB6               	btfss	i1___flmul@prod+2,7
  8368     0625  2E27               	goto	u483_21
  8369     0626  2E28               	goto	u483_20
  8370     0627                     u483_21:
  8371     0627  2E07               	goto	i1l3172
  8372     0628                     u483_20:
  8373     0628                     i1l3184:
  8374     0628  01B2               	clrf	i1___flmul@aexp
  8375     0629                     i1l3186:
  8376     0629  1FB1               	btfss	i1___flmul@grs+3,7
  8377     062A  2E2C               	goto	u484_21
  8378     062B  2E2D               	goto	u484_20
  8379     062C                     u484_21:
  8380     062C  2E49               	goto	i1l3194
  8381     062D                     u484_20:
  8382     062D                     i1l3188:
  8383     062D  30FF               	movlw	255
  8384     062E  052E               	andwf	i1___flmul@grs,w
  8385     062F  00A8               	movwf	??i1___flmul
  8386     0630  30FF               	movlw	255
  8387     0631  052F               	andwf	i1___flmul@grs+1,w
  8388     0632  00A9               	movwf	??i1___flmul+1
  8389     0633  30FF               	movlw	255
  8390     0634  0530               	andwf	i1___flmul@grs+2,w
  8391     0635  00AA               	movwf	??i1___flmul+2
  8392     0636  307F               	movlw	127
  8393     0637  0531               	andwf	i1___flmul@grs+3,w
  8394     0638  00AB               	movwf	??i1___flmul+3
  8395     0639  082B               	movf	??i1___flmul+3,w
  8396     063A  042A               	iorwf	??i1___flmul+2,w
  8397     063B  0429               	iorwf	??i1___flmul+1,w
  8398     063C  0428               	iorwf	??i1___flmul,w
  8399     063D  1903               	skipnz
  8400     063E  2E40               	goto	u485_21
  8401     063F  2E41               	goto	u485_20
  8402     0640                     u485_21:
  8403     0640  2E44               	goto	i1l727
  8404     0641                     u485_20:
  8405     0641                     i1l3190:
  8406     0641  01B2               	clrf	i1___flmul@aexp
  8407     0642  0AB2               	incf	i1___flmul@aexp,f
  8408     0643  2E49               	goto	i1l3194
  8409     0644                     i1l727:
  8410     0644  1C34               	btfss	i1___flmul@prod,0
  8411     0645  2E47               	goto	u486_21
  8412     0646  2E48               	goto	u486_20
  8413     0647                     u486_21:
  8414     0647  2E49               	goto	i1l3194
  8415     0648                     u486_20:
  8416     0648  2E41               	goto	i1l3190
  8417     0649                     i1l3194:
  8418     0649  0832               	movf	i1___flmul@aexp,w
  8419     064A  1903               	btfsc	3,2
  8420     064B  2E4D               	goto	u487_21
  8421     064C  2E4E               	goto	u487_20
  8422     064D                     u487_21:
  8423     064D  2E7F               	goto	i1l3204
  8424     064E                     u487_20:
  8425     064E                     i1l3196:
  8426     064E  3001               	movlw	1
  8427     064F  07B4               	addwf	i1___flmul@prod,f
  8428     0650  3000               	movlw	0
  8429     0651  1803               	skipnc
  8430     0652  3001               	movlw	1
  8431     0653  07B5               	addwf	i1___flmul@prod+1,f
  8432     0654  3000               	movlw	0
  8433     0655  1803               	skipnc
  8434     0656  3001               	movlw	1
  8435     0657  07B6               	addwf	i1___flmul@prod+2,f
  8436     0658  3000               	movlw	0
  8437     0659  1803               	skipnc
  8438     065A  3001               	movlw	1
  8439     065B  07B7               	addwf	i1___flmul@prod+3,f
  8440     065C                     i1l3198:
  8441     065C  1C37               	btfss	i1___flmul@prod+3,0
  8442     065D  2E5F               	goto	u488_21
  8443     065E  2E60               	goto	u488_20
  8444     065F                     u488_21:
  8445     065F  2E7F               	goto	i1l3204
  8446     0660                     u488_20:
  8447     0660                     i1l3200:
  8448     0660  0834               	movf	i1___flmul@prod,w
  8449     0661  00A8               	movwf	??i1___flmul
  8450     0662  0835               	movf	i1___flmul@prod+1,w
  8451     0663  00A9               	movwf	??i1___flmul+1
  8452     0664  0836               	movf	i1___flmul@prod+2,w
  8453     0665  00AA               	movwf	??i1___flmul+2
  8454     0666  0837               	movf	i1___flmul@prod+3,w
  8455     0667  00AB               	movwf	??i1___flmul+3
  8456     0668  3001               	movlw	1
  8457     0669  00AC               	movwf	??i1___flmul+4
  8458     066A                     u489_25:
  8459     066A  0D2B               	rlf	??i1___flmul+3,w
  8460     066B  0CAB               	rrf	??i1___flmul+3,f
  8461     066C  0CAA               	rrf	??i1___flmul+2,f
  8462     066D  0CA9               	rrf	??i1___flmul+1,f
  8463     066E  0CA8               	rrf	??i1___flmul,f
  8464     066F                     u489_20:
  8465     066F  0BAC               	decfsz	??i1___flmul+4,f
  8466     0670  2E6A               	goto	u489_25
  8467     0671  082B               	movf	??i1___flmul+3,w
  8468     0672  00B7               	movwf	i1___flmul@prod+3
  8469     0673  082A               	movf	??i1___flmul+2,w
  8470     0674  00B6               	movwf	i1___flmul@prod+2
  8471     0675  0829               	movf	??i1___flmul+1,w
  8472     0676  00B5               	movwf	i1___flmul@prod+1
  8473     0677  0828               	movf	??i1___flmul,w
  8474     0678  00B4               	movwf	i1___flmul@prod
  8475     0679                     i1l3202:
  8476     0679  3001               	movlw	1
  8477     067A  07B8               	addwf	i1___flmul@temp,f
  8478     067B  1803               	skipnc
  8479     067C  0AB9               	incf	i1___flmul@temp+1,f
  8480     067D  3000               	movlw	0
  8481     067E  07B9               	addwf	i1___flmul@temp+1,f
  8482     067F                     i1l3204:
  8483     067F  0839               	movf	i1___flmul@temp+1,w
  8484     0680  3A80               	xorlw	128
  8485     0681  00FF               	movwf	btemp+1
  8486     0682  3080               	movlw	128
  8487     0683  027F               	subwf	btemp+1,w
  8488     0684  1D03               	skipz
  8489     0685  2E88               	goto	u490_25
  8490     0686  30FF               	movlw	255
  8491     0687  0238               	subwf	i1___flmul@temp,w
  8492     0688                     u490_25:
  8493     0688  1C03               	skipc
  8494     0689  2E8B               	goto	u490_21
  8495     068A  2E8C               	goto	u490_20
  8496     068B                     u490_21:
  8497     068B  2E97               	goto	i1l3208
  8498     068C                     u490_20:
  8499     068C                     i1l3206:
  8500     068C  307F               	movlw	127
  8501     068D  1283               	bcf	3,5	;RP0=0, select bank0
  8502     068E  1303               	bcf	3,6	;RP1=0, select bank0
  8503     068F  00B7               	movwf	i1___flmul@prod+3
  8504     0690  3080               	movlw	128
  8505     0691  00B6               	movwf	i1___flmul@prod+2
  8506     0692  3000               	movlw	0
  8507     0693  00B5               	movwf	i1___flmul@prod+1
  8508     0694  3000               	movlw	0
  8509     0695  00B4               	movwf	i1___flmul@prod
  8510     0696  2EC8               	goto	i1l733
  8511     0697                     i1l3208:
  8512     0697  1283               	bcf	3,5	;RP0=0, select bank0
  8513     0698  1303               	bcf	3,6	;RP1=0, select bank0
  8514     0699  0839               	movf	i1___flmul@temp+1,w
  8515     069A  3A80               	xorlw	128
  8516     069B  00FF               	movwf	btemp+1
  8517     069C  3080               	movlw	128
  8518     069D  027F               	subwf	btemp+1,w
  8519     069E  1D03               	skipz
  8520     069F  2EA2               	goto	u491_25
  8521     06A0  3001               	movlw	1
  8522     06A1  0238               	subwf	i1___flmul@temp,w
  8523     06A2                     u491_25:
  8524     06A2  1803               	skipnc
  8525     06A3  2EA5               	goto	u491_21
  8526     06A4  2EA6               	goto	u491_20
  8527     06A5                     u491_21:
  8528     06A5  2EB2               	goto	i1l3214
  8529     06A6                     u491_20:
  8530     06A6                     i1l3210:
  8531     06A6  3000               	movlw	0
  8532     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  8533     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  8534     06A9  00B7               	movwf	i1___flmul@prod+3
  8535     06AA  3000               	movlw	0
  8536     06AB  00B6               	movwf	i1___flmul@prod+2
  8537     06AC  3000               	movlw	0
  8538     06AD  00B5               	movwf	i1___flmul@prod+1
  8539     06AE  3000               	movlw	0
  8540     06AF  00B4               	movwf	i1___flmul@prod
  8541     06B0                     i1l3212:
  8542     06B0  01AD               	clrf	i1___flmul@sign
  8543     06B1  2EC8               	goto	i1l733
  8544     06B2                     i1l3214:
  8545     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  8546     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  8547     06B4  0838               	movf	i1___flmul@temp,w
  8548     06B5  00B3               	movwf	i1___flmul@bexp
  8549     06B6  30FF               	movlw	255
  8550     06B7  05B4               	andwf	i1___flmul@prod,f
  8551     06B8  30FF               	movlw	255
  8552     06B9  05B5               	andwf	i1___flmul@prod+1,f
  8553     06BA  307F               	movlw	127
  8554     06BB  05B6               	andwf	i1___flmul@prod+2,f
  8555     06BC  3000               	movlw	0
  8556     06BD  05B7               	andwf	i1___flmul@prod+3,f
  8557     06BE                     i1l3216:
  8558     06BE  1C33               	btfss	i1___flmul@bexp,0
  8559     06BF  2EC1               	goto	u492_21
  8560     06C0  2EC2               	goto	u492_20
  8561     06C1                     u492_21:
  8562     06C1  2EC3               	goto	i1l3220
  8563     06C2                     u492_20:
  8564     06C2                     i1l3218:
  8565     06C2  17B6               	bsf	i1___flmul@prod+2,7
  8566     06C3                     i1l3220:
  8567     06C3  0833               	movf	i1___flmul@bexp,w
  8568     06C4  00A8               	movwf	??i1___flmul
  8569     06C5  1003               	clrc
  8570     06C6  0C28               	rrf	??i1___flmul,w
  8571     06C7  00B7               	movwf	i1___flmul@prod+3
  8572     06C8                     i1l733:
  8573     06C8  082D               	movf	i1___flmul@sign,w
  8574     06C9  00A8               	movwf	??i1___flmul
  8575     06CA  0828               	movf	??i1___flmul,w
  8576     06CB  04B7               	iorwf	i1___flmul@prod+3,f
  8577     06CC                     i1l3222:
  8578     06CC  0837               	movf	i1___flmul@prod+3,w
  8579     06CD  00A3               	movwf	?i1___flmul+3
  8580     06CE  0836               	movf	i1___flmul@prod+2,w
  8581     06CF  00A2               	movwf	?i1___flmul+2
  8582     06D0  0835               	movf	i1___flmul@prod+1,w
  8583     06D1  00A1               	movwf	?i1___flmul+1
  8584     06D2  0834               	movf	i1___flmul@prod,w
  8585     06D3  00A0               	movwf	?i1___flmul
  8586     06D4                     i1l721:
  8587     06D4  0008               	return
  8588     06D5                     __end_ofi1___flmul:
  8589                           
  8590                           	psect	text31
  8591     12FB                     __ptext31:	
  8592 ;; *************** function i1__Umul8_16 *****************
  8593 ;; Defined at:
  8594 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  multiplier      1    wreg     unsigned char 
  8597 ;;  multiplicand    1    0[COMMON] unsigned char 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  multiplier      1    8[COMMON] unsigned char 
  8600 ;;  word_mpld       2    6[COMMON] unsigned int 
  8601 ;;  product         2    4[COMMON] unsigned int 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2    0[COMMON] unsigned int 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8611 ;;      Params:         2       0       0       0       0
  8612 ;;      Locals:         5       0       0       0       0
  8613 ;;      Temps:          2       0       0       0       0
  8614 ;;      Totals:         9       0       0       0       0
  8615 ;;Total ram usage:        9 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		i1___flmul
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624     12FB                     i1__Umul8_16:	
  8625                           ;psect for function i1__Umul8_16
  8626                           
  8627                           
  8628                           ;incstack = 0
  8629                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
  8630                           ;i1__Umul8_16@multiplier stored from wreg
  8631     12FB  00F8               	movwf	i1__Umul8_16@multiplier
  8632     12FC                     i1l2794:
  8633     12FC  01F4               	clrf	i1__Umul8_16@product
  8634     12FD  01F5               	clrf	i1__Umul8_16@product+1
  8635     12FE                     i1l2796:
  8636     12FE  0870               	movf	i1__Umul8_16@multiplicand,w
  8637     12FF  00F2               	movwf	??i1__Umul8_16
  8638     1300  01F3               	clrf	??i1__Umul8_16+1
  8639     1301  0872               	movf	??i1__Umul8_16,w
  8640     1302  00F6               	movwf	i1__Umul8_16@word_mpld
  8641     1303  0873               	movf	??i1__Umul8_16+1,w
  8642     1304  00F7               	movwf	i1__Umul8_16@word_mpld+1
  8643     1305                     i1l2798:
  8644     1305  1C78               	btfss	i1__Umul8_16@multiplier,0
  8645     1306  2B08               	goto	u415_21
  8646     1307  2B09               	goto	u415_20
  8647     1308                     u415_21:
  8648     1308  2B0F               	goto	i1l740
  8649     1309                     u415_20:
  8650     1309                     i1l2800:
  8651     1309  0876               	movf	i1__Umul8_16@word_mpld,w
  8652     130A  07F4               	addwf	i1__Umul8_16@product,f
  8653     130B  1803               	skipnc
  8654     130C  0AF5               	incf	i1__Umul8_16@product+1,f
  8655     130D  0877               	movf	i1__Umul8_16@word_mpld+1,w
  8656     130E  07F5               	addwf	i1__Umul8_16@product+1,f
  8657     130F                     i1l740:
  8658     130F  3001               	movlw	1
  8659     1310                     u416_25:
  8660     1310  1003               	clrc
  8661     1311  0DF6               	rlf	i1__Umul8_16@word_mpld,f
  8662     1312  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
  8663     1313  3EFF               	addlw	-1
  8664     1314  1D03               	skipz
  8665     1315  2B10               	goto	u416_25
  8666     1316  1003               	clrc
  8667     1317  0CF8               	rrf	i1__Umul8_16@multiplier,f
  8668     1318                     i1l2802:
  8669     1318  0878               	movf	i1__Umul8_16@multiplier,w
  8670     1319  1D03               	btfss	3,2
  8671     131A  2B1C               	goto	u417_21
  8672     131B  2B1D               	goto	u417_20
  8673     131C                     u417_21:
  8674     131C  2B05               	goto	i1l2798
  8675     131D                     u417_20:
  8676     131D                     i1l2804:
  8677     131D  0875               	movf	i1__Umul8_16@product+1,w
  8678     131E  00F1               	movwf	?i1__Umul8_16+1
  8679     131F  0874               	movf	i1__Umul8_16@product,w
  8680     1320  00F0               	movwf	?i1__Umul8_16
  8681     1321                     i1l742:
  8682     1321  0008               	return
  8683     1322                     __end_ofi1__Umul8_16:
  8684                           
  8685                           	psect	text32
  8686     1253                     __ptext32:	
  8687 ;; *************** function _adc_read *****************
  8688 ;; Defined at:
  8689 ;;		line 21 in file "../LAB1_1.X/ADC.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  2    0[COMMON] int 
  8696 ;; Registers used:
  8697 ;;		wreg
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8703 ;;      Params:         2       0       0       0       0
  8704 ;;      Locals:         0       0       0       0       0
  8705 ;;      Temps:          2       0       0       0       0
  8706 ;;      Totals:         4       0       0       0       0
  8707 ;;Total ram usage:        4 bytes
  8708 ;; Hardware stack levels used: 1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_isr
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716     1253                     _adc_read:	
  8717                           ;psect for function _adc_read
  8718                           
  8719     1253                     i1l2812:	
  8720                           ;incstack = 0
  8721                           ; Regs used in _adc_read: [wreg]
  8722                           
  8723                           
  8724                           ;../LAB1_1.X/ADC.c: 22:     return ADRESH;
  8725     1253  1283               	bcf	3,5	;RP0=0, select bank0
  8726     1254  1303               	bcf	3,6	;RP1=0, select bank0
  8727     1255  081E               	movf	30,w	;volatile
  8728     1256  00F2               	movwf	??_adc_read
  8729     1257  01F3               	clrf	??_adc_read+1
  8730     1258  0872               	movf	??_adc_read,w
  8731     1259  00F0               	movwf	?_adc_read
  8732     125A  0873               	movf	??_adc_read+1,w
  8733     125B  00F1               	movwf	?_adc_read+1
  8734     125C                     i1l188:
  8735     125C  0008               	return
  8736     125D                     __end_of_adc_read:
  8737                           
  8738                           	psect	text33
  8739     1269                     __ptext33:	
  8740 ;; *************** function _adc_get_channel *****************
  8741 ;; Defined at:
  8742 ;;		line 40 in file "../LAB1_1.X/ADC.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  2    0[COMMON] int 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8756 ;;      Params:         2       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0
  8758 ;;      Temps:          3       0       0       0       0
  8759 ;;      Totals:         5       0       0       0       0
  8760 ;;Total ram usage:        5 bytes
  8761 ;; Hardware stack levels used: 1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_isr
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769     1269                     _adc_get_channel:	
  8770                           ;psect for function _adc_get_channel
  8771                           
  8772     1269                     i1l2808:	
  8773                           ;incstack = 0
  8774                           ; Regs used in _adc_get_channel: [wreg+status,2+status,0]
  8775                           
  8776                           
  8777                           ;../LAB1_1.X/ADC.c: 41:     return ADCON0bits.CHS;
  8778     1269  1283               	bcf	3,5	;RP0=0, select bank0
  8779     126A  1303               	bcf	3,6	;RP1=0, select bank0
  8780     126B  0C1F               	rrf	31,w	;volatile
  8781     126C  00F2               	movwf	??_adc_get_channel
  8782     126D  0C72               	rrf	??_adc_get_channel,w
  8783     126E  390F               	andlw	15
  8784     126F  00F3               	movwf	??_adc_get_channel+1
  8785     1270  01F4               	clrf	??_adc_get_channel+2
  8786     1271  0873               	movf	??_adc_get_channel+1,w
  8787     1272  00F0               	movwf	?_adc_get_channel
  8788     1273  0874               	movf	??_adc_get_channel+2,w
  8789     1274  00F1               	movwf	?_adc_get_channel+1
  8790     1275                     i1l198:
  8791     1275  0008               	return
  8792     1276                     __end_of_adc_get_channel:
  8793                           
  8794                           	psect	text34
  8795     0BD5                     __ptext34:	
  8796 ;; *************** function ___fldiv *****************
  8797 ;; Defined at:
  8798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  a               4   26[BANK0 ] int 
  8801 ;;  b               4   30[BANK0 ] int 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  grs             4   46[BANK0 ] unsigned long 
  8804 ;;  rem             4   39[BANK0 ] unsigned long 
  8805 ;;  new_exp         2   44[BANK0 ] int 
  8806 ;;  aexp            1   51[BANK0 ] unsigned char 
  8807 ;;  bexp            1   50[BANK0 ] unsigned char 
  8808 ;;  sign            1   43[BANK0 ] unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  4   26[BANK0 ] unsigned char 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0, btemp+1
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         0       8       0       0       0
  8819 ;;      Locals:         0      13       0       0       0
  8820 ;;      Temps:          0       5       0       0       0
  8821 ;;      Totals:         0      26       0       0       0
  8822 ;;Total ram usage:       26 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_isr
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831     0BD5                     ___fldiv:	
  8832                           ;psect for function ___fldiv
  8833                           
  8834     0BD5                     i1l2944:	
  8835                           ;incstack = 0
  8836                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8837                           
  8838     0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  8839     0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  8840     0BD7  0841               	movf	___fldiv@b+3,w
  8841     0BD8  3980               	andlw	128
  8842     0BD9  00CB               	movwf	___fldiv@sign
  8843     0BDA                     i1l2946:
  8844     0BDA  0841               	movf	___fldiv@b+3,w
  8845     0BDB  00C2               	movwf	??___fldiv
  8846     0BDC  0742               	addwf	??___fldiv,w
  8847     0BDD  00D2               	movwf	___fldiv@bexp
  8848     0BDE                     i1l2948:
  8849     0BDE  1FC0               	btfss	___fldiv@b+2,7
  8850     0BDF  2BE1               	goto	u427_21
  8851     0BE0  2BE2               	goto	u427_20
  8852     0BE1                     u427_21:
  8853     0BE1  2BE3               	goto	i1l2952
  8854     0BE2                     u427_20:
  8855     0BE2                     i1l2950:
  8856     0BE2  1452               	bsf	___fldiv@bexp,0
  8857     0BE3                     i1l2952:
  8858     0BE3  0852               	movf	___fldiv@bexp,w
  8859     0BE4  1903               	btfsc	3,2
  8860     0BE5  2BE7               	goto	u428_21
  8861     0BE6  2BE8               	goto	u428_20
  8862     0BE7                     u428_21:
  8863     0BE7  2BF8               	goto	i1l2962
  8864     0BE8                     u428_20:
  8865     0BE8                     i1l2954:
  8866     0BE8  0A52               	incf	___fldiv@bexp,w
  8867     0BE9  1D03               	btfss	3,2
  8868     0BEA  2BEC               	goto	u429_21
  8869     0BEB  2BED               	goto	u429_20
  8870     0BEC                     u429_21:
  8871     0BEC  2BF5               	goto	i1l2958
  8872     0BED                     u429_20:
  8873     0BED                     i1l2956:
  8874     0BED  3000               	movlw	0
  8875     0BEE  00C1               	movwf	___fldiv@b+3
  8876     0BEF  3000               	movlw	0
  8877     0BF0  00C0               	movwf	___fldiv@b+2
  8878     0BF1  3000               	movlw	0
  8879     0BF2  00BF               	movwf	___fldiv@b+1
  8880     0BF3  3000               	movlw	0
  8881     0BF4  00BE               	movwf	___fldiv@b
  8882     0BF5                     i1l2958:
  8883     0BF5  17C0               	bsf	___fldiv@b+2,7
  8884     0BF6                     i1l2960:
  8885     0BF6  01C1               	clrf	___fldiv@b+3
  8886     0BF7  2C00               	goto	i1l2964
  8887     0BF8                     i1l2962:
  8888     0BF8  3000               	movlw	0
  8889     0BF9  00C1               	movwf	___fldiv@b+3
  8890     0BFA  3000               	movlw	0
  8891     0BFB  00C0               	movwf	___fldiv@b+2
  8892     0BFC  3000               	movlw	0
  8893     0BFD  00BF               	movwf	___fldiv@b+1
  8894     0BFE  3000               	movlw	0
  8895     0BFF  00BE               	movwf	___fldiv@b
  8896     0C00                     i1l2964:
  8897     0C00  083D               	movf	___fldiv@a+3,w
  8898     0C01  3980               	andlw	128
  8899     0C02  00C2               	movwf	??___fldiv
  8900     0C03  0842               	movf	??___fldiv,w
  8901     0C04  06CB               	xorwf	___fldiv@sign,f
  8902     0C05                     i1l2966:
  8903     0C05  083D               	movf	___fldiv@a+3,w
  8904     0C06  00C2               	movwf	??___fldiv
  8905     0C07  0742               	addwf	??___fldiv,w
  8906     0C08  00D3               	movwf	___fldiv@aexp
  8907     0C09                     i1l2968:
  8908     0C09  1FBC               	btfss	___fldiv@a+2,7
  8909     0C0A  2C0C               	goto	u430_21
  8910     0C0B  2C0D               	goto	u430_20
  8911     0C0C                     u430_21:
  8912     0C0C  2C0E               	goto	i1l2972
  8913     0C0D                     u430_20:
  8914     0C0D                     i1l2970:
  8915     0C0D  1453               	bsf	___fldiv@aexp,0
  8916     0C0E                     i1l2972:
  8917     0C0E  0853               	movf	___fldiv@aexp,w
  8918     0C0F  1903               	btfsc	3,2
  8919     0C10  2C12               	goto	u431_21
  8920     0C11  2C13               	goto	u431_20
  8921     0C12                     u431_21:
  8922     0C12  2C23               	goto	i1l2982
  8923     0C13                     u431_20:
  8924     0C13                     i1l2974:
  8925     0C13  0A53               	incf	___fldiv@aexp,w
  8926     0C14  1D03               	btfss	3,2
  8927     0C15  2C17               	goto	u432_21
  8928     0C16  2C18               	goto	u432_20
  8929     0C17                     u432_21:
  8930     0C17  2C20               	goto	i1l2978
  8931     0C18                     u432_20:
  8932     0C18                     i1l2976:
  8933     0C18  3000               	movlw	0
  8934     0C19  00BD               	movwf	___fldiv@a+3
  8935     0C1A  3000               	movlw	0
  8936     0C1B  00BC               	movwf	___fldiv@a+2
  8937     0C1C  3000               	movlw	0
  8938     0C1D  00BB               	movwf	___fldiv@a+1
  8939     0C1E  3000               	movlw	0
  8940     0C1F  00BA               	movwf	___fldiv@a
  8941     0C20                     i1l2978:
  8942     0C20  17BC               	bsf	___fldiv@a+2,7
  8943     0C21                     i1l2980:
  8944     0C21  01BD               	clrf	___fldiv@a+3
  8945     0C22  2C2B               	goto	i1l681
  8946     0C23                     i1l2982:
  8947     0C23  3000               	movlw	0
  8948     0C24  00BD               	movwf	___fldiv@a+3
  8949     0C25  3000               	movlw	0
  8950     0C26  00BC               	movwf	___fldiv@a+2
  8951     0C27  3000               	movlw	0
  8952     0C28  00BB               	movwf	___fldiv@a+1
  8953     0C29  3000               	movlw	0
  8954     0C2A  00BA               	movwf	___fldiv@a
  8955     0C2B                     i1l681:
  8956     0C2B  083D               	movf	___fldiv@a+3,w
  8957     0C2C  043C               	iorwf	___fldiv@a+2,w
  8958     0C2D  043B               	iorwf	___fldiv@a+1,w
  8959     0C2E  043A               	iorwf	___fldiv@a,w
  8960     0C2F  1D03               	skipz
  8961     0C30  2C32               	goto	u433_21
  8962     0C31  2C33               	goto	u433_20
  8963     0C32                     u433_21:
  8964     0C32  2C4C               	goto	i1l2992
  8965     0C33                     u433_20:
  8966     0C33                     i1l2984:
  8967     0C33  3000               	movlw	0
  8968     0C34  00C1               	movwf	___fldiv@b+3
  8969     0C35  3000               	movlw	0
  8970     0C36  00C0               	movwf	___fldiv@b+2
  8971     0C37  3000               	movlw	0
  8972     0C38  00BF               	movwf	___fldiv@b+1
  8973     0C39  3000               	movlw	0
  8974     0C3A  00BE               	movwf	___fldiv@b
  8975     0C3B  3080               	movlw	128
  8976     0C3C  04C0               	iorwf	___fldiv@b+2,f
  8977     0C3D  307F               	movlw	127
  8978     0C3E  04C1               	iorwf	___fldiv@b+3,f
  8979     0C3F                     i1l2986:
  8980     0C3F  084B               	movf	___fldiv@sign,w
  8981     0C40  00C2               	movwf	??___fldiv
  8982     0C41  0842               	movf	??___fldiv,w
  8983     0C42  04C1               	iorwf	___fldiv@b+3,f
  8984     0C43                     i1l2988:
  8985     0C43  0841               	movf	___fldiv@b+3,w
  8986     0C44  00BD               	movwf	?___fldiv+3
  8987     0C45  0840               	movf	___fldiv@b+2,w
  8988     0C46  00BC               	movwf	?___fldiv+2
  8989     0C47  083F               	movf	___fldiv@b+1,w
  8990     0C48  00BB               	movwf	?___fldiv+1
  8991     0C49  083E               	movf	___fldiv@b,w
  8992     0C4A  00BA               	movwf	?___fldiv
  8993     0C4B  2DA7               	goto	i1l683
  8994     0C4C                     i1l2992:
  8995     0C4C  0852               	movf	___fldiv@bexp,w
  8996     0C4D  1D03               	btfss	3,2
  8997     0C4E  2C50               	goto	u434_21
  8998     0C4F  2C51               	goto	u434_20
  8999     0C50                     u434_21:
  9000     0C50  2C5A               	goto	i1l2998
  9001     0C51                     u434_20:
  9002     0C51                     i1l2994:
  9003     0C51  3000               	movlw	0
  9004     0C52  00BD               	movwf	?___fldiv+3
  9005     0C53  3000               	movlw	0
  9006     0C54  00BC               	movwf	?___fldiv+2
  9007     0C55  3000               	movlw	0
  9008     0C56  00BB               	movwf	?___fldiv+1
  9009     0C57  3000               	movlw	0
  9010     0C58  00BA               	movwf	?___fldiv
  9011     0C59  2DA7               	goto	i1l683
  9012     0C5A                     i1l2998:
  9013     0C5A  0852               	movf	___fldiv@bexp,w
  9014     0C5B  00C2               	movwf	??___fldiv
  9015     0C5C  01C3               	clrf	??___fldiv+1
  9016     0C5D  0843               	movf	??___fldiv+1,w
  9017     0C5E  00C5               	movwf	??___fldiv+3
  9018     0C5F  0853               	movf	___fldiv@aexp,w
  9019     0C60  0242               	subwf	??___fldiv,w
  9020     0C61  00C4               	movwf	??___fldiv+2
  9021     0C62  1C03               	skipc
  9022     0C63  03C5               	decf	??___fldiv+3,f
  9023     0C64  0844               	movf	??___fldiv+2,w
  9024     0C65  3E7F               	addlw	127
  9025     0C66  00CC               	movwf	___fldiv@new_exp
  9026     0C67  0845               	movf	??___fldiv+3,w
  9027     0C68  1803               	skipnc
  9028     0C69  3E01               	addlw	1
  9029     0C6A  3E00               	addlw	0
  9030     0C6B  00CD               	movwf	___fldiv@new_exp+1
  9031     0C6C                     i1l3000:
  9032     0C6C  0841               	movf	___fldiv@b+3,w
  9033     0C6D  00CA               	movwf	___fldiv@rem+3
  9034     0C6E  0840               	movf	___fldiv@b+2,w
  9035     0C6F  00C9               	movwf	___fldiv@rem+2
  9036     0C70  083F               	movf	___fldiv@b+1,w
  9037     0C71  00C8               	movwf	___fldiv@rem+1
  9038     0C72  083E               	movf	___fldiv@b,w
  9039     0C73  00C7               	movwf	___fldiv@rem
  9040     0C74                     i1l3002:
  9041     0C74  3000               	movlw	0
  9042     0C75  00C1               	movwf	___fldiv@b+3
  9043     0C76  3000               	movlw	0
  9044     0C77  00C0               	movwf	___fldiv@b+2
  9045     0C78  3000               	movlw	0
  9046     0C79  00BF               	movwf	___fldiv@b+1
  9047     0C7A  3000               	movlw	0
  9048     0C7B  00BE               	movwf	___fldiv@b
  9049     0C7C                     i1l3004:
  9050     0C7C  3000               	movlw	0
  9051     0C7D  00D1               	movwf	___fldiv@grs+3
  9052     0C7E  3000               	movlw	0
  9053     0C7F  00D0               	movwf	___fldiv@grs+2
  9054     0C80  3000               	movlw	0
  9055     0C81  00CF               	movwf	___fldiv@grs+1
  9056     0C82  3000               	movlw	0
  9057     0C83  00CE               	movwf	___fldiv@grs
  9058     0C84                     i1l3006:
  9059     0C84  01D3               	clrf	___fldiv@aexp
  9060     0C85  2CD0               	goto	i1l3026
  9061     0C86                     i1l3008:
  9062     0C86  0853               	movf	___fldiv@aexp,w
  9063     0C87  1903               	btfsc	3,2
  9064     0C88  2C8A               	goto	u435_21
  9065     0C89  2C8B               	goto	u435_20
  9066     0C8A                     u435_21:
  9067     0C8A  2CAB               	goto	i1l3018
  9068     0C8B                     u435_20:
  9069     0C8B                     i1l3010:
  9070     0C8B  3001               	movlw	1
  9071     0C8C  00C2               	movwf	??___fldiv
  9072     0C8D                     u436_25:
  9073     0C8D  1003               	clrc
  9074     0C8E  0DC7               	rlf	___fldiv@rem,f
  9075     0C8F  0DC8               	rlf	___fldiv@rem+1,f
  9076     0C90  0DC9               	rlf	___fldiv@rem+2,f
  9077     0C91  0DCA               	rlf	___fldiv@rem+3,f
  9078     0C92  0BC2               	decfsz	??___fldiv,f
  9079     0C93  2C8D               	goto	u436_25
  9080     0C94  3001               	movlw	1
  9081     0C95  00C2               	movwf	??___fldiv
  9082     0C96                     u437_25:
  9083     0C96  1003               	clrc
  9084     0C97  0DBE               	rlf	___fldiv@b,f
  9085     0C98  0DBF               	rlf	___fldiv@b+1,f
  9086     0C99  0DC0               	rlf	___fldiv@b+2,f
  9087     0C9A  0DC1               	rlf	___fldiv@b+3,f
  9088     0C9B  0BC2               	decfsz	??___fldiv,f
  9089     0C9C  2C96               	goto	u437_25
  9090     0C9D                     i1l3012:
  9091     0C9D  1FD1               	btfss	___fldiv@grs+3,7
  9092     0C9E  2CA0               	goto	u438_21
  9093     0C9F  2CA1               	goto	u438_20
  9094     0CA0                     u438_21:
  9095     0CA0  2CA2               	goto	i1l3016
  9096     0CA1                     u438_20:
  9097     0CA1                     i1l3014:
  9098     0CA1  143E               	bsf	___fldiv@b,0
  9099     0CA2                     i1l3016:
  9100     0CA2  3001               	movlw	1
  9101     0CA3  00C2               	movwf	??___fldiv
  9102     0CA4                     u439_25:
  9103     0CA4  1003               	clrc
  9104     0CA5  0DCE               	rlf	___fldiv@grs,f
  9105     0CA6  0DCF               	rlf	___fldiv@grs+1,f
  9106     0CA7  0DD0               	rlf	___fldiv@grs+2,f
  9107     0CA8  0DD1               	rlf	___fldiv@grs+3,f
  9108     0CA9  0BC2               	decfsz	??___fldiv,f
  9109     0CAA  2CA4               	goto	u439_25
  9110     0CAB                     i1l3018:
  9111     0CAB  083D               	movf	___fldiv@a+3,w
  9112     0CAC  024A               	subwf	___fldiv@rem+3,w
  9113     0CAD  1D03               	skipz
  9114     0CAE  2CB9               	goto	u440_25
  9115     0CAF  083C               	movf	___fldiv@a+2,w
  9116     0CB0  0249               	subwf	___fldiv@rem+2,w
  9117     0CB1  1D03               	skipz
  9118     0CB2  2CB9               	goto	u440_25
  9119     0CB3  083B               	movf	___fldiv@a+1,w
  9120     0CB4  0248               	subwf	___fldiv@rem+1,w
  9121     0CB5  1D03               	skipz
  9122     0CB6  2CB9               	goto	u440_25
  9123     0CB7  083A               	movf	___fldiv@a,w
  9124     0CB8  0247               	subwf	___fldiv@rem,w
  9125     0CB9                     u440_25:
  9126     0CB9  1C03               	skipc
  9127     0CBA  2CBC               	goto	u440_21
  9128     0CBB  2CBD               	goto	u440_20
  9129     0CBC                     u440_21:
  9130     0CBC  2CCC               	goto	i1l3024
  9131     0CBD                     u440_20:
  9132     0CBD                     i1l3020:
  9133     0CBD  1751               	bsf	___fldiv@grs+3,6
  9134     0CBE                     i1l3022:
  9135     0CBE  083A               	movf	___fldiv@a,w
  9136     0CBF  02C7               	subwf	___fldiv@rem,f
  9137     0CC0  083B               	movf	___fldiv@a+1,w
  9138     0CC1  1C03               	skipc
  9139     0CC2  0F3B               	incfsz	___fldiv@a+1,w
  9140     0CC3  02C8               	subwf	___fldiv@rem+1,f
  9141     0CC4  083C               	movf	___fldiv@a+2,w
  9142     0CC5  1C03               	skipc
  9143     0CC6  0F3C               	incfsz	___fldiv@a+2,w
  9144     0CC7  02C9               	subwf	___fldiv@rem+2,f
  9145     0CC8  083D               	movf	___fldiv@a+3,w
  9146     0CC9  1C03               	skipc
  9147     0CCA  0F3D               	incfsz	___fldiv@a+3,w
  9148     0CCB  02CA               	subwf	___fldiv@rem+3,f
  9149     0CCC                     i1l3024:
  9150     0CCC  3001               	movlw	1
  9151     0CCD  00C2               	movwf	??___fldiv
  9152     0CCE  0842               	movf	??___fldiv,w
  9153     0CCF  07D3               	addwf	___fldiv@aexp,f
  9154     0CD0                     i1l3026:
  9155     0CD0  301A               	movlw	26
  9156     0CD1  0253               	subwf	___fldiv@aexp,w
  9157     0CD2  1C03               	skipc
  9158     0CD3  2CD5               	goto	u441_21
  9159     0CD4  2CD6               	goto	u441_20
  9160     0CD5                     u441_21:
  9161     0CD5  2C86               	goto	i1l3008
  9162     0CD6                     u441_20:
  9163     0CD6                     i1l3028:
  9164     0CD6  084A               	movf	___fldiv@rem+3,w
  9165     0CD7  0449               	iorwf	___fldiv@rem+2,w
  9166     0CD8  0448               	iorwf	___fldiv@rem+1,w
  9167     0CD9  0447               	iorwf	___fldiv@rem,w
  9168     0CDA  1903               	skipnz
  9169     0CDB  2CDD               	goto	u442_21
  9170     0CDC  2CDE               	goto	u442_20
  9171     0CDD                     u442_21:
  9172     0CDD  2CFD               	goto	i1l3042
  9173     0CDE                     u442_20:
  9174     0CDE                     i1l3030:
  9175     0CDE  144E               	bsf	___fldiv@grs,0
  9176     0CDF  2CFD               	goto	i1l3042
  9177     0CE0                     i1l3032:
  9178     0CE0  3001               	movlw	1
  9179     0CE1  00C2               	movwf	??___fldiv
  9180     0CE2                     u443_25:
  9181     0CE2  1003               	clrc
  9182     0CE3  0DBE               	rlf	___fldiv@b,f
  9183     0CE4  0DBF               	rlf	___fldiv@b+1,f
  9184     0CE5  0DC0               	rlf	___fldiv@b+2,f
  9185     0CE6  0DC1               	rlf	___fldiv@b+3,f
  9186     0CE7  0BC2               	decfsz	??___fldiv,f
  9187     0CE8  2CE2               	goto	u443_25
  9188     0CE9                     i1l3034:
  9189     0CE9  1FD1               	btfss	___fldiv@grs+3,7
  9190     0CEA  2CEC               	goto	u444_21
  9191     0CEB  2CED               	goto	u444_20
  9192     0CEC                     u444_21:
  9193     0CEC  2CEE               	goto	i1l3038
  9194     0CED                     u444_20:
  9195     0CED                     i1l3036:
  9196     0CED  143E               	bsf	___fldiv@b,0
  9197     0CEE                     i1l3038:
  9198     0CEE  3001               	movlw	1
  9199     0CEF  00C2               	movwf	??___fldiv
  9200     0CF0                     u445_25:
  9201     0CF0  1003               	clrc
  9202     0CF1  0DCE               	rlf	___fldiv@grs,f
  9203     0CF2  0DCF               	rlf	___fldiv@grs+1,f
  9204     0CF3  0DD0               	rlf	___fldiv@grs+2,f
  9205     0CF4  0DD1               	rlf	___fldiv@grs+3,f
  9206     0CF5  0BC2               	decfsz	??___fldiv,f
  9207     0CF6  2CF0               	goto	u445_25
  9208     0CF7                     i1l3040:
  9209     0CF7  30FF               	movlw	255
  9210     0CF8  07CC               	addwf	___fldiv@new_exp,f
  9211     0CF9  1803               	skipnc
  9212     0CFA  0ACD               	incf	___fldiv@new_exp+1,f
  9213     0CFB  30FF               	movlw	255
  9214     0CFC  07CD               	addwf	___fldiv@new_exp+1,f
  9215     0CFD                     i1l3042:
  9216     0CFD  1FC0               	btfss	___fldiv@b+2,7
  9217     0CFE  2D00               	goto	u446_21
  9218     0CFF  2D01               	goto	u446_20
  9219     0D00                     u446_21:
  9220     0D00  2CE0               	goto	i1l3032
  9221     0D01                     u446_20:
  9222     0D01                     i1l3044:
  9223     0D01  01D3               	clrf	___fldiv@aexp
  9224     0D02                     i1l3046:
  9225     0D02  1FD1               	btfss	___fldiv@grs+3,7
  9226     0D03  2D05               	goto	u447_21
  9227     0D04  2D06               	goto	u447_20
  9228     0D05                     u447_21:
  9229     0D05  2D22               	goto	i1l3054
  9230     0D06                     u447_20:
  9231     0D06                     i1l3048:
  9232     0D06  30FF               	movlw	255
  9233     0D07  054E               	andwf	___fldiv@grs,w
  9234     0D08  00C2               	movwf	??___fldiv
  9235     0D09  30FF               	movlw	255
  9236     0D0A  054F               	andwf	___fldiv@grs+1,w
  9237     0D0B  00C3               	movwf	??___fldiv+1
  9238     0D0C  30FF               	movlw	255
  9239     0D0D  0550               	andwf	___fldiv@grs+2,w
  9240     0D0E  00C4               	movwf	??___fldiv+2
  9241     0D0F  307F               	movlw	127
  9242     0D10  0551               	andwf	___fldiv@grs+3,w
  9243     0D11  00C5               	movwf	??___fldiv+3
  9244     0D12  0845               	movf	??___fldiv+3,w
  9245     0D13  0444               	iorwf	??___fldiv+2,w
  9246     0D14  0443               	iorwf	??___fldiv+1,w
  9247     0D15  0442               	iorwf	??___fldiv,w
  9248     0D16  1903               	skipnz
  9249     0D17  2D19               	goto	u448_21
  9250     0D18  2D1A               	goto	u448_20
  9251     0D19                     u448_21:
  9252     0D19  2D1D               	goto	i1l697
  9253     0D1A                     u448_20:
  9254     0D1A                     i1l3050:
  9255     0D1A  01D3               	clrf	___fldiv@aexp
  9256     0D1B  0AD3               	incf	___fldiv@aexp,f
  9257     0D1C  2D22               	goto	i1l3054
  9258     0D1D                     i1l697:
  9259     0D1D  1C3E               	btfss	___fldiv@b,0
  9260     0D1E  2D20               	goto	u449_21
  9261     0D1F  2D21               	goto	u449_20
  9262     0D20                     u449_21:
  9263     0D20  2D22               	goto	i1l3054
  9264     0D21                     u449_20:
  9265     0D21  2D1A               	goto	i1l3050
  9266     0D22                     i1l3054:
  9267     0D22  0853               	movf	___fldiv@aexp,w
  9268     0D23  1903               	btfsc	3,2
  9269     0D24  2D26               	goto	u450_21
  9270     0D25  2D27               	goto	u450_20
  9271     0D26                     u450_21:
  9272     0D26  2D58               	goto	i1l3064
  9273     0D27                     u450_20:
  9274     0D27                     i1l3056:
  9275     0D27  3001               	movlw	1
  9276     0D28  07BE               	addwf	___fldiv@b,f
  9277     0D29  3000               	movlw	0
  9278     0D2A  1803               	skipnc
  9279     0D2B  3001               	movlw	1
  9280     0D2C  07BF               	addwf	___fldiv@b+1,f
  9281     0D2D  3000               	movlw	0
  9282     0D2E  1803               	skipnc
  9283     0D2F  3001               	movlw	1
  9284     0D30  07C0               	addwf	___fldiv@b+2,f
  9285     0D31  3000               	movlw	0
  9286     0D32  1803               	skipnc
  9287     0D33  3001               	movlw	1
  9288     0D34  07C1               	addwf	___fldiv@b+3,f
  9289     0D35                     i1l3058:
  9290     0D35  1C41               	btfss	___fldiv@b+3,0
  9291     0D36  2D38               	goto	u451_21
  9292     0D37  2D39               	goto	u451_20
  9293     0D38                     u451_21:
  9294     0D38  2D58               	goto	i1l3064
  9295     0D39                     u451_20:
  9296     0D39                     i1l3060:
  9297     0D39  083E               	movf	___fldiv@b,w
  9298     0D3A  00C2               	movwf	??___fldiv
  9299     0D3B  083F               	movf	___fldiv@b+1,w
  9300     0D3C  00C3               	movwf	??___fldiv+1
  9301     0D3D  0840               	movf	___fldiv@b+2,w
  9302     0D3E  00C4               	movwf	??___fldiv+2
  9303     0D3F  0841               	movf	___fldiv@b+3,w
  9304     0D40  00C5               	movwf	??___fldiv+3
  9305     0D41  3001               	movlw	1
  9306     0D42  00C6               	movwf	??___fldiv+4
  9307     0D43                     u452_25:
  9308     0D43  0D45               	rlf	??___fldiv+3,w
  9309     0D44  0CC5               	rrf	??___fldiv+3,f
  9310     0D45  0CC4               	rrf	??___fldiv+2,f
  9311     0D46  0CC3               	rrf	??___fldiv+1,f
  9312     0D47  0CC2               	rrf	??___fldiv,f
  9313     0D48                     u452_20:
  9314     0D48  0BC6               	decfsz	??___fldiv+4,f
  9315     0D49  2D43               	goto	u452_25
  9316     0D4A  0845               	movf	??___fldiv+3,w
  9317     0D4B  00C1               	movwf	___fldiv@b+3
  9318     0D4C  0844               	movf	??___fldiv+2,w
  9319     0D4D  00C0               	movwf	___fldiv@b+2
  9320     0D4E  0843               	movf	??___fldiv+1,w
  9321     0D4F  00BF               	movwf	___fldiv@b+1
  9322     0D50  0842               	movf	??___fldiv,w
  9323     0D51  00BE               	movwf	___fldiv@b
  9324     0D52                     i1l3062:
  9325     0D52  3001               	movlw	1
  9326     0D53  07CC               	addwf	___fldiv@new_exp,f
  9327     0D54  1803               	skipnc
  9328     0D55  0ACD               	incf	___fldiv@new_exp+1,f
  9329     0D56  3000               	movlw	0
  9330     0D57  07CD               	addwf	___fldiv@new_exp+1,f
  9331     0D58                     i1l3064:
  9332     0D58  084D               	movf	___fldiv@new_exp+1,w
  9333     0D59  3A80               	xorlw	128
  9334     0D5A  00FF               	movwf	btemp+1
  9335     0D5B  3080               	movlw	128
  9336     0D5C  027F               	subwf	btemp+1,w
  9337     0D5D  1D03               	skipz
  9338     0D5E  2D61               	goto	u453_25
  9339     0D5F  30FF               	movlw	255
  9340     0D60  024C               	subwf	___fldiv@new_exp,w
  9341     0D61                     u453_25:
  9342     0D61  1C03               	skipc
  9343     0D62  2D64               	goto	u453_21
  9344     0D63  2D65               	goto	u453_20
  9345     0D64                     u453_21:
  9346     0D64  2D73               	goto	i1l3068
  9347     0D65                     u453_20:
  9348     0D65                     i1l3066:
  9349     0D65  30FF               	movlw	255
  9350     0D66  1283               	bcf	3,5	;RP0=0, select bank0
  9351     0D67  1303               	bcf	3,6	;RP1=0, select bank0
  9352     0D68  00CC               	movwf	___fldiv@new_exp
  9353     0D69  3000               	movlw	0
  9354     0D6A  00CD               	movwf	___fldiv@new_exp+1
  9355     0D6B  3000               	movlw	0
  9356     0D6C  00C1               	movwf	___fldiv@b+3
  9357     0D6D  3000               	movlw	0
  9358     0D6E  00C0               	movwf	___fldiv@b+2
  9359     0D6F  3000               	movlw	0
  9360     0D70  00BF               	movwf	___fldiv@b+1
  9361     0D71  3000               	movlw	0
  9362     0D72  00BE               	movwf	___fldiv@b
  9363     0D73                     i1l3068:
  9364     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  9365     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  9366     0D75  084D               	movf	___fldiv@new_exp+1,w
  9367     0D76  3A80               	xorlw	128
  9368     0D77  00FF               	movwf	btemp+1
  9369     0D78  3080               	movlw	128
  9370     0D79  027F               	subwf	btemp+1,w
  9371     0D7A  1D03               	skipz
  9372     0D7B  2D7E               	goto	u454_25
  9373     0D7C  3001               	movlw	1
  9374     0D7D  024C               	subwf	___fldiv@new_exp,w
  9375     0D7E                     u454_25:
  9376     0D7E  1803               	skipnc
  9377     0D7F  2D81               	goto	u454_21
  9378     0D80  2D82               	goto	u454_20
  9379     0D81                     u454_21:
  9380     0D81  2D8F               	goto	i1l703
  9381     0D82                     u454_20:
  9382     0D82                     i1l3070:
  9383     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  9384     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  9385     0D84  01CC               	clrf	___fldiv@new_exp
  9386     0D85  01CD               	clrf	___fldiv@new_exp+1
  9387     0D86                     i1l3072:
  9388     0D86  3000               	movlw	0
  9389     0D87  00C1               	movwf	___fldiv@b+3
  9390     0D88  3000               	movlw	0
  9391     0D89  00C0               	movwf	___fldiv@b+2
  9392     0D8A  3000               	movlw	0
  9393     0D8B  00BF               	movwf	___fldiv@b+1
  9394     0D8C  3000               	movlw	0
  9395     0D8D  00BE               	movwf	___fldiv@b
  9396     0D8E                     i1l3074:
  9397     0D8E  01CB               	clrf	___fldiv@sign
  9398     0D8F                     i1l703:
  9399     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  9400     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  9401     0D91  084C               	movf	___fldiv@new_exp,w
  9402     0D92  00D2               	movwf	___fldiv@bexp
  9403     0D93                     i1l3076:
  9404     0D93  1C52               	btfss	___fldiv@bexp,0
  9405     0D94  2D96               	goto	u455_21
  9406     0D95  2D97               	goto	u455_20
  9407     0D96                     u455_21:
  9408     0D96  2D99               	goto	i1l3080
  9409     0D97                     u455_20:
  9410     0D97                     i1l3078:
  9411     0D97  17C0               	bsf	___fldiv@b+2,7
  9412     0D98  2D9D               	goto	i1l705
  9413     0D99                     i1l3080:
  9414     0D99  307F               	movlw	127
  9415     0D9A  00C2               	movwf	??___fldiv
  9416     0D9B  0842               	movf	??___fldiv,w
  9417     0D9C  05C0               	andwf	___fldiv@b+2,f
  9418     0D9D                     i1l705:
  9419     0D9D  0852               	movf	___fldiv@bexp,w
  9420     0D9E  00C2               	movwf	??___fldiv
  9421     0D9F  1003               	clrc
  9422     0DA0  0C42               	rrf	??___fldiv,w
  9423     0DA1  00C1               	movwf	___fldiv@b+3
  9424     0DA2  084B               	movf	___fldiv@sign,w
  9425     0DA3  00C2               	movwf	??___fldiv
  9426     0DA4  0842               	movf	??___fldiv,w
  9427     0DA5  04C1               	iorwf	___fldiv@b+3,f
  9428     0DA6  2C43               	goto	i1l2988
  9429     0DA7                     i1l683:
  9430     0DA7  0008               	return
  9431     0DA8                     __end_of___fldiv:
  9432     007E                     btemp	set	126	;btemp
  9433     007E                     wtemp0	set	126
  9434                           
  9435                           	psect	idloc
  9436                           
  9437                           ;Config register IDLOC0 @ 0x2000
  9438                           ;	unspecified, using default values
  9439     2000                     	org	8192
  9440     2000  3FFF               	dw	16383
  9441                           
  9442                           ;Config register IDLOC1 @ 0x2001
  9443                           ;	unspecified, using default values
  9444     2001                     	org	8193
  9445     2001  3FFF               	dw	16383
  9446                           
  9447                           ;Config register IDLOC2 @ 0x2002
  9448                           ;	unspecified, using default values
  9449     2002                     	org	8194
  9450     2002  3FFF               	dw	16383
  9451                           
  9452                           ;Config register IDLOC3 @ 0x2003
  9453                           ;	unspecified, using default values
  9454     2003                     	org	8195
  9455     2003  3FFF               	dw	16383
  9456                           
  9457                           	psect	config
  9458                           
  9459                           ;Config register CONFIG1 @ 0x2007
  9460                           ;	Oscillator Selection bits
  9461                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9462                           ;	Watchdog Timer Enable bit
  9463                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9464                           ;	Power-up Timer Enable bit
  9465                           ;	PWRTE = OFF, PWRT disabled
  9466                           ;	RE3/MCLR pin function select bit
  9467                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9468                           ;	Code Protection bit
  9469                           ;	CP = OFF, Program memory code protection is disabled
  9470                           ;	Data Code Protection bit
  9471                           ;	CPD = OFF, Data memory code protection is disabled
  9472                           ;	Brown Out Reset Selection bits
  9473                           ;	BOREN = OFF, BOR disabled
  9474                           ;	Internal External Switchover bit
  9475                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9476                           ;	Fail-Safe Clock Monitor Enabled bit
  9477                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9478                           ;	Low Voltage Programming Enable bit
  9479                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9480                           ;	In-Circuit Debugger Mode bit
  9481                           ;	DEBUG = 0x1, unprogramme  9482     2007                     	org	8199
  9483     2007  20D4               	dw	8404
  9484                           
  9485                           ;Config register CONFIG2 @ 0x2008
  9486                           ;	Brown-out Reset Selection bit
  9487                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9488                           ;	Flash Program Memory Self Write Enable bits
  9489                           ;	WRT = OFF, Write protection off
  9490     2008                     	org	8200
  9491     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        4
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      80
    BANK1            80     58      71
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    USART_print@string	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[2]), 

    adc_change_channel@channel	PTR const int  size(1) Largest target is 4
		 -> channels(BANK1[4]), 

    Lcd_Write_Str@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[14]), buffer2(BANK3[20]), buffer(BANK0[20]), 

    floatToStr@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    uint8ToStr@str	PTR unsigned char  size(1) Largest target is 20
		 -> buffer2(BANK3[20]), 

    intToStr@str	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    reverse@str	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK3[20]), buffer(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___xxtofl
    i1___flmul->i1___xxtofl
    ___fldiv->i1___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___fldiv
    ___fldiv->i1___flmul

Critical Paths under _main in BANK1

    _main->_floatToStr
    _uint8ToStr->_reverse
    _setup->_USART_init_baud
    _USART_init_baud->___lldiv
    _Lcd_Write_Str->_Lcd_Write
    _Lcd_Set->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _floatToStr->___flmul
    _intToStr->_reverse
    ___fltol->___fladd
    ___flsub->___fladd
    ___flmul->__Umul8_16
    _USART_print->_USART_send

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   16949
                                             57 BANK1      1     1      0
                            _Lcd_Set
                      _Lcd_Write_Str
                        _USART_print
                 _adc_change_channel
                         _floatToStr
                              _setup
                         _uint8ToStr
 ---------------------------------------------------------------------------------
 (1) _uint8ToStr                                           7     6      1    2236
                                             16 BANK1      7     6      1
                            ___awdiv
                            ___awmod
                            _reverse
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1278
                          _Lcd_Clear
                           _Lcd_Init
                            _Lcd_Set
                      _Lcd_Write_Str
                    _USART_init_baud
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             3     1      2      98
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _USART_init_baud                                     10     6      4     458
                                             14 BANK1     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Str                                        7     5      2     340
                                              2 BANK1      7     5      2
                          _Lcd_Write
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write                                            2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set                                              2     1      1     338
                                              3 BANK1      2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              3 BANK1      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _floatToStr                                          22    15      7   12340
                                             35 BANK1     22    15      7
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _intToStr
 ---------------------------------------------------------------------------------
 (2) _intToStr                                             8     3      5    2837
                                             16 BANK1      8     3      5
                            ___awdiv
                            ___awmod
                            _reverse
 ---------------------------------------------------------------------------------
 (2) _reverse                                             16    12      4     647
                                              0 BANK1     16    12      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     448
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             20 BANK1     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             20 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                              0 BANK1     20    12      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2517
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _adc_change_channel                                   6     4      2     153
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _USART_print                                          7     5      2     264
                                              1 BANK1      7     5      2
                         _USART_send
 ---------------------------------------------------------------------------------
 (2) _USART_send                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0    3488
                                             52 BANK0      4     4      0
                            ___fldiv
                    _adc_get_channel
                           _adc_read
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (5) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) i1___flmul                                           26    18      8    1867
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) i1__Umul8_16                                          9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _adc_get_channel                                      5     3      2       0
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1273
                                             26 BANK0     26    18      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set
     _Lcd_Cmd
   _Lcd_Write_Str
     _Lcd_Write
   _USART_print
     _USART_send
   _adc_change_channel
   _floatToStr
     ___fladd
     ___flge
     ___flmul
       __Umul8_16
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
     ___xxtofl
     _intToStr
       ___awdiv
       ___awmod
       _reverse
   _setup
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set
     _Lcd_Write_Str
     _USART_init_baud
       ___lldiv
     _adc_init
   _uint8ToStr
     ___awdiv
     ___awmod
     _reverse

 _isr (ROOT)
   ___fldiv
     i1___flmul (ARG)
       i1__Umul8_16
       i1___xxtofl (ARG)
     i1___xxtofl (ARG)
   _adc_get_channel
   _adc_read
   i1___flmul
   i1___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3A      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     38      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B9      12        0.0%
ABS                  0      0      B9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 27 22:55:41 2023

                   _USART_print 140E                    ___fldiv@aexp 0053                    ___fldiv@bexp 0052  
                             _x 00E0                               pc 0002                    ___fldiv@sign 004B  
                  ___awdiv@sign 00A6                     i1___flmul@a 0024                     i1___flmul@b 0020  
                            fsr 0004             __Umul8_16@word_mpld 00A6                      i1___xxtofl 09E7  
                           l110 17FF                             l104 15C5                             l132 0BD4  
                           l124 1509                             l222 140D                             l119 1781  
                           l143 12B6                             l152 12D6                             l225 1260  
                           l146 080E                             l155 1629                             l228 1268  
                           l164 14B5                             l237 1461                             l510 0938  
                           l158 129A                             l185 1375                             l506 08B3  
                           l514 1282                             l195 13BC                             l509 091F  
                           l525 16F4                             l518 1709                             l631 0E5F  
                           l528 1709                             l368 1691                             l721 038F  
                           l625 0E03                             l650 0F73                             l740 1338  
                           l733 0383                             l629 0E86                             l485 07F7  
                           l742 134A                             l646 0F4F                             l638 0FFF  
                           l727 02FF                             l671 12FA                             l656 0F95  
                           l498 1564                             l667 0FF5                             l659 0FD3  
                           l771 073C                             l668 0FFF                             l765 06F9  
                           l767 078E                             l778 0758                             l779 0764  
                           _RC4 003C                             _RC5 003D                 _USART_init_baud 13BD  
                           _isr 0939                             fsr0 0004                             indf 0000  
                  ___awmod@sign 00A6                    ___flmul@aexp 00BB                    ___flmul@bexp 00BC  
                  ___flmul@sign 00B6                    ___flmul@temp 00C1                    ___flmul@prod 00BD  
                  ___fltol@exp1 00BD                            l2110 129E                            l2200 1516  
                          l2112 12A1                            l2120 1289                            l2210 152A  
                          l2202 1518                            l2114 12A7                            l2122 128F  
                          l2130 163F                            l2300 0E25                            l2220 1549  
                          l2212 1531                            l2204 151C                            l2116 12B3  
                          l2124 1297                            l2140 1679                            l2132 164C  
                          l2302 0E27                            l2310 0E2F                            l2150 078F  
                          l2222 1550                            l2214 1535                            l2206 1521  
                          l2118 1286                            l2142 167A                            l2134 1650  
                          l2126 162A                            l2400 0F9F                            l2320 0E6C  
                          l2312 0E30                            l2304 0E29                            l2240 0DB6  
                          l2232 0DA8                            l2160 07A1                            l2152 0792  
                          l2216 1539                            l2208 1527                            l2224 1556  
                          l2144 1683                            l2136 1659                            l2128 163C  
                          l2410 0FDD                            l2402 0FAD                            l2330 0E8A  
                          l2322 0E70                            l2314 0E47                            l2306 0E2B  
                          l2242 0DBB                            l2250 0DCB                            l2234 0DAD  
                          l2170 07B5                            l2162 07A6                            l2154 0796  
                          l2226 155B                            l2218 1543                            l2138 166B  
                          l2146 1689                            l2420 0FF1                            l2412 0FE5  
                          l2404 0FB1                            l2340 0EB3                            l2332 0E8F  
                          l2324 0E71                            l2316 0E63                            l2308 0E2D  
                          l2260 0DE1                            l2252 0DD3                            l2244 0DC0  
                          l2236 0DB1                            l2180 07DB                            l2172 07BC  
                          l2164 07AA                            l2156 079B                            l2228 1560  
                          l2500 1607                            l2430 132E                            l2422 0FFA  
                          l2414 0FEA                            l2406 0FCF                            l2350 0EC5  
                          l2342 0EB7                            l2326 0E7A                            l2318 0E6A  
                          l2270 0DF8                            l2262 0DE5                            l2254 0DD6  
                          l2246 0DC8                            l2238 0DB5                            l2190 07F3  
                          l2182 07DC                            l2174 07C0                            l2166 07AC  
                          l2158 079D                            l2510 0802                            l2502 160D  
                          l2432 1332                            l2424 0FFE                            l2416 0FEB  
                          l2408 0FD8                            l2360 0F2D                            l2352 0ECE  
                          l2344 0EBE                            l2336 0E98                            l2328 0E7E  
                          l2280 0E11                            l2272 0DF9                            l2264 0DE6  
                          l2256 0DDC                            l2248 0DC9                            l2600 16F9  
                          l2184 07E3                            l2176 07C4                            l2168 07B2  
                          l3400 0BB5                            l2504 1613                            l2440 12BA  
                          l2434 1341                            l2426 1325                            l2610 004B  
                          l2418 0FEF                            l2362 0F32                            l2346 0EC0  
                          l2338 0EAF                            l2354 0ED3                            l2290 0E1B  
                          l2282 0E13                            l2266 0DEB                            l2274 0DFB  
                          l2258 0DDD                            l2602 16FE                            l2178 07D5  
                          l2186 07E9                            l2194 150A                            l3402 0BCC  
                          l2506 1619                            l2442 12BF                            l2450 1467  
                          l3410 14D6                            l2540 0895                            l2436 1346  
                          l2428 1327                            l2700 02CF                            l2620 005E  
                          l2612 0050                            l2380 0F7A                            l2372 0F65  
                          l2356 0EE9                            l2364 0F41                            l2348 0EC4  
                          l2292 0E1D                            l2284 0E15                            l2276 0E09  
                          l2268 0DF0                            l2604 12D7                            l2188 07EE  
                          l2196 150D                            l3340 17EB                            l3332 1782  
                          l3404 0BD0                            l2508 161F                            l2444 12C8  
                          l2452 148B                            l2460 13D2                            l3412 14DC  
                          l2550 08F7                            l2542 08AB                            l2710 02E4  
                          l2702 02D0                            l2630 007A                            l2622 0063  
                          l2614 0054                            l2390 0F88                            l2382 0F7C  
                          l2374 0F6E                            l2366 0F57                            l2358 0F27  
                          l2294 0E1F                            l2286 0E17                            l2278 0E0D  
                          l2606 12DB                            l2198 1511                            l3342 17F1  
                          l3334 1786                            l3350 172D                            l2446 12CE  
                          l2454 1493                            l2462 1402                            l2470 1354  
                          l3414 14F0                            l3406 14B9                            l3430 0829  
                          l3422 080F                            l2536 1260                            l2552 08FB  
                          l2544 08C7                            l2720 0309                            l2712 02E8  
                          l2704 02D9                            l2640 008D                            l2632 007E  
                          l2624 006B                            l2616 0058                            l2560 1276  
                          l2392 0F8C                            l2384 0F81                            l2376 0F72  
                          l2368 0F5C                            l2296 0E21                            l2288 0E19  
                          l3336 178F                            l3360 1765                            l3352 1740  
                          l3344 170A                            l2448 1462                            l2464 140B  
                          l2456 13BD                            l2480 1372                            l2472 1364  
                          l3416 14F5                            l3408 14BB                            l3440 0869  
                          l3432 0835                            l3424 0814                            l2538 1264  
                          l2554 0935                            l2546 08CF                            l2730 0347  
                          l2722 0317                            l2714 02FC                            l2706 02DF  
                          l2650 00A9                            l2642 0095                            l2634 0082  
                          l2626 006D                            l2618 0059                            l2562 1280  
                          l2394 0F92                            l2378 0F77                            l2386 0F83  
                          l2298 0E23                            l2570 169D                            l3338 17E5  
                          l3362 1774                            l3354 1747                            l3346 170F  
                          l3370 0ABA                            l2490 15E5                            l2482 15C6  
                          l2458 13D2                            l2474 1367                            l2466 134B  
                          l3418 14FC                            l3442 0873                            l3434 084A  
                          l3426 081B                            l2556 0937                            l2548 08D3  
                          l2740 0379                            l2732 0352                            l2724 031B  
                          l2708 02E3                            l2660 00E8                            l2644 0097  
                          l2636 0083                            l2628 0075                            l2564 1282  
                          l2388 0F87                            l2580 16C2                            l3364 177D  
                          l3356 1751                            l3348 1727                            l3380 0B21  
                          l3372 0AD3                            l2492 15EB                            l2484 15C9  
                          l2476 136E                            l2468 1351                            l2820 1578  
                          l3444 087E                            l3436 0854                            l3428 081E  
                          l2742 037D                            l2734 0361                            l2726 0334  
                          l2718 0304                            l2670 016F                            l2662 0104  
                          l2654 00B2                            l2646 009F                            l2638 0088  
                          l2398 0F9A                            l2590 16D0                            l2582 16C4  
                          l2574 16A6                            l2750 06D8                            l3358 1757  
                          l3390 0B85                            l3382 0B24                            l3374 0AD8  
                          l2494 15F5                            l2486 15D4                            l2478 1371  
                          l2830 1584                            l2822 1579                            l3446 0886  
                          l3438 085F                            l2744 037E                            l2736 036B  
                          l2728 033A                            l2680 01DC                            l2672 017D  
                          l2664 012E                            l2656 00C0                            l2648 00A4  
                          l2584 16C8                            l2592 16E2                            l2576 16B9  
                          l2568 1692                            l2752 06DD                            l3392 0B99  
                          l3384 0B45                            l3376 0ADC                            l3368 0A9F  
                          l2496 15FB                            l2488 15DA                            l2840 1590  
                          l2832 1587                            l2824 157C                            l2816 1565  
                          l3448 0888                            l2746 0387                            l2738 036D  
                          l2690 0283                            l2682 01F9                            l2674 019A  
                          l2666 014A                            l2658 00CD                            l2578 16BA  
                          l2770 0725                            l2762 070A                            l2754 06E1  
                          l3394 0B9D                            l3386 0B4B                            l3378 0AF1  
                          l2498 1601                            l2850 15B9                            l2842 159A  
                          l2834 158A                            l2826 157D                            l2818 1574  
                          l2692 02AB                            l2684 0224                            l2676 01A8  
                          l2668 0166                            l2780 075C                            l2772 0733  
                          l2764 070D                            l2756 06F1                            l3396 0BAA  
                          l3388 0B59                            l2860 15C0                            l2852 15BC  
                          l2844 159F                            l2836 158B                            l2828 1580  
                          l2870 140E                            l2694 02B4                            l2686 0232  
                          l2678 01C5                            l2598 16E9                            l2790 0786  
                          l2782 0766                            l2774 0743                            l2766 071A  
                          l2758 0701                            l3398 0BB1                            l2862 15C1  
                          l2854 15BD                            l2846 15A4                            l2838 158E  
                          l2872 1413                            l2880 137F                            l2696 02C2  
                          l2688 025D                            l2784 077C                            l2776 074E  
                          l2768 0721                            l2864 15C2                            l2856 15BE  
                          l2848 15AE                            l2874 1437                            l2882 1395  
                          l2698 02CB                            l2786 0781                            l2778 0752  
                          l2866 15C3                            l2858 15BF                            l2876 143F  
                          l2884 1399                            l2788 0785                            l2868 15C4  
                          l2886 13B2                            l2878 1379                            l2888 13B9  
                          ?_isr 0070                            STR_1 101E                            STR_2 1010  
                          u3000 0E70                            u3001 0E6F                            u3100 0EE9  
                          u3020 0E86                            u3101 0EE8                            u3021 0E85  
                          u3030 0E8A                            u3111 0F00                            u3103 0EE5  
                          u3031 0E89                            u3015 0E73                            u4000 037D  
                          u3200 0F87                            u3120 0F14                            u3112 0F01  
                          u3040 0E8F                            u4001 037C                            u3201 0F86  
                          u3121 0F15                            u3113 0F06                            u3041 0E8E  
                          u3210 0F8C                            u3130 0F32                            u3122 0F1A  
                          u3114 0F07                            u4010 06DD                            u3211 0F8B  
                          u3131 0F31                            u3123 0F1B                            u3115 0F0C  
                          u3051 0EA1                            u4011 06DC                            u3300 0FEA  
                          u3220 0F92                            u3140 0F57                            u3116 0F0D  
                          u3060 0EB3                            u3052 0EA8                            u4100 0758  
                          u4020 06E1                            u3301 0FE9                            u3221 0F91  
                          u3141 0F56                            u3061 0EB2                            u3053 0EAF  
                          u4101 0757                            u4021 06E0                            u3310 0FEF  
                          u3230 0F99                            u3150 0F5C                            u3070 0EB7  
                          u4110 075C                            u4030 0701                            u3311 0FEE  
                          u3231 0F98                            u3151 0F5B                            u3071 0EB6  
                          u4111 075B                            u4031 0700                            u4200 1461  
                          u3320 0FFE                            u3240 0F9F                            u3080 0EC4  
                          u4120 0771                            u3400 14B5                            u4201 1460  
                          u3321 0FFD                            u3241 0F9E                            u3081 0EC3  
                          u3401 14B4                            u4210 137F                            u3330 1332  
                          u3250 0FB1                            u3170 0F72                            u4130 0781  
                          u4050 0720                            u2610 163C                            u3410 13E0  
                          u4211 137E                            u3331 1331                            u3251 0FB0  
                          u3171 0F71                            u4131 0780                            u4051 071F  
                          u2611 163B                            u4220 1395                            u3500 08FB  
                          u3260 0FC0                            u3180 0F77                            u4140 0785  
                          u2700 07B2                            u3420 140B                            u4221 1394  
                          u3501 08FA                            u3181 0F76                            u3165 0F67  
                          u4141 0784                            u4125 076C                            u4045 0712  
                          u2701 07B1                            u3421 140A                            u3350 1346  
                          u3270 0FCF                            u3190 0F81                            u4070 0742  
                          u2630 1650                            u3511 090A                            u3351 1345  
                          u3271 0FCE                            u3191 0F80                            u3095 0EC7  
                          u4071 0741                            u2631 164F                            u3415 13DB  
                          u3520 0935                            u3512 090B                            u3280 0FD8  
                          u3600 16E8                            u2720 07C4                            u2800 1527  
                          u5200 1765                            u3360 12BF                            u4225 1391  
                          u3521 0934                            u3513 0910                            u3345 1339  
                          u3281 0FD7                            u3265 0FBB                            u3601 16E7  
                          u4065 0734                            u2721 07C3                            u2801 1526  
                          u5201 1764                            u3361 12BE                            u2625 1641  
                          u3450 1264                            u3514 0911                            u3530 1280  
                          u3290 0FDD                            u4090 0752                            u5210 0ABA  
                          u3370 12CE                            u2650 166B                            u3451 1263  
                          u3515 0916                            u3531 127F                            u3291 0FDC  
                          u4091 0751                            u2715 07B6                            u5211 0AB9  
                          u3371 12CD                            u2651 166A                            u4180 141F  
                          u3516 0917                            u3460 08AB                            u3700 00A4  
                          u2900 0DDC                            u3620 16F9                            u3540 169D  
                          u2740 07D5                            u2820 1539                            u5140 179B  
                          u5220 0B59                            u3380 1473                            u3525 0931  
                          u3461 08AA                            u3701 00A3                            u2901 0DDB  
                          u3621 16F8                            u3541 169C                            u4085 0747  
                          u2741 07D4                            u2821 1538                            u5205 1761  
                          u5221 0B58                            u2645 1652                            u4190 1449  
                          u3470 08C7                            u3710 00A9                            u2910 0DE5  
                          u3630 16FE                            u3550 16B4                            u2830 1543  
                          u5150 17B0                            u5230 0BAA                            u3390 149D  
                          u2670 1689                            u3471 08C6                            u3711 00A8  
                          u2911 0DE4                            u3631 16FD                            u3615 16EB  
                          u2735 07C5                            u2831 1542                            u2815 152B  
                          u5231 0BA9                            u2671 1688                            u2655 1667  
                          u3480 08D3                            u3640 0058                            u2920 0DEB  
                          u3560 16C8                            u2760 07E9                            u2680 0796  
                          u5160 17C5                            u5240 14F5                            u3481 08D2  
                          u3801 01EB                            u3721 00F6                            u3641 0057  
                          u2921 0DEA                            u3561 16C7                            u2761 07E8  
                          u2745 07D1                            u2681 0795                            u5225 0B55  
                          u2665 167B                            u5241 14F4                            u3802 01F2  
                          u3722 00FD                            u3650 005E                            u2930 0DF0  
                          u3570 16CF                            u2770 07EE                            u2690 07A1  
                          u2850 1556                            u5170 17DA                            u5250 0886  
                          u3491 08E2                            u3811 0216                            u3803 01F9  
                          u3731 0112                            u3723 0104                            u3651 005D  
                          u2931 0DEF                            u3571 16CE                            u3555 16AF  
                          u2771 07ED                            u2755 07DD                            u2691 07A0  
                          u2851 1555                            u2835 153F                            u5235 0BA6  
                          u5307 15E0                            u5251 0885                            u3492 08E3  
                          u3812 021D                            u3732 0119                            u3660 0063  
                          u2940 0E09                            u2860 155B                            u2780 1511  
                          u5180 17FF                            u3493 08E8                            u3821 0241  
                          u3813 0224                            u3741 013C                            u3733 0120  
                          u3661 0062                            u2941 0E08                            u2861 155A  
                          u2845 154A                            u2781 1510                            u5181 17FE  
                          u5317 15F1                            u3494 08E9                            u3910 02E3  
                          u3830 0269                            u3822 0248                            u3742 0143  
                          u3670 0082                            u2950 0E0D                            u2870 0DB5  
                          u3590 16E1                            u2790 151C                            u5190 1746  
                          u3495 08EE                            u3911 02E2                            u3823 024F  
                          u3751 0158                            u3743 014A                            u3671 0081  
                          u2951 0E0C                            u2871 0DB4                            u3591 16E0  
                          u2791 151B                            u5191 1745                            u5327 1625  
                          u3496 08EF                            u3920 02E8                            u3752 015F  
                          u3680 0088                            u2960 0E47                            u2880 0DBB  
                          u3921 02E7                            u3905 02D2                            u3841 0275  
                          u3753 0166                            u3681 0087                            u2961 0E46  
                          u2881 0DBA                            u3585 16D1                            u5185 17FB  
                          u5337 12AE                            u3930 02FC                            u3850 0291  
                          u3842 027C                            u3690 008D                            u2970 0E52  
                          u2890 0DC0                            u5347 13B6                            u3931 02FB  
                          u3843 0283                            u3835 0264                            u3771 018C  
                          u3691 008C                            u2971 0E50                            u2891 0DBF  
                          u5267 0818                            u3940 0303                            u3772 0193  
                          u2980 0E53                            _RCIF 0065                            u3941 0302  
                          u3861 029D                            u3781 01B7                            u3773 019A  
                          u3765 0168                            u2965 0E43                            u5277 136B  
                          u3950 0309                            u3862 02A4                            u3782 01BE  
                          u2990 0E63                            u3951 0308                            u3863 02AB  
                          u3855 028C                            u3783 01C5                            u2991 0E62  
                          u5287 1294                            u3960 031B                            u3961 031A  
                          u5297 15CF                            u3970 032A                            u3890 02CF  
                          u3891 02CE                            u3875 02AD                            u3795 01C7  
                          i1l92 09DE                            u3980 0347                            u3981 0346  
                          u3885 02C4                            u3990 0361                            u3991 0360  
                          u3975 0325                            u3985 0343                            u3995 035D  
                          _TRMT 04C1                            _cont 00E2                            _main 080F  
                 i1___flmul@grs 002E                            btemp 007E                            _volt 00DA  
                          start 0010                 ___fldiv@new_exp 004C                 __end_of_Lcd_Cmd 12B7  
               __end_of_Lcd_Set 12D7                     floatToStr@i 00D1                           ??_isr 0054  
                 ___fltol@sign1 00BC                 __end_of___fladd 1000                           ?_main 0070  
               __end_of___fldiv 0DA8                 __end_of___awdiv 07F8                 __end_of___flneg 1283  
               __end_of___awmod 1565                 __end_of___flmul 0390                 __end_of___flsub 12FB  
               __end_of___fltol 170A                           _ANSEL 0188                 __end_of___lldiv 1692  
               ___awdiv@divisor 00A0                           i1l188 125C                           i1l198 1275  
                         i1l703 0D8F                           i1l705 0D9D                           i1l721 06D4  
                         i1l740 130F                           i1l733 06C8                           i1l742 1321  
                         i1l727 0644                           i1l681 0C2B                           i1l683 0DA7  
                         i1l771 0A4C                           i1l765 0A09                           i1l767 0A9E  
                         i1l697 0D1D                           i1l778 0A68                           i1l779 0A74  
               ___awdiv@counter 00A5                           _RCREG 001A                           _SPBRG 0099  
                         _PORTA 0005                           _PORTC 0007                           _PORTD 0008  
                         _PORTE 0009                           _TRISA 0085                           _TRISD 0088  
                         _TRISE 0089                           _TXREG 0019                  i1___flmul@aexp 0032  
                i1___flmul@bexp 0033                  i1___flmul@sign 002D                  i1___flmul@temp 0038  
                i1___flmul@prod 0034                           _setup 1565                           pclath 000A  
               __end_of_reverse 1800                           status 0003                           wtemp0 007E  
              __end_of_Lcd_Init 162A                 __initialization 0013                     ?_USART_send 0070  
                  __end_of_main 0895         __end_of_USART_init_baud 140E                    USART_print@i 00A6  
                        ??_main 00D9                     ?i1___xxtofl 0070                          _ADRESH 001E  
              ___awdiv@dividend 00A2                          ?_setup 0070                          _ANSELH 0189  
              __end_of_adc_init 1376                __end_of_adc_read 125D                          i1l3000 0C6C  
                        i1l3010 0C8B                          i1l3002 0C74                          i1l3020 0CBD  
                        i1l3012 0C9D                          i1l3004 0C7C                          i1l3100 03B0  
                        i1l3030 0CDE                          i1l3022 0CBE                          i1l3014 0CA1  
                        i1l3006 0C84                          i1l3110 03C7                          i1l3102 03B2  
                        i1l3040 0CF7                          i1l3032 0CE0                          i1l3024 0CCC  
                        i1l3016 0CA2                          i1l3008 0C86                          i1l3200 0660  
                        i1l3120 03DC                          i1l3112 03C8                          i1l3104 03BA  
                        i1l3050 0D1A                          i1l3034 0CE9                          i1l3042 0CFD  
                        i1l3018 0CAB                          i1l3026 0CD0                          i1l3210 06A6  
                        i1l3202 0679                          i1l3130 03F7                          i1l3122 03E4  
                        i1l3114 03CD                          i1l3106 03BF                          i1l3060 0D39  
                        i1l3044 0D01                          i1l3036 0CED                          i1l3028 0CD6  
                        i1l3220 06C3                          i1l3212 06B0                          i1l3204 067F  
                        i1l3140 0473                          i1l3132 0405                          i1l3124 03E9  
                        i1l3116 03D2                          i1l3108 03C3                          i1l3070 0D82  
                        i1l3062 0D52                          i1l3054 0D22                          i1l3046 0D02  
                        i1l3038 0CEE                          i1l3222 06CC                          i1l3214 06B2  
                        i1l3206 068C                          i1l3150 04DF                          i1l3142 048F  
                        i1l3134 0412                          i1l3126 03EE                          i1l3118 03DA  
                        i1l3230 09F1                          i1l3080 0D99                          i1l3072 0D86  
                        i1l3056 0D27                          i1l3064 0D58                          i1l3048 0D06  
                        i1l3216 06BE                          i1l3208 0697                          i1l3160 0569  
                        i1l3152 04ED                          i1l3144 04AB                          i1l3136 042D  
                        i1l3240 0A1D                          i1l3232 0A01                          i1l3074 0D8E  
                        i1l3066 0D65                          i1l3058 0D35                          i1l3218 06C2  
                        i1l3170 05F9                          i1l3162 0577                          i1l3154 050A  
                        i1l3146 04B4                          i1l3138 0449                          i1l3090 0399  
                        i1l3250 0A53                          i1l3242 0A2A                          i1l3234 0A11  
                        i1l3226 09E8                          i1l3076 0D93                          i1l3068 0D73  
                        i1l3180 061E                          i1l3172 0607                          i1l3164 05A2  
                        i1l3156 0521                          i1l3148 04C2                          i1l3092 039D  
                        i1l3260 0A8C                          i1l3252 0A5E                          i1l3244 0A31  
                        i1l3228 09ED                          i1l3078 0D97                          i1l3190 0641  
                        i1l3174 0610                          i1l3182 0624                          i1l3166 05C8  
                        i1l3158 053E                          i1l3094 039E                          i1l3086 0390  
                        i1l3262 0A91                          i1l3254 0A62                          i1l3246 0A35  
                        i1l3238 0A1A                          i1l3270 0939                          i1l2800 1309  
                        i1l3184 0628                          i1l3176 0614                          i1l3168 05F0  
                        i1l3096 03A3                          i1l3088 0395                          i1l3264 0A95  
                        i1l3256 0A6C                          i1l3248 0A43                          i1l3280 09B1  
                        i1l3272 093D                          i1l2802 1318                          i1l3194 0649  
                        i1l3186 0629                          i1l3178 0615                          i1l3098 03A8  
                        i1l3266 0A96                          i1l3258 0A76                          i1l3290 09C5  
                        i1l3274 0948                          i1l3282 09B3                          i1l2812 1253  
                        i1l2804 131D                          i1l3196 064E                          i1l3188 062D  
                        i1l3292 09CB                          i1l3284 09B7                          i1l3276 0953  
                        i1l3198 065C                          i1l3294 09D0                          i1l3286 09B8  
                        i1l3278 09A6                          i1l2808 1269                          i1l3296 09D6  
                        i1l3288 09BE                          i1l3298 09DC                          i1l2950 0BE2  
                        i1l2960 0BF6                          i1l2952 0BE3                          i1l2944 0BD5  
                        i1l2970 0C0D                          i1l2954 0BE8                          i1l2962 0BF8  
                        i1l2946 0BDA                          i1l2794 12FC                          i1l2980 0C21  
                        i1l2972 0C0E                          i1l2964 0C00                          i1l2956 0BED  
                        i1l2948 0BDE                          i1l2796 12FE                          i1l2974 0C13  
                        i1l2982 0C23                          i1l2966 0C05                          i1l2958 0BF5  
                        i1l2798 1305                          i1l2984 0C33                          i1l2992 0C4C  
                        i1l2976 0C18                          i1l2968 0C09                          i1l2994 0C51  
                        i1l2986 0C3F                          i1l2978 0C20                          i1l2988 0C43  
                        i1l2998 0C5A                          u500_25 0A57                          u501_20 0A62  
                        u501_21 0A61                          u430_20 0C0D                          u502_20 0A68  
                        u510_20 09BE                          u430_21 0C0C                          u502_21 0A67  
                        u510_21 09BD                          u431_20 0C13                          u415_20 1309  
                        u503_20 0A6C                          u511_20 09CB                          u431_21 0C12  
                        u415_21 1308                          u503_21 0A6B                          u511_21 09CA  
                        u440_20 0CBD                          u432_20 0C18                          u504_20 0A81  
                        u512_20 09D6                          u440_21 0CBC                          u432_21 0C17  
                        u512_21 09D5                          u440_25 0CB9                          u416_25 1310  
                        u504_25 0A7C                          u441_20 0CD6                          u433_20 0C33  
                        u417_20 131D                          u505_20 0A91                          u441_21 0CD5  
                        u433_21 0C32                          u417_21 131C                          u505_21 0A90  
                        u450_20 0D27                          u442_20 0CDE                          u434_20 0C51  
                        u506_20 0A95                          u450_21 0D26                          u442_21 0CDD  
                        u434_21 0C50                          u506_21 0A94                          u451_20 0D39  
                        u435_20 0C8B                          u427_20 0BE2                          u507_20 093D  
                        u451_21 0D38                          u435_21 0C8A                          u427_21 0BE1  
                        u507_21 093C                          u443_25 0CE2                          u452_20 0D48  
                        u444_20 0CED                          u428_20 0BE8                          u460_20 03CD  
                        u508_20 0948                          u444_21 0CEC                          u428_21 0BE7  
                        u460_21 03CC                          u508_21 0947                          u452_25 0D43  
                        u436_25 0C8D                          u453_20 0D65                          u429_20 0BED  
                        u461_20 03D2                          u509_20 09B7                          u453_21 0D64  
                        u429_21 0BEC                          u461_21 03D1                          u509_21 09B6  
                        u453_25 0D61                          u445_25 0CF0                          u437_25 0C96  
                        u454_20 0D82                          u446_20 0D01                          u438_20 0CA1  
                        u462_20 03E9                          u454_21 0D81                          u446_21 0D00  
                        u438_21 0CA0                          u470_21 04FC                          u462_21 03E8  
                        u470_22 0503                          u470_23 050A                          u454_25 0D7E  
                        u455_20 0D97                          u447_20 0D06                          u463_20 03EE  
                        u455_21 0D96                          u447_21 0D05                          u463_21 03ED  
                        u439_25 0CA4                          u471_25 050C                          u448_20 0D1A  
                        u456_20 039D                          u448_21 0D19                          u472_21 0530  
                        u464_21 043B                          u456_21 039C                          u472_22 0537  
                        u464_22 0442                          u472_23 053E                          u464_23 0449  
                        u480_25 0609                          u449_20 0D21                          u481_20 0614  
                        u457_20 03A3                          u449_21 0D20                          u481_21 0613  
                        u473_21 055B                          u465_21 0457                          u457_21 03A2  
                        u473_22 0562                          u465_22 045E                          u473_23 0569  
                        u465_23 0465                          u490_20 068C                          u458_20 03A8  
                        u490_21 068B                          u474_21 0586                          u466_21 0481  
                        u458_21 03A7                          u474_22 058D                          u466_22 0488  
                        u474_23 0594                          u466_23 048F                          u490_25 0688  
                        u482_25 0617                          u491_20 06A6                          u483_20 0628  
                        u475_20 05AE                          u459_20 03C7                          u491_21 06A5  
                        u483_21 0627                          u467_21 049D                          u459_21 03C6  
                        u467_22 04A4                          u467_23 04AB                          u491_25 06A2  
                        u475_25 05A9                          u492_20 06C2                          u484_20 062D  
                        u492_21 06C1                          u484_21 062C                          u476_21 05BA  
                        u476_22 05C1                          u476_23 05C8                          u468_25 04AD  
                        u485_20 0641                          u477_20 05D6                          u493_20 09ED  
                        u485_21 0640                          u469_21 04D1                          u493_21 09EC  
                        u469_22 04D8                          u469_23 04DF                          u477_25 05D1  
                        u486_20 0648                          u494_20 09F1                          u486_21 0647  
                        u478_21 05E2                          u494_21 09F0                          u478_22 05E9  
                        u478_23 05F0                          u487_20 064E                          u495_20 0A11  
                        u487_21 064D                          u495_21 0A10                          u479_25 05F2  
                        u488_20 0660                          u488_21 065F                          u496_25 0A22  
                     ??_Lcd_Cmd 00A0                          u489_20 066F                          u497_20 0A30  
                        u497_21 0A2F                          u489_25 066A                          u498_25 0A44  
                        u499_20 0A52                          u499_21 0A51                       ??_Lcd_Set 00A4  
              __end_of___xxtofl 078F                     intToStr@str 00B2       adc_change_channel@channel 00A5  
               floatToStr@value 00C3             floatToStr@precision 00C8                          ___flge 0895  
          USART_init_baud@value 00B6                       ??___fladd 00A8                       ??___fldiv 0042  
                     ??___awdiv 00A4                       ??___flneg 00A4                       ??___awmod 00A4  
                     ??___flmul 00B1                       ??___flsub 00BC                       ??___fltol 00B8  
                     ??___lldiv 00A8                          _buffer 005C                __end_of_intToStr 1782  
              ___awdiv@quotient 00A7                 ___awmod@divisor 00A0                          _numero 005A  
               ___awmod@counter 00A5           __end_of_Lcd_Write_Str 14B6               __end_ofi1___flmul 06D5  
                        saved_w 007E                       ??_reverse 00A4                      ___flge@ff1 00A0  
                    ___flge@ff2 00A4                    ___xxtofl@arg 00AA                    ___xxtofl@exp 00A9  
                  ___xxtofl@val 00A0          floatToStr@floatingPart 00D5         __end_of__initialization 0047  
                    ___flneg@f1 00A0               __end_of_Lcd_Clear 080F                      ___fltol@f1 00B4  
                  ?i1__Umul8_16 0070               __end_of_Lcd_Write 129B                  __pcstackCOMMON 0070  
                  ?_USART_print 00A1                    __pidataBANK1 124F                ?_USART_init_baud 00AE  
                 __end_of_setup 15C6   floatToStr@roundedFloatingPart 00CB                       ?_Lcd_Init 0070  
      adc_change_channel@length 00A0                         ??_setup 00B8                      __pbssBANK0 0058  
                    __pbssBANK1 00DA                      __pbssBANK3 0190                  Lcd_Write_Str@a 00A2  
                Lcd_Write_Str@i 00A7                  i1___xxtofl@arg 007A                  i1___xxtofl@exp 0079  
                i1___xxtofl@val 0070               __end_of__Umul8_16 134B                      __pmaintext 080F  
                       ?___flge 00A0                      __pintentry 0004                       ?_adc_init 00A0  
                     ?_adc_read 0070                       ?___xxtofl 00A0             i1__Umul8_16@product 0074  
                    ??_Lcd_Init 00A3                      _floatToStr 0A9F                      __stringtab 1000  
                       _Lcd_Cmd 129B                       ?_intToStr 00B0                         _Lcd_Set 12B7  
              floatToStr@buffer 00C7                    ??_USART_send 00A0                         ___fladd 0DA8  
                       ___fldiv 0BD5                         ___awdiv 078F                         ___flneg 1276  
                       ___awmod 150A                         ___flmul 004B                         ___flsub 12D7  
                       ___fltol 1692                         ___lldiv 162A                      ??_adc_init 00A2  
                    ??_adc_read 0072                    ??i1___xxtofl 0074                         __ptext1 14B6  
                       __ptext2 1565                         __ptext3 134B                         __ptext4 13BD  
                       __ptext5 162A                         __ptext6 1462                         __ptext7 1283  
                       __ptext8 12B7                         __ptext9 15C6                         _buffer2 0190  
                    ??___xxtofl 00A4                ___awmod@dividend 00A2                         _reverse 1782  
                       _numero2 0058                         clrloop0 07F9              __end_of_USART_send 1269  
          end_of_initialization 0047                      ??_intToStr 00B5               ??_adc_get_channel 0072  
                   reverse@temp 00AB                 ___lldiv@divisor 00A0              __end_ofi1___xxtofl 0A9F  
               ___lldiv@counter 00AD                       _RCSTAbits 0018                     uint8ToStr@i 00B5  
                   uint8ToStr@x 00B4                      _uint8ToStr 14B6           i1__Umul8_16@word_mpld 0076  
                   ___fladd@grs 00B3                   ___xxtofl@sign 00A8                       _TRISCbits 0087  
                     _TRISDbits 0088                       i1___flmul 0390                     ___fldiv@grs 004E  
                   ___fldiv@rem 0047                     ?_floatToStr 00C3                     ___flmul@grs 00B7  
                     _TXSTAbits 0098                       _Lcd_Clear 0802                  __end_of___flge 0939  
                     _Lcd_Write 1283                     _BAUDCTLbits 0187      __end_of_adc_change_channel 13BD  
           start_initialization 0013                     __end_of_isr 09E7                      ?i1___flmul 0020  
                USART_send@data 00A0         USART_init_baud@baudrate 00AE                      ?_Lcd_Clear 0070  
                      ??___flge 00A8                       __Umul8_16 1322                      ?_Lcd_Write 0070  
                   ?_uint8ToStr 00B0                     __pdataBANK1 00E3                 adc_init@channel 00A0  
                     ___fladd@a 00A4                       ___fladd@b 00A0                       ___fldiv@a 003A  
                     ___fldiv@b 003E                       ___flmul@a 00AD                       ___flmul@b 00A9  
                     ___flsub@a 00B4                       ___flsub@b 00B8                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0                 i1___xxtofl@sign 0078  
                      ?_Lcd_Cmd 0070                        ?_Lcd_Set 00A3        i1__Umul8_16@multiplicand 0070  
                      ?___fladd 00A0                        ?___fldiv 003A                        ?___awdiv 00A0  
                      ?___flneg 00A0                        ?___awmod 00A0                        ?___flmul 00A9  
                      ?___flsub 00B4                        ?___fltol 00B4                        ?___lldiv 00A0  
                    ?__Umul8_16 00A0                       __pstrings 1000                   _Lcd_Write_Str 1462  
               _adc_get_channel 1269                        ?_reverse 00A0                     ??i1___flmul 0028  
         floatToStr@integerPart 00D3               interrupt_function 0004                       clear_ram0 07F8  
                      _PIE1bits 008C                      reverse@end 00AE                      reverse@str 00A0  
                      Lcd_Cmd@a 00A2                        _PIR1bits 000C                        Lcd_Set@a 00A4  
                      Lcd_Set@b 00A3                     ??_Lcd_Clear 00A3                     ??_Lcd_Write 00A0  
                    _ADCON0bits 001F                     __stringbase 100F                      _ADCON1bits 009F  
                ?_Lcd_Write_Str 00A2                        _Lcd_Init 15C6                    ??_floatToStr 00CA  
             ??_USART_init_baud 00B2                   ??i1__Umul8_16 0072  adc_change_channel@temp_channel 00DE  
                     intToStr@d 00B3                       intToStr@i 00B6                       intToStr@x 00B0  
                 ??_USART_print 00A3                     ??__Umul8_16 00A2         __end_of_adc_get_channel 1276  
            __end_of_floatToStr 0BD5              __end_of__stringtab 1010                        _adc_init 134B  
                      _adc_read 1253         floatToStr@integerLength 00CD                   reverse@length 00A2  
             USART_print@string 00A1                        ___xxtofl 06D5                        _channels 00E3  
                      __ptext10 0802                        __ptext11 129B                        __ptext20 0DA8  
                      __ptext12 0A9F                        __ptext21 1276                        __ptext13 170A  
                      __ptext30 0390                        __ptext22 004B                        __ptext14 1782  
                      __ptext31 12FB                        __ptext23 1322                        __ptext15 150A  
                      __ptext32 1253                        __ptext24 0895                        __ptext16 078F  
                      __ptext33 1269                        __ptext25 1376                        __ptext17 06D5  
                      __ptext34 0BD5                        __ptext26 140E                        __ptext18 1692  
                      __ptext27 125D                        __ptext19 12D7                        __ptext28 0939  
                      __ptext29 09E7                        _intToStr 170A              _adc_change_channel 1376  
           ?_adc_change_channel 00A0             __end_ofi1__Umul8_16 1322                    ??_uint8ToStr 00B1  
               ??_Lcd_Write_Str 00A4             __end_of_USART_print 1462                      _INTCONbits 000B  
          ??_adc_change_channel 00A2                   uint8ToStr@str 00B0                        intlevel1 0000  
                  reverse@start 00AC          i1__Umul8_16@multiplier 0078              __end_of_uint8ToStr 150A  
              ___lldiv@dividend 00A4                       stringcode 100A                      _OSCCONbits 008F  
              ?_adc_get_channel 0070          __Umul8_16@multiplicand 00A0                      Lcd_Write@a 00A1  
              ___lldiv@quotient 00A9                        stringdir 100A                        stringtab 1000  
                 ___fladd@signs 00B0                    ___fladd@aexp 00B1                    ___fladd@bexp 00B2  
          __Umul8_16@multiplier 00A8                     i1__Umul8_16 12FB               __Umul8_16@product 00A4  
      floatToStr@floatingLength 00CF                      _USART_send 125D  
